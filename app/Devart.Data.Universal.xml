<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Devart.Data.Universal</name>
    <version>3.60.1146.0</version>
    <fullname>Devart.Data.Universal, Version=3.60.1146.0, Culture=neutral, PublicKeyToken=09af7300eec23701</fullname>
  </assembly>
  <members>
    <member name="N:Devart.Common">
      <summary>The <see cref="N:Devart.Common" /> namespace contains classes shared by the Core Lab data providers. </summary>
    </member>
    <member name="T:Devart.Common.DbCommand">
      <summary>Represents a SQL statement that is executed while connected to a data source. </summary>
    </member>
    <member name="M:Devart.Common.DbCommand.Cancel()">
      <summary>Attempts to cancel the execution of a query currently running. </summary>
      <keywords>DbCommand.Cancel method </keywords>
      <keywords>DbCommand.Cancel method </keywords>
    </member>
    <member name="P:Devart.Common.DbCommand.CommandText">
      <summary>Gets or sets the SQL statement to execute against a database. </summary>
      <keywords>DbCommand.CommandText property </keywords>
      <keywords>DbCommand.CommandText property </keywords>
      <value>The SQL statement or stored procedure to execute. The default value is an empty string (""). </value>
    </member>
    <member name="P:Devart.Common.DbCommand.CommandTimeout">
      <summary>Gets or sets the wait time before terminating an attempt to execute a command and generating an error. </summary>
      <keywords>DbCommand.CommandTimeout property </keywords>
      <keywords>DbCommand.CommandTimeout property </keywords>
      <value>The time (in seconds) to wait for the command to execute. The default value is 30 seconds. </value>
    </member>
    <member name="P:Devart.Common.DbCommand.CommandType">
      <summary>Gets or sets a value indicating how the <see cref="P:Devart.Common.DbCommand.CommandText" /> property is to be interpreted. </summary>
      <keywords>DbCommand.CommandType property </keywords>
      <keywords>DbCommand.CommandType property </keywords>
      <value>One of the <see cref="T:System.Data.CommandType" /> values. The default value is <see cref="T:System.Data.CommandType.Text" />. </value>
    </member>
    <member name="P:Devart.Common.DbCommand.Connection">
      <summary>Gets or sets the <see cref="T:Devart.Common.DbConnection" /> used by this instance of the <see cref="T:Devart.Common.DbCommand" />. </summary>
      <keywords>DbCommand.Connection property </keywords>
      <keywords>DbCommand.Connection property </keywords>
      <value>The connection to a database. The default value is a null reference. </value>
    </member>
    <member name="M:Devart.Common.DbCommand.CreateParameter()">
      <summary>Creates a new instance of a <see cref="T:Devart.Common.DbParameter" /> object. </summary>
      <keywords>DbCommand.CreateParameter method </keywords>
      <keywords>DbCommand.CreateParameter method </keywords>
      <returns>A <see cref="T:Devart.Common.DbParameter" /> object. </returns>
    </member>
    <member name="P:Devart.Common.DbCommand.DesignTimeVisible">
      <summary>Gets or sets a value indicating whether the command object should be visible in a customized interface control. </summary>
      <keywords>DbCommand.DesignTimeVisible property </keywords>
      <keywords>DbCommand.DesignTimeVisible property </keywords>
      <value><see langword="true" />, if the command object should be visible in a control; otherwise <see langword="false" />. The default value is <see langword="false" />. </value>
    </member>
    <member name="M:Devart.Common.DbCommand.ExecuteNonQuery()">
      <summary>Executes SQL statement against the <see cref="P:Devart.Common.DbCommand.Connection" /> and returns the number of rows affected. </summary>
      <keywords>DbCommand.ExecuteNonQuery method </keywords>
      <keywords>DbCommand.ExecuteNonQuery method </keywords>
      <returns>For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command. For all other types of statements, the return value is -1. </returns>
    </member>
    <member name="M:Devart.Common.DbCommand.ExecuteReader()">
      <summary>Sends the <see cref="P:Devart.Common.DbCommand.CommandText" /> to the <see cref="P:Devart.Common.DbCommand.Connection" /> and builds a <see cref="T:Devart.Common.DbDataReader" />. </summary>
      <keywords>DbCommand.ExecuteReader method </keywords>
      <keywords>DbCommand.ExecuteReader method </keywords>
      <returns>A <see cref="T:Devart.Common.DbDataReader" /> object. </returns>
    </member>
    <member name="M:Devart.Common.DbCommand.ExecuteReader(System.Data.CommandBehavior)">
      <summary>Sends the <see cref="P:Devart.Common.DbCommand.CommandText" /> to the <see cref="P:Devart.Common.DbCommand.Connection" />, and builds a <see cref="T:Devart.Common.DbDataReader" /> using one of the <see cref="T:System.Data.CommandBehavior" /> values. </summary>
      <keywords>DbCommand.ExecuteReader method </keywords>
      <keywords>DbCommand.ExecuteReader method </keywords>
      <param name="behavior">One of the <see cref="T:System.Data.CommandBehavior" /> values. </param>
      <returns>A <see cref="T:Devart.Common.DbDataReader" /> object. </returns>
    </member>
    <member name="M:Devart.Common.DbCommand.ExecuteScalar()">
      <summary>Executes the query, and returns the first column of the first row in the result set returned by the query. Extra columns or rows are ignored. </summary>
      <keywords>DbCommand.ExecuteScalar method </keywords>
      <keywords>DbCommand.ExecuteScalar method </keywords>
      <returns>The first column of the first row in the result set. </returns>
    </member>
    <member name="P:Devart.Common.DbCommand.Parameters">
      <summary>Gets or sets the <see cref="T:Devart.Common.DbParameterCollection" />. </summary>
      <keywords>DbCommand.Parameters property </keywords>
      <keywords>DbCommand.Parameters property </keywords>
      <value>The parameters of a SQL statement or a stored procedure. The default value is an empty collection. </value>
    </member>
    <member name="M:Devart.Common.DbCommand.Prepare()">
      <summary>Creates a prepared (or compiled) version of the command on the server. </summary>
      <keywords>DbCommand.Prepare method </keywords>
      <keywords>DbCommand.Prepare method </keywords>
    </member>
    <member name="P:Devart.Common.DbCommand.Transaction">
      <summary>Gets the <see cref="T:Devart.Common.DbTransaction" /> in which the <see cref="T:Devart.Common.DbCommand" /> executes. </summary>
      <keywords>DbCommand.Transaction property </keywords>
      <keywords>DbCommand.Transaction property </keywords>
      <value>A <see cref="T:Devart.Common.DbTransaction" />. The default value is a null reference. </value>
    </member>
    <member name="P:Devart.Common.DbCommand.UpdatedRowSource">
      <summary>Gets or sets how command results are applied to the <see cref="T:System.Data.DataRow" /> when used by the <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> method of the <see cref="T:System.Data.Common.DbDataAdapter" />. </summary>
      <keywords>DbCommand.UpdatedRowSource property </keywords>
      <keywords>DbCommand.UpdatedRowSource property </keywords>
      <value>One of the <see cref="T:System.Data.UpdateRowSource" /> values. </value>
    </member>
    <member name="T:Devart.Common.DbCommandBase">
      <summary>Represents a SQL statement or stored procedure to execute against a SQL database. </summary>
    </member>
    <member name="M:Devart.Common.DbCommandBase.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
      <summary>Starts an asynchronous invocation of an <see cref="M:Devart.Common.DbCommandBase.ExecuteNonQuery" /> method. </summary>
      <keywords>DbCommandBase.BeginExecuteNonQuery method </keywords>
      <keywords>DbCommandBase.BeginExecuteNonQuery method </keywords>
      <param name="callback">The delegate to call when the asynchronous invoke is complete. If callback is a null reference (Nothing in Visual Basic), the delegate is not called. </param>
      <param name="stateObject">State information that is passed on to the delegate. </param>
      <returns>An <see cref="T:System.IAsyncResult" /> interface that represents the asynchronous operation started by calling this method.
<para>Refer to <a href="Asynchronous.html">"Asynchronous Query Execution"</a> article for detailed information.</para> </returns>
    </member>
    <member name="M:Devart.Common.DbCommandBase.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
      <summary>Starts an asynchronous invocation of an <see cref="M:Devart.Common.DbCommand.ExecuteReader" /> method. </summary>
      <keywords>DbCommandBase.BeginExecuteReader method </keywords>
      <keywords>DbCommandBase.BeginExecuteReader method </keywords>
      <param name="callback">The delegate to call when the asynchronous invoke is complete. If callback is a null reference (Nothing in Visual Basic), the delegate is not called. </param>
      <param name="stateObject">State information that is passed on to the delegate. </param>
      <param name="behavior">One of the <see cref="T:System.Data.CommandBehavior" /> values. </param>
      <returns>An <see cref="T:System.IAsyncResult" /> interface that represents the asynchronous operation started by calling this method.
<para>Refer to <a href="Asynchronous.html">"Asynchronous Query Execution"</a> article for detailed information.</para> </returns>
    </member>
    <member name="M:Devart.Common.DbCommandBase.Cancel()">
      <summary>Attempts to cancel the execution of a query currently running. </summary>
      <keywords>DbCommandBase.Cancel method </keywords>
      <keywords>DbCommandBase.Cancel method </keywords>
    </member>
    <member name="P:Devart.Common.DbCommandBase.CommandText">
      <summary>Gets or sets the SQL statement to execute against a database. </summary>
      <keywords>DbCommandBase.CommandText property </keywords>
      <keywords>DbCommandBase.CommandText property </keywords>
      <value>The SQL statement or stored procedure to execute. The default value is an empty string (""). </value>
    </member>
    <member name="P:Devart.Common.DbCommandBase.CommandTimeout">
      <summary>Gets or sets the wait time before terminating an attempt to execute a command and generating an error. </summary>
      <keywords>DbCommandBase.CommandTimeout property </keywords>
      <keywords>DbCommandBase.CommandTimeout property </keywords>
      <value>The time (in seconds) to wait for the command to execute. The default value is 30 seconds. </value>
    </member>
    <member name="P:Devart.Common.DbCommandBase.CommandType">
      <summary>Gets or sets a value indicating how the <see cref="P:Devart.Common.DbCommandBase.CommandText" /> property is to be interpreted. </summary>
      <keywords>DbCommandBase.CommandType property </keywords>
      <keywords>DbCommandBase.CommandType property </keywords>
      <value>One of the <see cref="T:System.Data.CommandType" /> values. The default value is <see cref="T:System.Data.CommandType.Text" />. </value>
    </member>
    <member name="P:Devart.Common.DbCommandBase.DesignTimeVisible">
      <summary>Gets or sets a value indicating whether the command object should be visible in a customized interface control. </summary>
      <keywords>DbCommandBase.DesignTimeVisible property </keywords>
      <keywords>DbCommandBase.DesignTimeVisible property </keywords>
      <value><see langword="true" />, if the command object should be visible in a control; otherwise <see langword="false" />. The default value is <see langword="false" />. </value>
    </member>
    <member name="M:Devart.Common.DbCommandBase.EndExecuteNonQuery(System.IAsyncResult)">
      <summary>Ends an asynchronous invocation of the <see cref="M:Devart.Common.DbCommandBase.ExecuteNonQuery" /> method. </summary>
      <keywords>DbCommandBase.EndExecuteNonQuery method </keywords>
      <keywords>DbCommandBase.EndExecuteNonQuery method </keywords>
      <param name="result">The <see cref="T:System.IAsyncResult" /> returned from <see cref="M:Devart.Common.DbCommandBase.BeginExecuteNonQuery" />. </param>
      <returns>For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command. For all other types of statements, the return value is -1. </returns>
    </member>
    <member name="M:Devart.Common.DbCommandBase.EndExecuteReader(System.IAsyncResult)">
      <summary>Ends an asynchronous invocation of the <see cref="M:Devart.Common.DbCommandBase.ExecuteNonQuery" /> method. </summary>
      <keywords>DbCommandBase.EndExecuteReader method </keywords>
      <keywords>DbCommandBase.EndExecuteReader method </keywords>
      <param name="result">The <see cref="T:System.IAsyncResult" /> returned from <see cref="M:Devart.Common.DbCommandBase.BeginExecuteReader" />. </param>
      <returns>A <see cref="T:Devart.Common.DbDataReader" /> object. </returns>
    </member>
    <member name="M:Devart.Common.DbCommandBase.ExecuteNonQuery()">
      <summary>Executes SQL statement against the <see cref="P:Devart.Common.DbCommand.Connection" /> and returns the number of rows affected. </summary>
      <keywords>DbCommandBase.ExecuteNonQuery method </keywords>
      <keywords>DbCommandBase.ExecuteNonQuery method </keywords>
      <returns>For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command. For all other types of statements, the return value is -1. </returns>
    </member>
    <member name="M:Devart.Common.DbCommandBase.ExecutePageDataReader(System.Data.CommandBehavior,System.Int32,System.Int32)">
      <summary>Returns a specific subset of rows when paging through the results of a query. </summary>
      <keywords>DbCommandBase.ExecutePageDataReader method </keywords>
      <keywords>DbCommandBase.ExecutePageDataReader method </keywords>
      <param name="behavior">One of the <see cref="T:System.Data.CommandBehavior" /> values. </param>
      <param name="startRecord">Zero-based ordinal of row that result set starts with. </param>
      <param name="maxRecords">Quantity of rows in result set. </param>
      <returns>A <see cref="T:Devart.Common.DbDataReader" /> object. </returns>
    </member>
    <member name="M:Devart.Common.DbCommandBase.ExecuteScalar()">
      <summary>Executes the query, and returns the first column of the first row in the result set returned by the query. Extra columns or rows are ignored. </summary>
      <keywords>DbCommandBase.ExecuteScalar method </keywords>
      <keywords>DbCommandBase.ExecuteScalar method </keywords>
      <returns>The first column of the first row in the result set. </returns>
    </member>
    <member name="P:Devart.Common.DbCommandBase.Name">
      <summary>Gets or sets the name of component that will be displayed in DBMonitor application. </summary>
      <keywords>DbCommandBase.Name property </keywords>
      <keywords>DbCommandBase.Name property </keywords>
      <value>The name of the component. </value>
    </member>
    <member name="P:Devart.Common.DbCommandBase.ParameterCheck">
      <summary>Gets or sets a value indicating whether the command object regenerates parameter objects if text of the command is changed. </summary>
      <keywords>DbCommandBase.ParameterCheck property </keywords>
      <keywords>DbCommandBase.ParameterCheck property </keywords>
      <value>Value indicating whether the command object regenerates parameter objects if text of the command is changed. The default value is <see langword="false" />. </value>
    </member>
    <member name="M:Devart.Common.DbCommandBase.Prepare()">
      <summary>Creates a prepared (or compiled) version of the command on the server. </summary>
      <keywords>DbCommandBase.Prepare method </keywords>
      <keywords>DbCommandBase.Prepare method </keywords>
    </member>
    <member name="M:Devart.Common.DbCommandBase.ResetCommandTimeout()">
      <summary>Resets <see cref="P:Devart.Common.DbCommandBase.CommandTimeout" /> to its default value. </summary>
      <keywords>DbCommandBase.ResetCommandTimeout method </keywords>
      <keywords>DbCommandBase.ResetCommandTimeout method </keywords>
    </member>
    <member name="P:Devart.Common.DbCommandBase.UpdatedRowSource">
      <summary>Gets or sets how command results are applied to the <see cref="T:System.Data.DataRow" /> when used by the <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> method of the <see cref="T:System.Data.Common.DbDataAdapter" />. </summary>
      <keywords>DbCommandBase.UpdatedRowSource property </keywords>
      <keywords>DbCommandBase.UpdatedRowSource property </keywords>
      <value>One of the <see cref="T:System.Data.UpdateRowSource" /> values. </value>
    </member>
    <member name="T:Devart.Common.DbCommandBuilder">
      <summary>Allows to automatically generate single-table commands used to reconcile changes made to a <see cref="T:System.Data.DataSet" /> with the associated server database. </summary>
    </member>
    <member name="M:Devart.Common.DbCommandBuilder.GetDeleteCommand()">
      <summary>Gets the automatically generated SQL statement required to perform deletions on the database when an application calls <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> on the <see cref="T:System.Data.IDbDataAdapter" />. </summary>
      <keywords>DbCommandBuilder.GetDeleteCommand method </keywords>
      <keywords>DbCommandBuilder.GetDeleteCommand method </keywords>
      <returns>The text of the SQL statement to be executed. </returns>
    </member>
    <member name="M:Devart.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
      <summary>Gets the automatically generated SQL statement required to perform deletions on the database when an application calls <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> on the <see cref="T:System.Data.IDbDataAdapter" />. </summary>
      <keywords>DbCommandBuilder.GetDeleteCommand method </keywords>
      <keywords>DbCommandBuilder.GetDeleteCommand method </keywords>
      <param name="useColumnsForParameterNames">Determines whether Universal .NET uses columns metadata to make up parameters' names. If <see langword="true" />, the names are composed using colon and name of appropriate column; otherwise the names look like :p1, :p2 etc. </param>
      <returns>The text of the SQL statement to be executed. </returns>
    </member>
    <member name="M:Devart.Common.DbCommandBuilder.GetInsertCommand()">
      <summary>Gets the automatically generated SQL statement required to perform inserts on the database when an application calls <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> on the <see cref="T:System.Data.IDbDataAdapter" />. </summary>
      <keywords>DbCommandBuilder.GetInsertCommand method </keywords>
      <keywords>DbCommandBuilder.GetInsertCommand method </keywords>
      <returns>The text of the SQL statement to be executed. </returns>
    </member>
    <member name="M:Devart.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
      <summary>Gets the automatically generated SQL statement required to perform inserts on the database when an application calls <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> on the <see cref="T:System.Data.IDbDataAdapter" />. </summary>
      <keywords>DbCommandBuilder.GetInsertCommand method </keywords>
      <keywords>DbCommandBuilder.GetInsertCommand method </keywords>
      <param name="useColumnsForParameterNames">Determines whether Universal .NET uses columns metadata to make up parameters' names. If <see langword="true" />, the names are composed using colon and name of appropriate column; otherwise the names look like :p1, :p2 etc. </param>
      <returns>The text of the SQL statement to be executed. </returns>
    </member>
    <member name="M:Devart.Common.DbCommandBuilder.GetInsertCommand(System.String[],System.Boolean)">
      <summary>Gets the automatically generated SQL statement required to perform inserts for the specified fields on the database when an application calls <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> on the <see cref="T:System.Data.IDbDataAdapter" />. </summary>
      <keywords>DbCommandBuilder.GetInsertCommand method </keywords>
      <keywords>DbCommandBuilder.GetInsertCommand method </keywords>
      <param name="fields">The array of string containing list of the field names. </param>
      <param name="useColumnsForParameterNames">Determines whether Universal .NET uses columns metadata to make up parameters' names. If <see langword="true" />, the names are composed using colon and name of appropriate column; otherwise the names look like :p1, :p2 etc. </param>
      <returns>The text of the SQL statement to be executed. </returns>
    </member>
    <member name="M:Devart.Common.DbCommandBuilder.GetUpdateCommand()">
      <summary>Gets the automatically generated SQL statement required to perform updates on the database when an application calls <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> on the <see cref="T:System.Data.IDbDataAdapter" />. </summary>
      <keywords>DbCommandBuilder.GetUpdateCommand method </keywords>
      <keywords>DbCommandBuilder.GetUpdateCommand method </keywords>
      <returns>The text of the SQL statement to be executed. </returns>
    </member>
    <member name="M:Devart.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
      <summary>Gets the automatically generated SQL statement required to perform updates on the database when an application calls <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> on the <see cref="T:System.Data.IDbDataAdapter" />. </summary>
      <keywords>DbCommandBuilder.GetUpdateCommand method </keywords>
      <keywords>DbCommandBuilder.GetUpdateCommand method </keywords>
      <param name="useColumnsForParameterNames">Determines whether Universal .NET uses columns metadata to make up parameters' names. If <see langword="true" />, the names are composed using colon and name of appropriate column; otherwise the names look like :p1, :p2 etc. </param>
      <returns>The text of the SQL statement to be executed. </returns>
    </member>
    <member name="M:Devart.Common.DbCommandBuilder.GetUpdateCommand(System.String[],System.Boolean)">
      <summary>Gets the automatically generated SQL statement required to perform updates for the specified fields on the database when an application calls <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> on the <see cref="T:System.Data.IDbDataAdapter" />. </summary>
      <keywords>DbCommandBuilder.GetUpdateCommand method </keywords>
      <keywords>DbCommandBuilder.GetUpdateCommand method </keywords>
      <param name="fields">The array of string containing list of the field names. </param>
      <param name="useColumnsForParameterNames">Determines whether Universal .NET uses columns metadata to make up parameters' names. If <see langword="true" />, the names are composed using colon and name of appropriate column; otherwise the names look like :p1, :p2 etc. </param>
      <returns>The text of the SQL statement to be executed. </returns>
    </member>
    <member name="T:Devart.Common.DbCommandBuilderBase">
      <summary>Allows to automatically generate single-table commands used to reconcile changes made to a <see cref="T:System.Data.DataSet" /> with the associated server database. </summary>
    </member>
    <member name="P:Devart.Common.DbCommandBuilderBase.CatalogSeparator">
      <summary>Gets or sets separator string to be used when referencing a schema. </summary>
      <keywords>DbCommandBuilderBase.CatalogSeparator property </keywords>
      <keywords>DbCommandBuilderBase.CatalogSeparator property </keywords>
      <value>Separator between catalog and schema. </value>
    </member>
    <member name="P:Devart.Common.DbCommandBuilderBase.DataAdapter">
      <summary>Gets or sets an <see cref="T:System.Data.IDbDataAdapter" /> object for which this <see cref="T:Devart.Common.DbCommandBuilder" /> object will generate SQL statements. </summary>
      <keywords>DbCommandBuilderBase.DataAdapter property </keywords>
      <keywords>DbCommandBuilderBase.DataAdapter property </keywords>
      <value>An <see cref="T:System.Data.IDbDataAdapter" /> object that is associated with this <see cref="T:Devart.Common.DbCommandBuilder" />. </value>
    </member>
    <member name="M:Devart.Common.DbCommandBuilderBase.GetDeleteCommand()">
      <summary>Gets the automatically generated SQL statement required to perform deletions on the database when an application calls <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> on the <see cref="T:System.Data.IDbDataAdapter" />. </summary>
      <keywords>DbCommandBuilderBase.GetDeleteCommand method </keywords>
      <keywords>DbCommandBuilderBase.GetDeleteCommand method </keywords>
      <returns>The text of the SQL statement to be executed. </returns>
    </member>
    <member name="M:Devart.Common.DbCommandBuilderBase.GetDeleteCommand(System.Boolean)">
      <summary>Gets the automatically generated SQL statement required to perform deletions on the database when an application calls <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> on the <see cref="T:System.Data.IDbDataAdapter" />. </summary>
      <keywords>DbCommandBuilderBase.GetDeleteCommand method </keywords>
      <keywords>DbCommandBuilderBase.GetDeleteCommand method </keywords>
      <param name="useColumnsForParameterNames">Determines whether Universal .NET uses columns metadata to make up parameters' names. If <see langword="true" />, the names are composed using colon and name of appropriate column; otherwise the names look like :p1, :p2 etc. </param>
      <returns>The text of the SQL statement to be executed. </returns>
    </member>
    <member name="M:Devart.Common.DbCommandBuilderBase.GetInsertCommand()">
      <summary>Gets the automatically generated SQL statement required to perform inserts on the database when an application calls <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> on the <see cref="T:System.Data.IDbDataAdapter" />. </summary>
      <keywords>DbCommandBuilderBase.GetInsertCommand method </keywords>
      <keywords>DbCommandBuilderBase.GetInsertCommand method </keywords>
      <returns>The text of the SQL statement to be executed. </returns>
    </member>
    <member name="M:Devart.Common.DbCommandBuilderBase.GetInsertCommand(System.Boolean)">
      <summary>Gets the automatically generated SQL statement required to perform inserts on the database when an application calls <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> on the <see cref="T:System.Data.IDbDataAdapter" />. </summary>
      <keywords>DbCommandBuilderBase.GetInsertCommand method </keywords>
      <keywords>DbCommandBuilderBase.GetInsertCommand method </keywords>
      <param name="useColumnsForParameterNames">Determines whether Universal .NET uses columns metadata to make up parameters' names. If <see langword="true" />, the names are composed using colon and name of appropriate column; otherwise the names look like :p1, :p2 etc. </param>
      <returns>The text of the SQL statement to be executed. </returns>
    </member>
    <member name="M:Devart.Common.DbCommandBuilderBase.GetInsertCommand(System.String[],System.Boolean)">
      <summary>Gets the automatically generated SQL statement required to perform inserts for the specified fields on the database when an application calls <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> on the <see cref="T:System.Data.IDbDataAdapter" />. </summary>
      <keywords>DbCommandBuilderBase.GetInsertCommand method </keywords>
      <keywords>DbCommandBuilderBase.GetInsertCommand method </keywords>
      <param name="fields">The array of string containing list of the field names. </param>
      <param name="useColumnsForParameterNames">Determines whether Universal .NET uses columns metadata to make up parameters' names. If <see langword="true" />, the names are composed using colon and name of appropriate column; otherwise the names look like :p1, :p2 etc. </param>
      <returns>The text of the SQL statement to be executed. </returns>
    </member>
    <member name="M:Devart.Common.DbCommandBuilderBase.GetUpdateCommand()">
      <summary>Gets the automatically generated SQL statement required to perform updates on the database when an application calls <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> on the <see cref="T:System.Data.IDbDataAdapter" />. </summary>
      <keywords>DbCommandBuilderBase.GetUpdateCommand method </keywords>
      <keywords>DbCommandBuilderBase.GetUpdateCommand method </keywords>
      <returns>The text of the SQL statement to be executed. </returns>
    </member>
    <member name="M:Devart.Common.DbCommandBuilderBase.GetUpdateCommand(System.Boolean)">
      <summary>Gets the automatically generated SQL statement required to perform updates on the database when an application calls <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> on the <see cref="T:System.Data.IDbDataAdapter" />. </summary>
      <keywords>DbCommandBuilderBase.GetUpdateCommand method </keywords>
      <keywords>DbCommandBuilderBase.GetUpdateCommand method </keywords>
      <param name="useColumnsForParameterNames">Determines whether Universal .NET uses columns metadata to make up parameters' names. If <see langword="true" />, the names are composed using colon and name of appropriate column; otherwise the names look like :p1, :p2 etc. </param>
      <returns>The text of the SQL statement to be executed. </returns>
    </member>
    <member name="M:Devart.Common.DbCommandBuilderBase.GetUpdateCommand(System.String[],System.Boolean)">
      <summary>Gets the automatically generated SQL statement required to perform updates for the specified fields on the database when an application calls <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> on the <see cref="T:System.Data.IDbDataAdapter" />. </summary>
      <keywords>DbCommandBuilderBase.GetUpdateCommand method </keywords>
      <keywords>DbCommandBuilderBase.GetUpdateCommand method </keywords>
      <param name="fields">The array of string containing list of the field names. </param>
      <param name="useColumnsForParameterNames">Determines whether Universal .NET uses columns metadata to make up parameters' names. If <see langword="true" />, the names are composed using colon and name of appropriate column; otherwise the names look like :p1, :p2 etc. </param>
      <returns>The text of the SQL statement to be executed. </returns>
    </member>
    <member name="P:Devart.Common.DbCommandBuilderBase.KeyFields">
      <summary>Gets or sets string containing list of key field names separated by semicolon. They are used to generate update commands. </summary>
      <keywords>DbCommandBuilderBase.KeyFields property </keywords>
      <keywords>DbCommandBuilderBase.KeyFields property </keywords>
      <value>The string containing list of key field names separated by semicolon. </value>
    </member>
    <member name="M:Devart.Common.DbCommandBuilderBase.QuoteIdentifier(System.String)">
      <summary>Returns the string passed as the parameter enclosed in quotes. </summary>
      <keywords>DbCommandBuilderBase.QuoteIdentifier method </keywords>
      <keywords>DbCommandBuilderBase.QuoteIdentifier method </keywords>
      <param name="unquotedIdentifier">Identifier to be placed inside the quotes. </param>
      <returns>The identifier enclosed in quotes. </returns>
    </member>
    <member name="P:Devart.Common.DbCommandBuilderBase.QuotePrefix">
      <summary>The string to be placed before identifier when quoting a string with <see cref="M:Devart.Common.DbCommandBuilderBase.QuoteIdentifier" /> method. </summary>
      <keywords>DbCommandBuilderBase.QuotePrefix property </keywords>
      <keywords>DbCommandBuilderBase.QuotePrefix property </keywords>
      <value>Quote prefix. </value>
    </member>
    <member name="P:Devart.Common.DbCommandBuilderBase.QuoteSuffix">
      <summary>The string to be placed after identifier when quoting a string with <see cref="M:Devart.Common.DbCommandBuilderBase.QuoteIdentifier" /> method. </summary>
      <keywords>DbCommandBuilderBase.QuoteSuffix property </keywords>
      <keywords>DbCommandBuilderBase.QuoteSuffix property </keywords>
      <value>Quote suffix. </value>
    </member>
    <member name="P:Devart.Common.DbCommandBuilderBase.Quoted">
      <summary><para>Gets or sets whether the command builder quotes all the names of database objects.</para> </summary>
      <keywords>DbCommandBuilderBase.Quoted property </keywords>
      <keywords>DbCommandBuilderBase.Quoted property </keywords>
      <value><see langword="true" /> if the command builder will quote all the names of database objects; otherwise, <see langword="false" />. The default value is <see langword="false" />. </value>
    </member>
    <member name="M:Devart.Common.DbCommandBuilderBase.RefreshSchema()">
      <summary>Refreshes the database schema information used to generate INSERT, UPDATE, or DELETE statements. </summary>
      <keywords>DbCommandBuilderBase.RefreshSchema method </keywords>
      <keywords>DbCommandBuilderBase.RefreshSchema method </keywords>
    </member>
    <member name="P:Devart.Common.DbCommandBuilderBase.SchemaSeparator">
      <summary>Gets or sets separator string to be used when referencing a table. </summary>
      <keywords>DbCommandBuilderBase.SchemaSeparator property </keywords>
      <keywords>DbCommandBuilderBase.SchemaSeparator property </keywords>
      <value>Separator between schema and table. </value>
    </member>
    <member name="M:Devart.Common.DbCommandBuilderBase.UnquoteIdentifier(System.String)">
      <summary>Removes quote strings from identifier. </summary>
      <keywords>DbCommandBuilderBase.UnquoteIdentifier method </keywords>
      <keywords>DbCommandBuilderBase.UnquoteIdentifier method </keywords>
      <param name="quotedIdentifier">String containing <see cref="P:Devart.Common.DbCommandBuilderBase.QuotePrefix" />, identifier itself, and <see cref="P:Devart.Common.DbCommandBuilderBase.QuoteSuffix" /> parts. </param>
      <returns>Unquoted identifier </returns>
    </member>
    <member name="P:Devart.Common.DbCommandBuilderBase.UpdatingFields">
      <summary>Gets or sets string containing list of field names used to generate update commands. </summary>
      <keywords>DbCommandBuilderBase.UpdatingFields property </keywords>
      <keywords>DbCommandBuilderBase.UpdatingFields property </keywords>
      <value>The string containing list of field names separated by semicolon. </value>
    </member>
    <member name="P:Devart.Common.DbCommandBuilderBase.UpdatingTable">
      <summary>Gets or sets table name to generate update statements for. </summary>
      <keywords>DbCommandBuilderBase.UpdatingTable property </keywords>
      <keywords>DbCommandBuilderBase.UpdatingTable property </keywords>
      <value>The name of the table. </value>
    </member>
    <member name="T:Devart.Common.DbConnection">
      <summary>Represents an open connection to a server. </summary>
    </member>
    <member name="M:Devart.Common.DbConnection.BeginTransaction()">
      <summary>Begins a database transaction. </summary>
      <keywords>DbConnection.BeginTransaction method </keywords>
      <keywords>DbConnection.BeginTransaction method </keywords>
      <returns>An object representing the new transaction. </returns>
    </member>
    <member name="M:Devart.Common.DbConnection.BeginTransaction(System.Data.IsolationLevel)">
      <summary>Begins a database transaction with the specified isolation level. </summary>
      <keywords>DbConnection.BeginTransaction method </keywords>
      <keywords>DbConnection.BeginTransaction method </keywords>
      <param name="isolationLevel">Isolation level used by the new transaction. </param>
      <returns>An object representing the new transaction. </returns>
    </member>
    <member name="M:Devart.Common.DbConnection.ChangeDatabase(System.String)">
      <summary>Changes the current database associated with an open <see cref="T:Devart.Common.DbConnection" />. </summary>
      <keywords>DbConnection.ChangeDatabase method </keywords>
      <keywords>DbConnection.ChangeDatabase method </keywords>
      <param name="databaseName">The database name. </param>
    </member>
    <member name="M:Devart.Common.DbConnection.Close()">
      <summary>Closes the connection to the database. This is the preferred method of closing any open connection. </summary>
      <keywords>DbConnection.Close method </keywords>
      <keywords>DbConnection.Close method </keywords>
    </member>
    <member name="P:Devart.Common.DbConnection.ConnectionString">
      <summary>Gets or sets the string used to open a server connection. </summary>
      <keywords>DbConnection.ConnectionString property </keywords>
      <keywords>DbConnection.ConnectionString property </keywords>
      <value>The connection string that includes the source database name, and other parameters needed to establish the initial connection. The default value is an empty string (""). </value>
    </member>
    <member name="P:Devart.Common.DbConnection.ConnectionTimeout">
      <summary>Gets or sets the time to wait while trying to establish a connection before terminating the attempt and generating an error. </summary>
      <keywords>DbConnection.ConnectionTimeout property </keywords>
      <keywords>DbConnection.ConnectionTimeout property </keywords>
      <value>The time (in seconds) to wait for a connection to open. The default value is 15 seconds. </value>
    </member>
    <member name="M:Devart.Common.DbConnection.CreateCommand()">
      <summary>Creates and returns a <see cref="T:Devart.Common.DbCommand" /> object associated with the <see cref="T:Devart.Common.DbConnection" />. </summary>
      <keywords>DbConnection.CreateCommand method </keywords>
      <keywords>DbConnection.CreateCommand method </keywords>
      <returns><para>A <see cref="T:Devart.Common.DbCommand" /> object. </para> </returns>
    </member>
    <member name="P:Devart.Common.DbConnection.DataSource">
      <summary>Gets or sets name of the server to which to connect. </summary>
      <keywords>DbConnection.DataSource property </keywords>
      <keywords>DbConnection.DataSource property </keywords>
      <value>Gets or sets name of the server to which to connect. The default value is an empty string (""). </value>
    </member>
    <member name="P:Devart.Common.DbConnection.Database">
      <summary>Gets or sets the name of the current database or the database to be used once a connection is open. </summary>
      <keywords>DbConnection.Database property </keywords>
      <keywords>DbConnection.Database property </keywords>
      <value>The name of the current database or the name of the database to be used once a connection is open. The default value is an empty string (""). </value>
    </member>
    <member name="M:Devart.Common.DbConnection.GetSchema()">
      <summary>Returns list of metadata collections and number of restrictions for a collection. </summary>
      <keywords>DbConnection.GetSchema method </keywords>
      <keywords>DbConnection.GetSchema method </keywords>
      <returns>A <see cref="T:System.Data.DataTable" /> object. </returns>
    </member>
    <member name="M:Devart.Common.DbConnection.GetSchema(System.String)">
      <summary>Provides information about server schema objects. </summary>
      <keywords>DbConnection.GetSchema method </keywords>
      <keywords>DbConnection.GetSchema method </keywords>
      <param name="collectionName">Name of the collection to get information about. </param>
      <returns>A <see cref="T:System.Data.DataTable" /> object. </returns>
    </member>
    <member name="M:Devart.Common.DbConnection.GetSchema(System.String,System.String[])">
      <summary>Returns detailed information about a server schema object. </summary>
      <keywords>DbConnection.GetSchema method </keywords>
      <keywords>DbConnection.GetSchema method </keywords>
      <param name="collectionName">Name of the collection to get information about. </param>
      <param name="restrictionValues">Array of strings representing collection restrictions. In some cases last array members may be omitted. </param>
      <returns>A <see cref="T:System.Data.DataTable" /> object. </returns>
    </member>
    <member name="M:Devart.Common.DbConnection.Open()">
      <summary>Opens a database connection with the property settings specified by the <see cref="P:Devart.Common.DbConnection.ConnectionString" />. </summary>
      <keywords>DbConnection.Open method </keywords>
      <keywords>DbConnection.Open method </keywords>
    </member>
    <member name="P:Devart.Common.DbConnection.ServerVersion">
      <summary>Gets a string containing the version of the instance of the server to which the client is connected. </summary>
      <keywords>DbConnection.ServerVersion property </keywords>
      <keywords>DbConnection.ServerVersion property </keywords>
      <value>The version of the server instance. </value>
    </member>
    <member name="P:Devart.Common.DbConnection.State">
      <summary>Gets the current state of the connection. </summary>
      <keywords>DbConnection.State property </keywords>
      <keywords>DbConnection.State property </keywords>
      <value>A bitwise combination of the <see cref="T:System.Data.ConnectionState" /> values. The default value is Closed. </value>
    </member>
    <member name="E:Devart.Common.DbConnection.StateChange">
      <summary>Occurs when the state of the connection changes. </summary>
      <keywords>DbConnection.StateChange event </keywords>
    </member>
    <member name="T:Devart.Common.DbConnectionBase">
      <summary>Represents an open connection to a server. </summary>
    </member>
    <member name="M:Devart.Common.DbConnectionBase.BeginOpen(System.AsyncCallback,System.Object)">
      <summary>Starts an asynchronous invocation of an <see cref="M:Devart.Common.DbConnectionBase.Open" /> method. </summary>
      <keywords>DbConnectionBase.BeginOpen method </keywords>
      <keywords>DbConnectionBase.BeginOpen method </keywords>
      <param name="callback">The delegate to call when the asynchronous invoke is complete. If callback is a null reference (Nothing in Visual Basic), the delegate is not called. </param>
      <param name="stateObject">State information that is passed on to the delegate. </param>
      <returns>An <see cref="T:System.IAsyncResult" /> interface that represents the asynchronous operation started by calling this method. </returns>
    </member>
    <member name="M:Devart.Common.DbConnectionBase.ChangeDatabase(System.String)">
      <summary>Changes the current database associated with an open <see cref="T:Devart.Common.DbConnectionBase" />. </summary>
      <keywords>DbConnectionBase.ChangeDatabase method </keywords>
      <keywords>DbConnectionBase.ChangeDatabase method </keywords>
      <param name="value">The database name. </param>
    </member>
    <member name="M:Devart.Common.DbConnectionBase.Close()">
      <summary>Closes the connection to the database. This is the preferred method of closing any open connection. </summary>
      <keywords>DbConnectionBase.Close method </keywords>
      <keywords>DbConnectionBase.Close method </keywords>
    </member>
    <member name="P:Devart.Common.DbConnectionBase.ConnectionString">
      <summary>Gets or sets the string used to open a server connection. </summary>
      <keywords>DbConnectionBase.ConnectionString property </keywords>
      <keywords>DbConnectionBase.ConnectionString property </keywords>
      <value>The connection string that includes the source database name, and other parameters needed to establish the initial connection. The default value is an empty string (""). </value>
    </member>
    <member name="P:Devart.Common.DbConnectionBase.ConnectionTimeout">
      <summary>Gets or sets the time to wait while trying to establish a connection before terminating the attempt and generating an error. </summary>
      <keywords>DbConnectionBase.ConnectionTimeout property </keywords>
      <keywords>DbConnectionBase.ConnectionTimeout property </keywords>
      <value>The time (in seconds) to wait for a connection to open. The default value is 15 seconds. </value>
    </member>
    <member name="P:Devart.Common.DbConnectionBase.DataSource">
      <summary>Gets or sets name of the server to which to connect. </summary>
      <keywords>DbConnectionBase.DataSource property </keywords>
      <keywords>DbConnectionBase.DataSource property </keywords>
      <value>Gets or sets name of the server to which to connect. The default value is an empty string (""). </value>
    </member>
    <member name="P:Devart.Common.DbConnectionBase.Database">
      <summary>Gets or sets the name of the current database or the database to be used once a connection is open. </summary>
      <keywords>DbConnectionBase.Database property </keywords>
      <keywords>DbConnectionBase.Database property </keywords>
      <value>The name of the current database or the name of the database to be used once a connection is open. The default value is an empty string (""). </value>
    </member>
    <member name="P:Devart.Common.DbConnectionBase.DesignTimeVisible">
      <summary>Indicates whether the component is visible in design time. </summary>
      <keywords>DbConnectionBase.DesignTimeVisible property </keywords>
    </member>
    <member name="M:Devart.Common.DbConnectionBase.EndOpen(System.IAsyncResult)">
      <summary>Ends an asynchronous invocation of the <see cref="M:Devart.Common.DbConnection.Open" /> method. </summary>
      <keywords>DbConnectionBase.EndOpen method </keywords>
      <keywords>DbConnectionBase.EndOpen method </keywords>
      <param name="result">The <see cref="T:System.IAsyncResult" /> returned from <see cref="M:Devart.Common.DbConnectionBase.BeginOpen" />. </param>
    </member>
    <member name="M:Devart.Common.DbConnectionBase.EnlistTransaction(System.Transactions.Transaction)">
      <summary>Enlists in the specified transaction. </summary>
      <keywords>DbConnectionBase.EnlistTransaction method </keywords>
      <param name="transaction">A reference to an existing <b>System.Transactions.Transaction</b> in which to enlist. </param>
    </member>
    <member name="M:Devart.Common.DbConnectionBase.GetSchema()">
      <summary>Returns list of metadata collections and number of restrictions for a collection. </summary>
      <keywords>DbConnectionBase.GetSchema method </keywords>
      <keywords>DbConnectionBase.GetSchema method </keywords>
      <returns>A <see cref="T:System.Data.DataTable" /> object. </returns>
      <overloads>Provides information about server schema objects. </overloads>
    </member>
    <member name="M:Devart.Common.DbConnectionBase.GetSchema(System.String)">
      <summary>Provides information about server schema objects. </summary>
      <keywords>DbConnectionBase.GetSchema method </keywords>
      <keywords>DbConnectionBase.GetSchema method </keywords>
      <param name="collectionName">Name of the collection to get information about. </param>
      <returns>A <see cref="T:System.Data.DataTable" /> object. </returns>
    </member>
    <member name="M:Devart.Common.DbConnectionBase.GetSchema(System.String,System.String[])">
      <summary>Returns detailed information about a server schema object. </summary>
      <keywords>DbConnectionBase.GetSchema method </keywords>
      <keywords>DbConnectionBase.GetSchema method </keywords>
      <param name="collectionName">Name of the collection to get information about. </param>
      <param name="restrictionValues">Array of strings representing collection restrictions. In some cases last array members may be omitted. </param>
      <returns>A <see cref="T:System.Data.DataTable" /> object. </returns>
    </member>
    <member name="P:Devart.Common.DbConnectionBase.InDistributedTransaction">
      <summary>Indicates whether the connection is enlisted in a distributed transaction. </summary>
      <keywords>DbConnectionBase.InDistributedTransaction property </keywords>
      <value><see langword="true" /> if the connection is enlisted in a distributed transaction; otherwise, <see langword="false" />. </value>
    </member>
    <member name="P:Devart.Common.DbConnectionBase.Name">
      <summary>Gets or sets name of the component. </summary>
      <keywords>DbConnectionBase.Name property </keywords>
    </member>
    <member name="M:Devart.Common.DbConnectionBase.Open()">
      <summary>Opens a database connection with the property settings specified by the <see cref="P:Devart.Common.DbConnectionBase.ConnectionString" />. </summary>
      <keywords>DbConnectionBase.Open method </keywords>
      <keywords>DbConnectionBase.Open method </keywords>
    </member>
    <member name="P:Devart.Common.DbConnectionBase.Owner">
      <summary>Gets or sets a form or other container that the <see cref="T:Devart.Common.DbConnectionBase" /> instance belongs to. </summary>
      <keywords>DbConnectionBase.Owner property </keywords>
      <value>A form or other container that the object belongs to. </value>
    </member>
    <member name="P:Devart.Common.DbConnectionBase.ServerVersion">
      <summary>Gets a string containing the version of the instance of the server to which the client is connected. </summary>
      <keywords>DbConnectionBase.ServerVersion property </keywords>
      <keywords>DbConnectionBase.ServerVersion property </keywords>
      <value>The version of the server instance. </value>
    </member>
    <member name="P:Devart.Common.DbConnectionBase.State">
      <summary>Gets the current state of the connection. </summary>
      <keywords>DbConnectionBase.State property </keywords>
      <keywords>DbConnectionBase.State property </keywords>
      <value>A bitwise combination of the <see cref="T:System.Data.ConnectionState" /> values. The default value is Closed. </value>
    </member>
    <member name="E:Devart.Common.DbConnectionBase.StateChange">
      <summary>Occurs when the state of the connection changes. </summary>
      <keywords>DbConnectionBase.StateChange event </keywords>
    </member>
    <member name="E:Devart.Common.DbConnectionBase.TransactionStateChanged">
      <summary>Occurs when the state of the transaction is changed. </summary>
      <keywords>DbConnectionBase.TransactionStateChanged event </keywords>
    </member>
    <member name="E:Devart.Common.DbConnectionBase.TransactionStateChanging">
      <summary>Occurs when the state of the transaction is changing. </summary>
      <keywords>DbConnectionBase.TransactionStateChanging event </keywords>
    </member>
    <member name="P:Devart.Common.DbConnectionStringBuilder.ConnectionString">
      <summary>Returns the connection string composed using object's properties. </summary>
      <keywords>DbConnectionStringBuilder.ConnectionString property </keywords>
      <keywords>DbConnectionStringBuilder.ConnectionString property </keywords>
    </member>
    <member name="P:Devart.Common.DbConnectionStringBuilder.IsReadOnly">
      <summary>Always false. </summary>
      <keywords>DbConnectionStringBuilder.IsReadOnly property </keywords>
      <keywords>DbConnectionStringBuilder.IsReadOnly property </keywords>
    </member>
    <member name="T:Devart.Common.DbDataAdapter">
      <summary>Represents a set of data commands and a database connection that are used to fill the <see cref="T:System.Data.DataSet" /> and update a database. </summary>
    </member>
    <member name="P:Devart.Common.DbDataAdapter.DeleteCommand">
      <summary>Gets or sets SQL statement to delete records from the data set. </summary>
      <keywords>DbDataAdapter.DeleteCommand property </keywords>
      <keywords>DbDataAdapter.DeleteCommand property </keywords>
      <value>A <see cref="T:System.Data.IDbCommand" /> used during an update operation to delete records in the database that correspond to deleted rows in the <see cref="T:System.Data.DataSet" />. </value>
    </member>
    <member name="P:Devart.Common.DbDataAdapter.InsertCommand">
      <summary>Gets or sets a SQL statement to insert new records into the data source. </summary>
      <keywords>DbDataAdapter.InsertCommand property </keywords>
      <keywords>DbDataAdapter.InsertCommand property </keywords>
      <value>A <see cref="T:System.Data.IDbCommand" /> used during an update operation to insert records in the database that correspond to new rows in the <see cref="T:System.Data.DataSet" />. </value>
    </member>
    <member name="P:Devart.Common.DbDataAdapter.SelectCommand">
      <summary>Gets or sets a SQL statement used to select records in the data source. </summary>
      <keywords>DbDataAdapter.SelectCommand property </keywords>
      <keywords>DbDataAdapter.SelectCommand property </keywords>
      <value>A <see cref="T:System.Data.IDbCommand" /> that is used during a fill operation to select records from the database for placement in the <see cref="T:System.Data.DataSet" />. </value>
    </member>
    <member name="P:Devart.Common.DbDataAdapter.UpdateCommand">
      <summary>Gets or sets a SQL statement used to update records in the data source. </summary>
      <keywords>DbDataAdapter.UpdateCommand property </keywords>
      <keywords>DbDataAdapter.UpdateCommand property </keywords>
      <value>A <see cref="T:System.Data.IDbCommand" /> used during an update operation to update records in the database that correspond to modified rows in the <see cref="T:System.Data.DataSet" />. </value>
    </member>
    <member name="T:Devart.Common.DbDataReader">
      <summary>Allows to read a forward-only stream of rows from a SQL server database. </summary>
    </member>
    <member name="M:Devart.Common.DbDataReader.Close()">
      <summary>Closes the <see cref="T:Devart.Common.DbDataReader" /> object. </summary>
      <keywords>DbDataReader.Close method </keywords>
      <keywords>DbDataReader.Close method </keywords>
    </member>
    <member name="P:Devart.Common.DbDataReader.Depth">
      <summary>Gets a value indicating the depth of nesting for the current row. </summary>
      <keywords>DbDataReader.Depth property </keywords>
      <keywords>DbDataReader.Depth property </keywords>
      <value>The depth of nesting for the current row. </value>
    </member>
    <member name="M:Devart.Common.DbDataReader.Dispose()">
      <summary>Releases all resources allocated by this object. </summary>
      <keywords>DbDataReader.Dispose method </keywords>
      <keywords>DbDataReader.Dispose method </keywords>
    </member>
    <member name="P:Devart.Common.DbDataReader.FieldCount">
      <summary>Gets the number of columns in the current row. </summary>
      <keywords>DbDataReader.FieldCount property </keywords>
      <keywords>DbDataReader.FieldCount property </keywords>
      <value>When not positioned in a valid record set, 0; otherwise the number of columns in the current record. The default value is -1. </value>
    </member>
    <member name="M:Devart.Common.DbDataReader.GetBoolean(System.Int32)">
      <summary>Gets the value of the specified column as a Boolean. </summary>
      <keywords>DbDataReader.GetBoolean method </keywords>
      <keywords>DbDataReader.GetBoolean method </keywords>
      <param name="ordinal">The zero-based column ordinal. </param>
      <returns>The value of the column. </returns>
    </member>
    <member name="M:Devart.Common.DbDataReader.GetByte(System.Int32)">
      <summary>Gets the value of the specified column as a byte. </summary>
      <keywords>DbDataReader.GetByte method </keywords>
      <keywords>DbDataReader.GetByte method </keywords>
      <param name="ordinal">The zero-based column ordinal. </param>
      <returns>The value of the specified column as a byte. </returns>
    </member>
    <member name="M:Devart.Common.DbDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>Reads a stream of bytes from the specified column offset into the buffer as an array starting at the given buffer offset. </summary>
      <keywords>DbDataReader.GetBytes method </keywords>
      <keywords>DbDataReader.GetBytes method </keywords>
      <param name="ordinal">The zero-based column ordinal. </param>
      <param name="dataOffset">The index within the field where the read operation is to begin. </param>
      <param name="buffer">The buffer into which to read the stream of bytes. </param>
      <param name="bufferOffset">The index where buffer is to begin the write operation. </param>
      <param name="length">The maximum length to copy into the buffer. </param>
      <returns><para>The actual number of bytes read.</para> </returns>
    </member>
    <member name="M:Devart.Common.DbDataReader.GetChar(System.Int32)">
      <summary>Gets the value of the specified column as a single character. </summary>
      <keywords>DbDataReader.GetChar method </keywords>
      <keywords>DbDataReader.GetChar method </keywords>
      <param name="ordinal">The zero-based column ordinal. </param>
      <returns>The value of the specified column as a character. </returns>
    </member>
    <member name="M:Devart.Common.DbDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>Reads a stream of characters from the specified column offset into the buffer as an array starting at the given buffer offset. </summary>
      <keywords>DbDataReader.GetChars method </keywords>
      <keywords>DbDataReader.GetChars method </keywords>
      <param name="ordinal">The zero-based column ordinal. </param>
      <param name="dataOffset">The index within the row where the read operation is to begin. </param>
      <param name="buffer">The buffer into which to copy data. </param>
      <param name="bufferOffset">The index where buffer is to begin the write operation. </param>
      <param name="length">The maximum number of characters to read. </param>
      <returns><para>The actual number of characters read.</para> </returns>
    </member>
    <member name="M:Devart.Common.DbDataReader.GetData(System.Int32)">
      <summary>Returns <see cref="T:Devart.Common.DbDataReader" /> object that contains nested table data. </summary>
      <keywords>DbDataReader.GetData method </keywords>
      <keywords>DbDataReader.GetData method </keywords>
      <param name="ordinal">The zero-based column ordinal. </param>
      <returns>An <see cref="T:Devart.Common.DbDataReader" /> object. </returns>
    </member>
    <member name="M:Devart.Common.DbDataReader.GetDataTypeName(System.Int32)">
      <summary>Gets the name of the source data type. </summary>
      <keywords>DbDataReader.GetDataTypeName method </keywords>
      <keywords>DbDataReader.GetDataTypeName method </keywords>
      <param name="ordinal">The zero-based column ordinal. </param>
      <returns>The name of the back-end data type. </returns>
    </member>
    <member name="M:Devart.Common.DbDataReader.GetDateTime(System.Int32)">
      <summary>Gets the value of the specified column as a <see cref="T:System.DateTime" /> object. </summary>
      <keywords>DbDataReader.GetDateTime method </keywords>
      <keywords>DbDataReader.GetDateTime method </keywords>
      <param name="ordinal">The zero-based column ordinal. </param>
      <returns>The value of the specified column. </returns>
    </member>
    <member name="M:Devart.Common.DbDataReader.GetDecimal(System.Int32)">
      <summary>Gets the value of the specified column as a <see cref="T:System.Decimal" /> object. </summary>
      <keywords>DbDataReader.GetDecimal method </keywords>
      <keywords>DbDataReader.GetDecimal method </keywords>
      <param name="ordinal">The zero-based column ordinal. </param>
      <returns>The value of the specified column. </returns>
    </member>
    <member name="M:Devart.Common.DbDataReader.GetDouble(System.Int32)">
      <summary>Gets the value of the specified column as a double-precision floating point number. </summary>
      <keywords>DbDataReader.GetDouble method </keywords>
      <keywords>DbDataReader.GetDouble method </keywords>
      <param name="ordinal">The zero-based column ordinal. </param>
      <returns>The value of the specified column. </returns>
    </member>
    <member name="M:Devart.Common.DbDataReader.GetEnumerator()">
      <summary>Fills <see cref="T:System.Collection.IEnumerator" /> object with data from <see cref="T:Devart.Common.DbDataReader" />. </summary>
      <keywords>DbDataReader.GetEnumerator method </keywords>
      <keywords>DbDataReader.GetEnumerator method </keywords>
      <returns><see cref="T:System.Collection.IEnumerator" /> object to be populated with data. </returns>
    </member>
    <member name="M:Devart.Common.DbDataReader.GetFieldType(System.Int32)">
      <summary>Gets the <see cref="T:System.Type" /> that is the data type of the object. </summary>
      <keywords>DbDataReader.GetFieldType method </keywords>
      <keywords>DbDataReader.GetFieldType method </keywords>
      <param name="ordinal">The zero-based column ordinal. </param>
      <returns>The <see cref="T:System.Type" /> that is the data type of the object. </returns>
    </member>
    <member name="M:Devart.Common.DbDataReader.GetFloat(System.Int32)">
      <summary>Gets the value of the specified column as a single-precision floating point number. </summary>
      <keywords>DbDataReader.GetFloat method </keywords>
      <keywords>DbDataReader.GetFloat method </keywords>
      <param name="ordinal">The zero-based column ordinal. </param>
      <returns>The value of the specified column. </returns>
    </member>
    <member name="M:Devart.Common.DbDataReader.GetGuid(System.Int32)">
      <summary>Gets the value of the specified column as a globally-unique identifier (GUID). </summary>
      <keywords>DbDataReader.GetGuid method </keywords>
      <keywords>DbDataReader.GetGuid method </keywords>
      <param name="ordinal">The zero-based column ordinal. </param>
      <returns>The value of the specified column. </returns>
    </member>
    <member name="M:Devart.Common.DbDataReader.GetInt16(System.Int32)">
      <summary>Gets the value of the specified column as a 16-bit signed integer. </summary>
      <keywords>DbDataReader.GetInt16 method </keywords>
      <keywords>DbDataReader.GetInt16 method </keywords>
      <param name="ordinal">The zero-based column ordinal. </param>
      <returns>The value of the specified column. </returns>
    </member>
    <member name="M:Devart.Common.DbDataReader.GetInt32(System.Int32)">
      <summary>Gets the value of the specified column as a 32-bit signed integer. </summary>
      <keywords>DbDataReader.GetInt32 method </keywords>
      <keywords>DbDataReader.GetInt32 method </keywords>
      <param name="ordinal">The zero-based column ordinal. </param>
      <returns>The value of the specified column. </returns>
    </member>
    <member name="M:Devart.Common.DbDataReader.GetInt64(System.Int32)">
      <summary>Gets the value of the specified column as a 64-bit signed integer. </summary>
      <keywords>DbDataReader.GetInt64 method </keywords>
      <keywords>DbDataReader.GetInt64 method </keywords>
      <param name="ordinal">The zero-based column ordinal. </param>
      <returns>The value of the specified column. </returns>
    </member>
    <member name="M:Devart.Common.DbDataReader.GetName(System.Int32)">
      <summary><para>Gets the name of the specified column.</para> </summary>
      <keywords>DbDataReader.GetName method </keywords>
      <keywords>DbDataReader.GetName method </keywords>
      <param name="ordinal">The zero-based column ordinal. </param>
      <returns><para>A string that is the name of the specified column.</para> </returns>
    </member>
    <member name="M:Devart.Common.DbDataReader.GetOrdinal(System.String)">
      <summary>Gets the column ordinal, given the name of the column. </summary>
      <keywords>DbDataReader.GetOrdinal method </keywords>
      <keywords>DbDataReader.GetOrdinal method </keywords>
      <param name="name">The name of the column. </param>
      <returns>The zero-based column ordinal. </returns>
    </member>
    <member name="M:Devart.Common.DbDataReader.GetProviderSpecificFieldType(System.Int32)">
      <summary>Currently not supported. </summary>
      <keywords>DbDataReader.GetProviderSpecificFieldType method </keywords>
      <keywords>DbDataReader.GetProviderSpecificFieldType method </keywords>
      <param name="ordinal">The zero-based column ordinal. </param>
      <returns>Type of the field. </returns>
    </member>
    <member name="M:Devart.Common.DbDataReader.GetProviderSpecificValue(System.Int32)">
      <summary>Currently not supported. </summary>
      <keywords>DbDataReader.GetProviderSpecificValue method </keywords>
      <keywords>DbDataReader.GetProviderSpecificValue method </keywords>
      <param name="ordinal">The zero-based column ordinal. </param>
      <returns>Value of the field. </returns>
    </member>
    <member name="M:Devart.Common.DbDataReader.GetProviderSpecificValues(System.Object[])">
      <summary>Currently not supported. </summary>
      <keywords>DbDataReader.GetProviderSpecificValues method </keywords>
      <keywords>DbDataReader.GetProviderSpecificValues method </keywords>
      <param name="values">An array of <see cref="T:System.Object" /> into which to copy the attribute columns. </param>
      <returns>The number of instances of <see cref="T:System.Object" /> in the array. </returns>
    </member>
    <member name="M:Devart.Common.DbDataReader.GetSchemaTable()">
      <summary>Returns a <see cref="T:System.Data.DataTable" /> that describes the column metadata of the <see cref="T:Devart.Common.DbDataReader" />. </summary>
      <keywords>DbDataReader.GetSchemaTable method </keywords>
      <keywords>DbDataReader.GetSchemaTable method </keywords>
      <returns>A <see cref="T:System.Data.DataTable" /> that describes the column metadata. </returns>
    </member>
    <member name="M:Devart.Common.DbDataReader.GetString(System.Int32)">
      <summary>Gets the value of the specified column as a string. </summary>
      <keywords>DbDataReader.GetString method </keywords>
      <keywords>DbDataReader.GetString method </keywords>
      <param name="ordinal">The zero-based column ordinal. </param>
      <returns>The value of the specified column. </returns>
    </member>
    <member name="M:Devart.Common.DbDataReader.GetValue(System.Int32)">
      <summary>Gets the value of the specified column in its native format. </summary>
      <keywords>DbDataReader.GetValue method </keywords>
      <keywords>DbDataReader.GetValue method </keywords>
      <param name="ordinal">The zero-based column ordinal. </param>
      <returns>The value to return. </returns>
    </member>
    <member name="M:Devart.Common.DbDataReader.GetValues(System.Object[])">
      <summary>Gets all attribute columns in the collection for the current row. </summary>
      <keywords>DbDataReader.GetValues method </keywords>
      <keywords>DbDataReader.GetValues method </keywords>
      <param name="values">An array of <see cref="T:System.Object" /> into which to copy the attribute columns. </param>
      <returns>The number of instances of <see cref="T:System.Object" /> in the array. </returns>
    </member>
    <member name="P:Devart.Common.DbDataReader.HasRows">
      <summary>Gets a value indicating whether the <see cref="T:Devart.Common.DbDataReader" /> contains one or more rows. </summary>
      <keywords>DbDataReader.HasRows property </keywords>
      <keywords>DbDataReader.HasRows property </keywords>
      <value><see langword="true" /> if the <see cref="T:Devart.Common.DbDataReader" /> contains one or more rows; otherwise, <see langword="false" />. </value>
    </member>
    <member name="P:Devart.Common.DbDataReader.IsClosed">
      <summary>Gets a value indicating whether the data reader is closed. </summary>
      <keywords>DbDataReader.IsClosed property </keywords>
      <keywords>DbDataReader.IsClosed property </keywords>
      <value><see langword="true" /> if the <see cref="T:Devart.Common.DbDataReader" /> is closed; otherwise, <see langword="false" />. </value>
    </member>
    <member name="M:Devart.Common.DbDataReader.IsDBNull(System.Int32)">
      <summary>Gets a value indicating whether the column contains non-existent or missing values. </summary>
      <keywords>DbDataReader.IsDBNull method </keywords>
      <keywords>DbDataReader.IsDBNull method </keywords>
      <param name="ordinal">The zero-based column ordinal. </param>
      <returns><see langword="true" /> if the specified column value is equivalent to <see cref="T:System.DBNull" />; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="P:Devart.Common.DbDataReader.Item(System.Int32)">
      <summary>Gets the value of the specified column in its native format given the column ordinal. </summary>
      <keywords>DbDataReader.Item property </keywords>
      <keywords>DbDataReader.Item property </keywords>
      <param name="ordinal">The zero-based column ordinal. </param>
      <value>The value of the specified column in its native format. </value>
    </member>
    <member name="P:Devart.Common.DbDataReader.Item(System.String)">
      <summary>Gets the value of the specified column in its native format given the column name. </summary>
      <keywords>DbDataReader.Item property </keywords>
      <keywords>DbDataReader.Item property </keywords>
      <param name="name">The column name. </param>
      <value>The value of the specified column in its native format. </value>
    </member>
    <member name="M:Devart.Common.DbDataReader.NextResult()">
      <summary>Advances the data reader to the next result, when reading the results of batch SQL statements. </summary>
      <keywords>DbDataReader.NextResult method </keywords>
      <keywords>DbDataReader.NextResult method </keywords>
      <returns><see langword="true" /> if there are more result sets; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="M:Devart.Common.DbDataReader.Read()">
      <summary>Advances the <see cref="T:Devart.Common.DbDataReader" /> to the next record. </summary>
      <keywords>DbDataReader.Read method </keywords>
      <keywords>DbDataReader.Read method </keywords>
      <returns><see langword="true" /> if there are more rows; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="P:Devart.Common.DbDataReader.RecordsAffected">
      <summary>Gets the number of rows changed, inserted, or deleted by execution of the SQL statement. </summary>
      <keywords>DbDataReader.RecordsAffected property </keywords>
      <keywords>DbDataReader.RecordsAffected property </keywords>
      <value>The number of rows changed, inserted, or deleted. -1 for SELECT statements; 0 if no rows were affected, or the statement failed. </value>
    </member>
    <member name="P:Devart.Common.DbDataReader.VisibleFieldCount">
      <summary>Gets number of columns that are not hidden. </summary>
      <keywords>DbDataReader.VisibleFieldCount property </keywords>
      <keywords>DbDataReader.VisibleFieldCount property </keywords>
      <value>Number of columns that are not hidden. </value>
    </member>
    <member name="T:Devart.Common.DbDataReaderBase">
      <summary>Allows to read a forward-only stream of rows from a SQL server database. </summary>
    </member>
    <member name="M:Devart.Common.DbDataReaderBase.Close()">
      <summary>Closes the <see cref="T:Devart.Common.DbDataReaderBase" /> object. </summary>
      <keywords>DbDataReaderBase.Close method </keywords>
      <keywords>DbDataReaderBase.Close method </keywords>
    </member>
    <member name="P:Devart.Common.DbDataReaderBase.Depth">
      <summary>Gets a value indicating the depth of nesting for the current row. </summary>
      <keywords>DbDataReaderBase.Depth property </keywords>
      <keywords>DbDataReaderBase.Depth property </keywords>
      <value>The depth of nesting for the current row. </value>
    </member>
    <member name="P:Devart.Common.DbDataReaderBase.FieldCount">
      <summary>Gets the number of columns in the current row. </summary>
      <keywords>DbDataReaderBase.FieldCount property </keywords>
      <keywords>DbDataReaderBase.FieldCount property </keywords>
      <value>When not positioned in a valid record set, 0; otherwise the number of columns in the current record. The default value is -1. </value>
    </member>
    <member name="M:Devart.Common.DbDataReaderBase.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>Reads a stream of bytes from the specified column offset into the buffer as an array starting at the given buffer offset. </summary>
      <keywords>DbDataReaderBase.GetBytes method </keywords>
      <keywords>DbDataReaderBase.GetBytes method </keywords>
      <param name="ordinal">The zero-based column ordinal. </param>
      <param name="fieldoffset">The index within the field where the read operation is to begin. </param>
      <param name="buffer">The buffer into which to read the stream of bytes. </param>
      <param name="bufferoffset">The index where buffer is to begin the write operation. </param>
      <param name="length">The maximum length to copy into the buffer. </param>
      <returns><para>The actual number of bytes read.</para> </returns>
    </member>
    <member name="M:Devart.Common.DbDataReaderBase.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>Reads a stream of characters from the specified column offset into the buffer as an array starting at the given buffer offset. </summary>
      <keywords>DbDataReaderBase.GetChars method </keywords>
      <keywords>DbDataReaderBase.GetChars method </keywords>
      <param name="ordinal">The zero-based column ordinal. </param>
      <param name="fieldoffset">The index within the row where the read operation is to begin. </param>
      <param name="buffer">The buffer into which to copy data. </param>
      <param name="bufferoffset">The index where buffer is to begin the write operation. </param>
      <param name="length">The maximum number of characters to read. </param>
      <returns><para>The actual number of characters read.</para> </returns>
    </member>
    <member name="M:Devart.Common.DbDataReaderBase.GetDataTypeName(System.Int32)">
      <summary>Gets the name of the source data type. </summary>
      <keywords>DbDataReaderBase.GetDataTypeName method </keywords>
      <keywords>DbDataReaderBase.GetDataTypeName method </keywords>
      <param name="ordinal">The zero-based column ordinal. </param>
      <returns>The name of the back-end data type. </returns>
    </member>
    <member name="M:Devart.Common.DbDataReaderBase.GetEnumerator()">
      <summary>Fills <see cref="T:System.Collection.IEnumerator" /> object with data from <see cref="T:Devart.Common.DbDataReaderBase" />. </summary>
      <keywords>DbDataReaderBase.GetEnumerator method </keywords>
      <keywords>DbDataReaderBase.GetEnumerator method </keywords>
      <returns><see cref="T:System.Collection.IEnumerator" /> object to be populated with data. </returns>
    </member>
    <member name="M:Devart.Common.DbDataReaderBase.GetFieldType(System.Int32)">
      <summary>Gets the <see cref="T:System.Type" /> that is the data type of the object. </summary>
      <keywords>DbDataReaderBase.GetFieldType method </keywords>
      <keywords>DbDataReaderBase.GetFieldType method </keywords>
      <param name="ordinal">The zero-based column ordinal. </param>
      <returns>The <see cref="T:System.Type" /> that is the data type of the object. </returns>
    </member>
    <member name="M:Devart.Common.DbDataReaderBase.GetName(System.Int32)">
      <summary><para>Gets the name of the specified column.</para> </summary>
      <keywords>DbDataReaderBase.GetName method </keywords>
      <keywords>DbDataReaderBase.GetName method </keywords>
      <param name="ordinal">The zero-based column ordinal. </param>
      <returns><para>A string that is the name of the specified column.</para> </returns>
    </member>
    <member name="M:Devart.Common.DbDataReaderBase.GetOrdinal(System.String)">
      <summary>Gets the column ordinal, given the name of the column. </summary>
      <keywords>DbDataReaderBase.GetOrdinal method </keywords>
      <keywords>DbDataReaderBase.GetOrdinal method </keywords>
      <param name="name">The name of the column. </param>
      <returns>The zero-based column ordinal. </returns>
    </member>
    <member name="M:Devart.Common.DbDataReaderBase.GetSchemaTable()">
      <summary>Returns a <see cref="T:System.Data.DataTable" /> that describes the column metadata of the <see cref="T:Devart.Common.DbDataReaderBase" />. </summary>
      <keywords>DbDataReaderBase.GetSchemaTable method </keywords>
      <keywords>DbDataReaderBase.GetSchemaTable method </keywords>
      <returns>A <see cref="T:System.Data.DataTable" /> that describes the column metadata. </returns>
    </member>
    <member name="M:Devart.Common.DbDataReaderBase.GetValue(System.Int32)">
      <summary>Gets the value of the specified column in its native format. </summary>
      <keywords>DbDataReaderBase.GetValue method </keywords>
      <keywords>DbDataReaderBase.GetValue method </keywords>
      <param name="ordinal">The zero-based column ordinal. </param>
      <returns>The value to return. </returns>
    </member>
    <member name="M:Devart.Common.DbDataReaderBase.GetValues(System.Object[])">
      <summary>Gets all attribute columns in the collection for the current row. </summary>
      <keywords>DbDataReaderBase.GetValues method </keywords>
      <keywords>DbDataReaderBase.GetValues method </keywords>
      <param name="values">An array of <see cref="T:System.Object" /> into which to copy the attribute columns. </param>
      <returns>The number of instances of <see cref="T:System.Object" /> in the array. </returns>
    </member>
    <member name="P:Devart.Common.DbDataReaderBase.HasRows">
      <summary>Gets a value indicating whether the <see cref="T:Devart.Common.DbDataReader" /> contains one or more rows. </summary>
      <keywords>DbDataReaderBase.HasRows property </keywords>
      <keywords>DbDataReaderBase.HasRows property </keywords>
      <value><see langword="true" /> if the <see cref="T:Devart.Common.DbDataReaderBase" /> contains one or more rows; otherwise, <see langword="false" />. </value>
    </member>
    <member name="P:Devart.Common.DbDataReaderBase.IsClosed">
      <summary>Gets a value indicating whether the data reader is closed. </summary>
      <keywords>DbDataReaderBase.IsClosed property </keywords>
      <keywords>DbDataReaderBase.IsClosed property </keywords>
      <value><see langword="true" /> if the <see cref="T:Devart.Common.DbDataReaderBase" /> is closed; otherwise, <see langword="false" />. </value>
    </member>
    <member name="M:Devart.Common.DbDataReaderBase.IsDBNull(System.Int32)">
      <summary>Gets a value indicating whether the column contains non-existent or missing values. </summary>
      <keywords>DbDataReaderBase.IsDBNull method </keywords>
      <keywords>DbDataReaderBase.IsDBNull method </keywords>
      <param name="ordinal">The zero-based column ordinal. </param>
      <returns><see langword="true" /> if the specified column value is equivalent to <see cref="T:System.DBNull" />; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="P:Devart.Common.DbDataReaderBase.Item(System.Int32)">
      <summary>Gets the value of the specified column in its native format given the column ordinal. </summary>
      <keywords>DbDataReaderBase.Item property </keywords>
      <keywords>DbDataReaderBase.Item property </keywords>
      <param name="ordinal">The zero-based column ordinal. </param>
      <value>The value of the specified column in its native format. </value>
    </member>
    <member name="P:Devart.Common.DbDataReaderBase.Item(System.String)">
      <summary>Gets the value of the specified column in its native format given the column name. </summary>
      <keywords>DbDataReaderBase.Item property </keywords>
      <keywords>DbDataReaderBase.Item property </keywords>
      <param name="name">The column name. </param>
      <value>The value of the specified column in its native format. </value>
    </member>
    <member name="M:Devart.Common.DbDataReaderBase.NextResult()">
      <summary>Advances the data reader to the next result, when reading the results of batch SQL statements. </summary>
      <keywords>DbDataReaderBase.NextResult method </keywords>
      <keywords>DbDataReaderBase.NextResult method </keywords>
      <returns><see langword="true" /> if there are more result sets; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="M:Devart.Common.DbDataReaderBase.Read()">
      <summary>Advances the <see cref="T:Devart.Common.DbDataReaderBase" /> to the next record. </summary>
      <keywords>DbDataReaderBase.Read method </keywords>
      <keywords>DbDataReaderBase.Read method </keywords>
      <returns><see langword="true" /> if there are more rows; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="P:Devart.Common.DbDataReaderBase.RecordsAffected">
      <summary>Gets the number of rows changed, inserted, or deleted by execution of the SQL statement. </summary>
      <keywords>DbDataReaderBase.RecordsAffected property </keywords>
      <keywords>DbDataReaderBase.RecordsAffected property </keywords>
      <value>The number of rows changed, inserted, or deleted. -1 for SELECT statements; 0 if no rows were affected, or the statement failed. </value>
    </member>
    <member name="T:Devart.Common.DbDataSourceEnumerator">
      <summary>Retrieves list of available servers in the network. </summary>
    </member>
    <member name="M:Devart.Common.DbDataSourceEnumerator.GetDataSources()">
      <summary>Retrieves a <b>DataTable</b> containing information about all visible instances of the server. </summary>
      <keywords>DbDataSourceEnumerator.GetDataSources method </keywords>
      <keywords>DbDataSourceEnumerator.GetDataSources method </keywords>
      <returns>A <b>DataTable</b> containing information about the visible instances of the associated data source. </returns>
    </member>
    <member name="T:Devart.Common.DbException">
      <summary>The exception that is generated when server returns an error. </summary>
    </member>
    <member name="P:Devart.Common.DbException.ErrorCode">
      <summary>Gets a code that identifies the type of error. </summary>
      <keywords>DbException.ErrorCode property </keywords>
      <keywords>DbException.ErrorCode property </keywords>
      <value>A code that identifies the type of error. </value>
    </member>
    <member name="T:Devart.Common.DbLoader">
      <summary>Serves to load external data into the  database. </summary>
    </member>
    <member name="M:Devart.Common.DbLoader.#ctor()">
      <summary>Initializes a new instance of the <see cref="T:Devart.Common.DbLoader" /> class. </summary>
    </member>
    <member name="M:Devart.Common.DbLoader.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Common.DbLoader" /> class with table name that will be loaded. </summary>
      <param name="tableName">Name of the table that will be loaded. </param>
    </member>
    <member name="M:Devart.Common.DbLoader.#ctor(System.String,Devart.Common.DbConnection)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Common.DbLoader" /> class with table name that will be loaded and a <see cref="T:Devart.Common.DbConnection" /> object. </summary>
      <param name="tableName">Name of the table that will be loaded. </param>
      <param name="connection">A <see cref="T:Devart.Common.DbConnection" /> object that represents the connection to a data source. </param>
    </member>
    <member name="P:Devart.Common.DbLoader.BufferSize">
      <summary>Gets or sets a size of data packet loaded to the server. </summary>
      <keywords>DbLoader.BufferSize property </keywords>
      <keywords>DbLoader.BufferSize property </keywords>
      <value>Size of the data packet in bytes. </value>
    </member>
    <member name="M:Devart.Common.DbLoader.Close()">
      <summary>Closes loading session and flushes remaining rows to the table. </summary>
      <keywords>DbLoader.Close method </keywords>
      <keywords>DbLoader.Close method </keywords>
    </member>
    <member name="P:Devart.Common.DbLoader.Columns">
      <summary>Gets the <see cref="T:Devart.Common.DbLoaderColumnCollection" /> collection. </summary>
      <keywords>DbLoader.Columns property </keywords>
      <keywords>DbLoader.Columns property </keywords>
      <value>Columns which loaded table consist of. </value>
    </member>
    <member name="P:Devart.Common.DbLoader.Connection">
      <summary>Gets or sets the <see cref="T:Devart.Common.DbConnection" /> used by this instance of the <see cref="T:Devart.Common.DbLoader" />. </summary>
      <keywords>DbLoader.Connection property </keywords>
      <keywords>DbLoader.Connection property </keywords>
      <value>The connection to a data source. The default value is a null reference. </value>
    </member>
    <member name="M:Devart.Common.DbLoader.CreateColumns()">
      <summary>Retrieves table columns information from the table specified in the <see cref="P:Devart.Common.DbLoader.TableName" /> property and populates columns collection. </summary>
      <keywords>DbLoader.CreateColumns method </keywords>
      <keywords>DbLoader.CreateColumns method </keywords>
    </member>
    <member name="M:Devart.Common.DbLoader.NextRow()">
      <summary>Advances <see cref="T:Devart.Common.DbLoader" /> to the next row. </summary>
      <keywords>DbLoader.NextRow method </keywords>
      <keywords>DbLoader.NextRow method </keywords>
    </member>
    <member name="M:Devart.Common.DbLoader.Open()">
      <summary>Prepares <see cref="T:Devart.Common.DbLoader" /> for the loading. </summary>
      <keywords>DbLoader.Open method </keywords>
      <keywords>DbLoader.Open method </keywords>
    </member>
    <member name="M:Devart.Common.DbLoader.SetNull(System.Int32)">
      <summary>Sets the value of the column with the specified index to NULL. </summary>
      <keywords>DbLoader.SetNull method </keywords>
      <keywords>DbLoader.SetNull method </keywords>
      <param name="i">Zero-based index of the column. </param>
    </member>
    <member name="M:Devart.Common.DbLoader.SetNull(System.String)">
      <summary>Sets the value of the column with the specified name to NULL. </summary>
      <keywords>DbLoader.SetNull method </keywords>
      <keywords>DbLoader.SetNull method </keywords>
      <param name="name">The name of the column. </param>
    </member>
    <member name="M:Devart.Common.DbLoader.SetValue(System.Int32,System.Object)">
      <summary>Sets the value of the column at the specified ordinal. </summary>
      <keywords>DbLoader.SetValue method </keywords>
      <keywords>DbLoader.SetValue method </keywords>
      <param name="i">Zero-based index of the column. </param>
      <param name="value">Column value. </param>
    </member>
    <member name="M:Devart.Common.DbLoader.SetValue(System.String,System.Object)">
      <summary>Sets the value of the column with the specified name. </summary>
      <keywords>DbLoader.SetValue method </keywords>
      <keywords>DbLoader.SetValue method </keywords>
      <param name="name">The name of the column. </param>
      <param name="value">Column value. </param>
    </member>
    <member name="P:Devart.Common.DbLoader.TableName">
      <summary>Gets or sets table name that will be loaded. </summary>
      <keywords>DbLoader.TableName property </keywords>
      <keywords>DbLoader.TableName property </keywords>
      <value>Name of the table that will be loaded. </value>
    </member>
    <member name="T:Devart.Common.DbLoaderColumn">
      <summary>Represents the attributes for column loading. </summary>
    </member>
    <member name="M:Devart.Common.DbLoaderColumn.#ctor()">
      <summary>Initializes a new instance of the <see cref="T:Devart.Common.DbLoaderColumn" /> class. </summary>
    </member>
    <member name="M:Devart.Common.DbLoaderColumn.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Common.DbLoaderColumn" /> class with the column name, size, precision and scale. </summary>
      <param name="name">The name of the column. </param>
      <param name="size">Maximum size of column data. </param>
      <param name="precision">The precision of the column. </param>
      <param name="scale">The scale of the column. </param>
    </member>
    <member name="P:Devart.Common.DbLoaderColumn.Name">
      <summary>Gets or sets the name of the <see cref="T:Devart.Common.DbLoaderColumn" />. </summary>
      <keywords>DbLoaderColumn.Name property </keywords>
      <keywords>DbLoaderColumn.Name property </keywords>
      <value>The name of the <see cref="T:Devart.Common.DbLoaderColumn" />. The default value is an empty string (""). </value>
    </member>
    <member name="P:Devart.Common.DbLoaderColumn.Precision">
      <summary>Gets or sets the maximum number of digits used to represent the column value. </summary>
      <keywords>DbLoaderColumn.Precision property </keywords>
      <keywords>DbLoaderColumn.Precision property </keywords>
      <value>The maximum number of digits used to represent the column value. The default value is 0. </value>
    </member>
    <member name="P:Devart.Common.DbLoaderColumn.Scale">
      <summary>Gets or sets the number of decimal places to which column value is resolved. </summary>
      <keywords>DbLoaderColumn.Scale property </keywords>
      <keywords>DbLoaderColumn.Scale property </keywords>
      <value>The number of decimal places to which column value is resolved. The default value is 0. </value>
    </member>
    <member name="P:Devart.Common.DbLoaderColumn.Size">
      <summary>Gets or sets the maximum size, in bytes, of the data within the column. </summary>
      <keywords>DbLoaderColumn.Size property </keywords>
      <keywords>DbLoaderColumn.Size property </keywords>
      <value>The maximum size, in bytes, of the data within the column. </value>
    </member>
    <member name="M:Devart.Common.DbLoaderColumn.ToString()">
      <summary>Returns the name of the <see cref="T:Devart.Common.DbLoaderColumn" />. </summary>
      <keywords>DbLoaderColumn.ToString method </keywords>
      <keywords>DbLoaderColumn.ToString method </keywords>
      <returns>The name of the <see cref="T:Devart.Common.DbLoaderColumn" />. </returns>
    </member>
    <member name="T:Devart.Common.DbLoaderColumnCollection">
      <summary>Represents a collection of columns relevant to a <see cref="T:Devart.Common.DbLoader" />. </summary>
    </member>
    <member name="M:Devart.Common.DbLoaderColumnCollection.#ctor()">
      <summary>Initializes a new instance of the <see cref="T:Devart.Common.DbLoaderColumnCollection" /> class. </summary>
    </member>
    <member name="M:Devart.Common.DbLoaderColumnCollection.Add(Devart.Common.DbLoaderColumn)">
      <summary>Adds the specified <see cref="T:Devart.Common.DbLoaderColumn" /> to the <see cref="T:Devart.Common.DbLoaderColumnCollection" />. </summary>
      <keywords>DbLoaderColumnCollection.Add method </keywords>
      <keywords>DbLoaderColumnCollection.Add method </keywords>
      <param name="value">The <see cref="T:Devart.Common.DbLoaderColumn" /> to add to the collection. </param>
      <returns>Index of the new <see cref="T:Devart.Common.DbLoaderColumn" /> object. </returns>
    </member>
    <member name="M:Devart.Common.DbLoaderColumnCollection.Contains(Devart.Common.DbLoaderColumn)">
      <summary>Gets a value indicating whether a <see cref="T:Devart.Common.DbLoaderColumn" /> object exists in the collection. </summary>
      <keywords>DbLoaderColumnCollection.Contains method </keywords>
      <keywords>DbLoaderColumnCollection.Contains method </keywords>
      <param name="value">The value of the <see cref="T:Devart.Common.DbLoaderColumn" /> object to find. </param>
      <returns><see langword="true" /> if the collection contains the <see cref="T:Devart.Common.DbLoaderColumn" />; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="M:Devart.Common.DbLoaderColumnCollection.Contains(System.String)">
      <summary>Gets a value indicating whether a <see cref="T:Devart.Common.DbLoaderColumn" /> object with the specified name exists in the collection. </summary>
      <keywords>DbLoaderColumnCollection.Contains method </keywords>
      <keywords>DbLoaderColumnCollection.Contains method </keywords>
      <param name="name">The name of the column to find. </param>
      <returns><see langword="true" /> if the collection contains the <see cref="T:Devart.Common.DbLoaderColumn" />; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="M:Devart.Common.DbLoaderColumnCollection.CopyTo(Devart.Common.DbLoaderColumn[],System.Int32)">
      <summary>Copies <see cref="T:Devart.Common.DbLoaderColumn" /> objects from the <see cref="T:Devart.Common.DbLoaderColumnCollection" /> to the specified array. </summary>
      <keywords>DbLoaderColumnCollection.CopyTo method </keywords>
      <keywords>DbLoaderColumnCollection.CopyTo method </keywords>
      <param name="array">The array into which to copy the <see cref="T:Devart.Common.DbLoaderColumn" /> objects. </param>
      <param name="index">The zero-based index of the array. </param>
    </member>
    <member name="M:Devart.Common.DbLoaderColumnCollection.IndexOf(Devart.Common.DbLoaderColumn)">
      <summary>Gets the location in the collection of the <see cref="T:Devart.Common.DbLoaderColumn" /> object. </summary>
      <keywords>DbLoaderColumnCollection.IndexOf method </keywords>
      <keywords>DbLoaderColumnCollection.IndexOf method </keywords>
      <param name="value">The <see cref="T:Devart.Common.DbLoaderColumn" /> object to find. </param>
      <returns>The zero-based location of the <see cref="T:Devart.Common.DbLoaderColumn" /> in the collection. </returns>
    </member>
    <member name="M:Devart.Common.DbLoaderColumnCollection.IndexOf(System.String)">
      <summary>Gets the location in the collection of the <see cref="T:Devart.Common.DbLoaderColumn" /> object by the specified name. </summary>
      <keywords>DbLoaderColumnCollection.IndexOf method </keywords>
      <keywords>DbLoaderColumnCollection.IndexOf method </keywords>
      <param name="name">The name of the column to find. </param>
      <returns>The zero-based location of the <see cref="T:Devart.Common.DbLoaderColumn" /> in the collection. </returns>
    </member>
    <member name="M:Devart.Common.DbLoaderColumnCollection.Insert(System.Int32,Devart.Common.DbLoaderColumn)">
      <summary>Inserts a <see cref="T:Devart.Common.DbLoaderColumn" /> into the collection at the specified index. </summary>
      <keywords>DbLoaderColumnCollection.Insert method </keywords>
      <keywords>DbLoaderColumnCollection.Insert method </keywords>
      <param name="index">The zero-based index where the column is to be inserted within the collection. </param>
      <param name="value">The <see cref="T:Devart.Common.DbLoaderColumn" /> to add to the collection. </param>
    </member>
    <member name="P:Devart.Common.DbLoaderColumnCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:Devart.Common.DbLoaderColumn" /> at the specified index. </summary>
      <keywords>DbLoaderColumnCollection.Item property </keywords>
      <keywords>DbLoaderColumnCollection.Item property </keywords>
      <param name="index">The zero-based index of the column. </param>
      <value>The <see cref="T:Devart.Common.DbLoaderColumn" /> at the specified index. </value>
    </member>
    <member name="P:Devart.Common.DbLoaderColumnCollection.Item(System.String)">
      <summary>Gets or sets the <see cref="T:Devart.Common.DbLoaderColumn" /> with the specified name. </summary>
      <keywords>DbLoaderColumnCollection.Item property </keywords>
      <keywords>DbLoaderColumnCollection.Item property </keywords>
      <param name="name">The name of the column. </param>
      <value>The <see cref="T:Devart.Common.DbLoaderColumn" /> with the specified name. </value>
    </member>
    <member name="M:Devart.Common.DbLoaderColumnCollection.Remove(Devart.Common.DbLoaderColumn)">
      <summary>Removes the specified <see cref="T:Devart.Common.DbLoaderColumn" /> object from the collection. </summary>
      <keywords>DbLoaderColumnCollection.Remove method </keywords>
      <keywords>DbLoaderColumnCollection.Remove method </keywords>
      <param name="value">The <see cref="T:Devart.Common.DbLoaderColumn" /> object to remove from the collection. </param>
    </member>
    <member name="T:Devart.Common.DbMetaDataCollectionNames">
      <summary>Represents set of string constants that can be used to obtain collections of reserved words for retrieving metadata. </summary>
    </member>
    <member name="F:Devart.Common.DbMetaDataCollectionNames.DataSourceInformation">
      <summary>Used to retrieve information on data source. </summary>
      <keywords>DbMetaDataCollectionNames.DataSourceInformation field </keywords>
    </member>
    <member name="F:Devart.Common.DbMetaDataCollectionNames.DataTypes">
      <summary>Used to retrieve collection data types. </summary>
      <keywords>DbMetaDataCollectionNames.DataTypes field </keywords>
    </member>
    <member name="F:Devart.Common.DbMetaDataCollectionNames.MetaDataCollections">
      <summary>Used to retrieve list of metadata collections. </summary>
      <keywords>DbMetaDataCollectionNames.MetaDataCollections field </keywords>
    </member>
    <member name="F:Devart.Common.DbMetaDataCollectionNames.ReservedWords">
      <summary>Used to retrieve collection of reserved words. </summary>
      <keywords>DbMetaDataCollectionNames.ReservedWords field </keywords>
    </member>
    <member name="F:Devart.Common.DbMetaDataCollectionNames.Restrictions">
      <summary>Used to retrieve collection of restrictions. </summary>
      <keywords>DbMetaDataCollectionNames.Restrictions field </keywords>
    </member>
    <member name="T:Devart.Common.DbMonitor">
      <summary>Allows to monitor dynamic SQL execution in applications that use .NET data providers. </summary>
    </member>
    <member name="M:Devart.Common.DbMonitor.#ctor()">
      <summary>Initialize a new instance of <see cref="T:Devart.Common.DbMonitor" /> class. </summary>
    </member>
    <member name="P:Devart.Common.DbMonitor.IsActive">
      <summary>Enables or disables monitoring applications. </summary>
      <keywords>DbMonitor.IsActive property </keywords>
      <keywords>DbMonitor.IsActive property </keywords>
      <value><see langword="true" /> if monitoring the application is enabled; otherwise, <see langword="false" />. </value>
    </member>
    <member name="E:Devart.Common.DbMonitor.TraceEvent">
      <summary>Occurs when <see cref="T:Devart.Common.DbMonitor" /> object signals about some database activity. </summary>
      <keywords>DbMonitor.TraceEvent event </keywords>
    </member>
    <member name="T:Devart.Common.DbMonitorHelper">
      <summary>Allows to monitor dynamic SQL execution in applications that use .NET data providers. </summary>
    </member>
    <member name="T:Devart.Common.DbParameter">
      <summary>Represents a parameter to a <see cref="T:Devart.Common.DbCommand" />, and optionally, its mapping to <see cref="T:System.Data.DataSet" /> columns. </summary>
    </member>
    <member name="P:Devart.Common.DbParameter.DbType">
      <summary>Gets or sets the <see cref="T:System.Data.DbType" /> of the parameter. </summary>
      <keywords>DbParameter.DbType property </keywords>
      <keywords>DbParameter.DbType property </keywords>
      <value>One of the <see cref="T:System.Data.DbType" /> values. The default value is <see cref="T:System.String" />. </value>
    </member>
    <member name="P:Devart.Common.DbParameter.Direction">
      <summary>Gets or sets a value indicating whether the parameter is input-only, output-only, or bidirectional parameter. </summary>
      <keywords>DbParameter.Direction property </keywords>
      <keywords>DbParameter.Direction property </keywords>
      <value>One of the <see cref="T:System.Data.ParameterDirection" /> values. The default value is Input. </value>
    </member>
    <member name="P:Devart.Common.DbParameter.IsNullable">
      <summary>Gets or sets a value indicating whether the parameter accepts null values. </summary>
      <keywords>DbParameter.IsNullable property </keywords>
      <keywords>DbParameter.IsNullable property </keywords>
      <value><see langword="true" /> if null values are accepted; otherwise, <see langword="false" />. The default value is <see langword="false" />. </value>
    </member>
    <member name="P:Devart.Common.DbParameter.ParameterName">
      <summary>Gets or sets the name of the <see cref="T:Devart.Common.DbParameter" />. </summary>
      <keywords>DbParameter.ParameterName property </keywords>
      <keywords>DbParameter.ParameterName property </keywords>
      <value>The name of the <see cref="T:Devart.Common.DbParameter" />. The default value is an empty string (""). </value>
    </member>
    <member name="M:Devart.Common.DbParameter.ResetDbType()">
      <summary>Sets <see cref="P:Devart.Common.DbParameter.DbType" /> to default value. </summary>
      <keywords>DbParameter.ResetDbType method </keywords>
      <keywords>DbParameter.ResetDbType method </keywords>
    </member>
    <member name="P:Devart.Common.DbParameter.Size">
      <summary>Gets or sets the maximum size, in bytes, of the data within the column. </summary>
      <keywords>DbParameter.Size property </keywords>
      <keywords>DbParameter.Size property </keywords>
      <value>The maximum size, in bytes, of the data within the column. The default value is inferred from the parameter value. </value>
    </member>
    <member name="P:Devart.Common.DbParameter.SourceColumn">
      <summary>Gets or sets the name of the source column mapped to the <see cref="T:System.Data.DataSet" /> and used for loading or returning the <see cref="P:Devart.Common.DbParameter.Value" />. </summary>
      <keywords>DbParameter.SourceColumn property </keywords>
      <keywords>DbParameter.SourceColumn property </keywords>
      <value>The name of the source column that will be used to set the value of this parameter. The default value is an empty string (""). </value>
    </member>
    <member name="P:Devart.Common.DbParameter.SourceColumnNullMapping">
      <summary>Sets or gets a value which indicates whether the source column is nullable. </summary>
      <keywords>DbParameter.SourceColumnNullMapping property </keywords>
      <keywords>DbParameter.SourceColumnNullMapping property </keywords>
      <value><see langword="true" /> if source column is nullable; otherwise, <see langword="false" />. The default value is <see langword="false" />. </value>
    </member>
    <member name="P:Devart.Common.DbParameter.SourceVersion">
      <summary>Gets or sets the <see cref="T:System.Data.DataRowVersion" /> to use when loading <see cref="P:Devart.Common.DbParameter.Value" />. </summary>
      <keywords>DbParameter.SourceVersion property </keywords>
      <keywords>DbParameter.SourceVersion property </keywords>
      <value>One of the <see cref="T:System.Data.DataRowVersion" /> values. The default value is Current. </value>
    </member>
    <member name="P:Devart.Common.DbParameter.Value">
      <summary>Gets or sets the value of the parameter. </summary>
      <keywords>DbParameter.Value property </keywords>
      <keywords>DbParameter.Value property </keywords>
      <value>An <see cref="T:System.Object" /> that is the value of the parameter. The default value is null. </value>
    </member>
    <member name="T:Devart.Common.DbParameterBase" />
    <member name="M:Devart.Common.DbParameterBase.CopyTo(Devart.Common.DbParameter)">
      <summary>Copies all properties of a <see cref="T:Devart.Common.DbParameterBase" /> object to another <see cref="T:Devart.Common.DbParameterBase" /> object. </summary>
      <keywords>DbParameterBase.CopyTo method </keywords>
      <keywords>DbParameterBase.CopyTo method </keywords>
      <param name="destination">The <see cref="T:Devart.Common.DbParameterBase" /> object to copy properties to. </param>
    </member>
    <member name="P:Devart.Common.DbParameterBase.Direction">
      <summary>Gets or sets a value indicating whether the parameter is input-only, output-only, or bidirectional parameter. </summary>
      <keywords>DbParameterBase.Direction property </keywords>
      <keywords>DbParameterBase.Direction property </keywords>
      <value>One of the <see cref="T:System.Data.ParameterDirection" /> values. The default value is Input. </value>
    </member>
    <member name="P:Devart.Common.DbParameterBase.IsNullable">
      <summary>Gets or sets a value indicating whether the parameter accepts null values. </summary>
      <keywords>DbParameterBase.IsNullable property </keywords>
      <keywords>DbParameterBase.IsNullable property </keywords>
      <value><see langword="true" /> if null values are accepted; otherwise, <see langword="false" />. The default value is <see langword="false" />. </value>
    </member>
    <member name="P:Devart.Common.DbParameterBase.ParameterName">
      <summary>Gets or sets the name of the <see cref="T:Devart.Common.DbParameterBase" />. </summary>
      <keywords>DbParameterBase.ParameterName property </keywords>
      <keywords>DbParameterBase.ParameterName property </keywords>
      <value>The name of the <see cref="T:Devart.Common.DbParameterBase" />. The default value is an empty string (""). </value>
    </member>
    <member name="P:Devart.Common.DbParameterBase.Size">
      <summary>Gets or sets the maximum size, in bytes, of the data within the column. </summary>
      <keywords>DbParameterBase.Size property </keywords>
      <keywords>DbParameterBase.Size property </keywords>
      <value>The maximum size, in bytes, of the data within the column. The default value is inferred from the parameter value. </value>
    </member>
    <member name="P:Devart.Common.DbParameterBase.SourceColumn">
      <summary>Gets or sets the name of the source column mapped to the <see cref="T:System.Data.DataSet" /> and used for loading or returning the <see cref="P:Devart.Common.DbParameterBase.Value" />. </summary>
      <keywords>DbParameterBase.SourceColumn property </keywords>
      <keywords>DbParameterBase.SourceColumn property </keywords>
      <value>The name of the source column that will be used to set the value of this parameter. The default value is an empty string (""). </value>
    </member>
    <member name="P:Devart.Common.DbParameterBase.SourceColumnNullMapping">
      <summary>Sets or gets a value which indicates whether the source column is nullable. </summary>
      <keywords>DbParameterBase.SourceColumnNullMapping property </keywords>
      <keywords>DbParameterBase.SourceColumnNullMapping property </keywords>
      <value><see langword="true" /> if source column is nullable; otherwise, <see langword="false" />. The default value is <see langword="false" />. </value>
    </member>
    <member name="P:Devart.Common.DbParameterBase.SourceVersion">
      <summary>Gets or sets the <see cref="T:System.Data.DataRowVersion" /> to use when loading <see cref="P:Devart.Common.DbParameterBase.Value" />. </summary>
      <keywords>DbParameterBase.SourceVersion property </keywords>
      <keywords>DbParameterBase.SourceVersion property </keywords>
      <value>One of the <see cref="T:System.Data.DataRowVersion" /> values. The default value is Current. </value>
    </member>
    <member name="M:Devart.Common.DbParameterBase.ToString()">
      <summary>Gets the name of the <see cref="T:Devart.Common.DbParameterBase" />. </summary>
      <keywords>DbParameterBase.ToString method </keywords>
      <keywords>DbParameterBase.ToString method </keywords>
      <returns>The name of the <see cref="T:Devart.Common.DbParameterBase" />. </returns>
    </member>
    <member name="P:Devart.Common.DbParameterBase.Value">
      <summary>Gets or sets the value of the parameter. </summary>
      <keywords>DbParameterBase.Value property </keywords>
      <keywords>DbParameterBase.Value property </keywords>
      <value>An <see cref="T:System.Object" /> that is the value of the parameter. The default value is null. </value>
    </member>
    <member name="T:Devart.Common.DbParameterBaseCollection">
      <summary>Collects all parameters relevant to a <see cref="T:Devart.Common.DbCommand" /> as well as their respective mappings to <see cref="T:System.Data.DataSet" /> columns. </summary>
    </member>
    <member name="M:Devart.Common.DbParameterBaseCollection.Add(System.Object)">
      <summary>Adds the specified <see cref="T:Devart.Common.DbParameterBase" /> to the <see cref="T:Devart.Common.DbCommand" />. </summary>
      <keywords>DbParameterBaseCollection.Add method </keywords>
      <keywords>DbParameterBaseCollection.Add method </keywords>
      <param name="value">The <see cref="T:Devart.Common.DbParameterBase" /> to add to the <see cref="T:Devart.Common.DbCommand" />. </param>
      <returns>The new <see cref="T:Devart.Common.DbParameterBase" /> object. </returns>
    </member>
    <member name="M:Devart.Common.DbParameterBaseCollection.AddRange(System.Array)">
      <summary>Adds the specified array of <see cref="T:Devart.Common.DbParameterBase" /> objects to the <see cref="T:Devart.Common.DbParameterBaseCollection" />. </summary>
      <keywords>DbParameterBaseCollection.AddRange method </keywords>
      <keywords>DbParameterBaseCollection.AddRange method </keywords>
      <param name="values">Array of <see cref="T:Devart.Common.DbParameterBase" /> objects to be added to the <see cref="T:Devart.Common.DbParameterBaseCollection" />. </param>
    </member>
    <member name="M:Devart.Common.DbParameterBaseCollection.Clear()">
      <summary>Removes all items from the collection. </summary>
      <keywords>DbParameterBaseCollection.Clear method </keywords>
      <keywords>DbParameterBaseCollection.Clear method </keywords>
    </member>
    <member name="M:Devart.Common.DbParameterBaseCollection.Contains(System.Object)">
      <summary>Gets a value indicating whether a <see cref="T:Devart.Common.DbParameterBase" /> object exists in the collection. </summary>
      <keywords>DbParameterBaseCollection.Contains method </keywords>
      <keywords>DbParameterBaseCollection.Contains method </keywords>
      <param name="value">The value of the <see cref="T:Devart.Common.DbParameterBase" /> object to find. </param>
      <returns><see langword="true" /> if the collection contains the <see cref="T:Devart.Common.DbParameterBase" />; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="M:Devart.Common.DbParameterBaseCollection.Contains(System.String)">
      <summary>Gets a value indicating whether a <see cref="T:Devart.Common.DbParameterBase" /> object with the specified parameter name exists in the collection. </summary>
      <keywords>DbParameterBaseCollection.Contains method </keywords>
      <keywords>DbParameterBaseCollection.Contains method </keywords>
      <param name="value">The name of the <see cref="T:Devart.Common.DbParameterBase" /> object to find. </param>
      <returns><see langword="true" /> if the collection contains the <see cref="T:Devart.Common.DbParameterBase" />; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="M:Devart.Common.DbParameterBaseCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies a <see cref="T:Devart.Common.DbParameterBase" /> objects from the <see cref="T:Devart.Common.DbParameterBaseCollection" /> to the specified array. </summary>
      <keywords>DbParameterBaseCollection.CopyTo method </keywords>
      <keywords>DbParameterBaseCollection.CopyTo method </keywords>
      <param name="array">The array into which to copy the <see cref="T:Devart.Common.DbParameterBase" /> objects. </param>
      <param name="index">The zero-based index of the array. </param>
    </member>
    <member name="P:Devart.Common.DbParameterBaseCollection.Count">
      <summary>Gets the number of <see cref="T:Devart.Common.DbParameterBase" /> objects in the collection. </summary>
      <keywords>DbParameterBaseCollection.Count property </keywords>
      <keywords>DbParameterBaseCollection.Count property </keywords>
      <value>The number of <see cref="T:Devart.Common.DbParameterBase" /> objects in the collection. </value>
    </member>
    <member name="M:Devart.Common.DbParameterBaseCollection.GetEnumerator()">
      <summary>Returns an enumerator for the <see cref="T:Devart.Common.DbParameterBaseCollection" />. </summary>
      <keywords>DbParameterBaseCollection.GetEnumerator method </keywords>
      <keywords>DbParameterBaseCollection.GetEnumerator method </keywords>
      <returns>An enumerator for the <see cref="T:Devart.Common.DbParameterBaseCollection" />. </returns>
    </member>
    <member name="M:Devart.Common.DbParameterBaseCollection.IndexOf(System.Object)">
      <summary>Gets the location in the collection of the <see cref="T:Devart.Common.DbParameterBase" /> objects. </summary>
      <keywords>DbParameterBaseCollection.IndexOf method </keywords>
      <keywords>DbParameterBaseCollection.IndexOf method </keywords>
      <param name="value">The <see cref="T:Devart.Common.DbParameterBase" /> object to find. </param>
      <returns>The zero-based location of the <see cref="T:Devart.Common.DbParameterBase" /> in the collection. </returns>
    </member>
    <member name="M:Devart.Common.DbParameterBaseCollection.IndexOf(System.String)">
      <summary>Gets the location in the collection of the <see cref="T:Devart.Common.DbParameterBase" /> object with a specific parameter name. </summary>
      <keywords>DbParameterBaseCollection.IndexOf method </keywords>
      <keywords>DbParameterBaseCollection.IndexOf method </keywords>
      <param name="parameterName">The name of the parameter to retrieve. </param>
      <returns>The zero-based location of the <see cref="T:Devart.Common.DbParameterBase" /> in the collection. </returns>
    </member>
    <member name="M:Devart.Common.DbParameterBaseCollection.Insert(System.Int32,System.Object)">
      <summary>Inserts a <see cref="T:Devart.Common.DbParameterBase" /> into the collection at the specified index. </summary>
      <keywords>DbParameterBaseCollection.Insert method </keywords>
      <keywords>DbParameterBaseCollection.Insert method </keywords>
      <param name="index">The zero-based index where the parameter is to be inserted within the collection. </param>
      <param name="value">The <see cref="T:Devart.Common.DbParameterBase" /> object to add to the collection. </param>
    </member>
    <member name="P:Devart.Common.DbParameterBaseCollection.IsFixedSize">
      <summary>Indicating whether the collection has a fixed size. </summary>
      <keywords>DbParameterBaseCollection.IsFixedSize property </keywords>
      <keywords>DbParameterBaseCollection.IsFixedSize property </keywords>
      <value><see langword="true" /> if the collection has a fixed size; otherwise, <see langword="false" />. </value>
    </member>
    <member name="P:Devart.Common.DbParameterBaseCollection.IsReadOnly">
      <summary>Indicates whether the collection is read-only. </summary>
      <keywords>DbParameterBaseCollection.IsReadOnly property </keywords>
      <keywords>DbParameterBaseCollection.IsReadOnly property </keywords>
      <value><see langword="true" /> if the collection is read-only; otherwise, <see langword="false" />. </value>
    </member>
    <member name="P:Devart.Common.DbParameterBaseCollection.IsSynchronized">
      <summary>Indicates whether access to the collection is synchronized (thread-safe). </summary>
      <keywords>DbParameterBaseCollection.IsSynchronized property </keywords>
      <keywords>DbParameterBaseCollection.IsSynchronized property </keywords>
      <value><see langword="true" /> if access to the collection is synchronized (thread-safe); otherwise, <see langword="false" />. </value>
    </member>
    <member name="M:Devart.Common.DbParameterBaseCollection.Remove(System.Object)">
      <summary>Removes the specified <see cref="T:Devart.Common.DbParameterBase" /> from the collection. </summary>
      <keywords>DbParameterBaseCollection.Remove method </keywords>
      <keywords>DbParameterBaseCollection.Remove method </keywords>
      <param name="value">The <see cref="T:Devart.Common.DbParameterBase" /> object to remove from the collection. </param>
    </member>
    <member name="M:Devart.Common.DbParameterBaseCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:Devart.Common.DbParameterBase" /> at the specified index from the collection. </summary>
      <keywords>DbParameterBaseCollection.RemoveAt method </keywords>
      <keywords>DbParameterBaseCollection.RemoveAt method </keywords>
      <param name="index">The zero-based index of the parameter to remove. </param>
    </member>
    <member name="M:Devart.Common.DbParameterBaseCollection.RemoveAt(System.String)">
      <summary>Removes the <see cref="T:Devart.Common.DbParameterBase" /> with the specified name from the collection. </summary>
      <keywords>DbParameterBaseCollection.RemoveAt method </keywords>
      <keywords>DbParameterBaseCollection.RemoveAt method </keywords>
      <param name="parameterName">The name of the parameter to remove. </param>
    </member>
    <member name="P:Devart.Common.DbParameterBaseCollection.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the <see cref="T:Devart.Common.DbParameterBaseCollection" />. </summary>
      <keywords>DbParameterBaseCollection.SyncRoot property </keywords>
      <keywords>DbParameterBaseCollection.SyncRoot property </keywords>
      <value>An object that can be used to synchronize access to the <see cref="T:Devart.Common.DbParameterBaseCollection" />. </value>
    </member>
    <member name="T:Devart.Common.DbParameterCollection">
      <summary>Collects all parameters relevant to a <see cref="T:Devart.Common.DbCommand" /> as well as their respective mappings to <see cref="T:System.Data.DataSet" /> columns. </summary>
    </member>
    <member name="M:Devart.Common.DbParameterCollection.Add(System.Object)">
      <summary>Adds the specified <see cref="T:Devart.Common.DbParameter" /> to the <see cref="T:Devart.Common.DbParameterCollection" />. </summary>
      <keywords>DbParameterCollection.Add method </keywords>
      <keywords>DbParameterCollection.Add method </keywords>
      <param name="value">The <see cref="T:Devart.Common.DbParameter" /> to add to the <see cref="T:Devart.Common.DbParameterCollection" />. </param>
      <returns>Index of the new <see cref="T:Devart.Common.DbParameter" /> object. </returns>
    </member>
    <member name="M:Devart.Common.DbParameterCollection.AddRange(System.Array)">
      <summary>Adds the specified array of <see cref="T:Devart.Common.DbParameter" /> objects to the <see cref="T:Devart.Common.DbParameterCollection" />. </summary>
      <keywords>DbParameterCollection.AddRange method </keywords>
      <keywords>DbParameterCollection.AddRange method </keywords>
      <param name="values">Array of <see cref="T:Devart.Common.DbParameter" /> objects to be added to the <see cref="T:Devart.Common.DbParameterCollection" />. </param>
    </member>
    <member name="M:Devart.Common.DbParameterCollection.Clear()">
      <summary>Removes all items from the collection. </summary>
      <keywords>DbParameterCollection.Clear method </keywords>
      <keywords>DbParameterCollection.Clear method </keywords>
    </member>
    <member name="M:Devart.Common.DbParameterCollection.Contains(System.Object)">
      <summary>Gets a value indicating whether a <see cref="T:Devart.Common.DbParameter" /> object exists in the collection. </summary>
      <keywords>DbParameterCollection.Contains method </keywords>
      <keywords>DbParameterCollection.Contains method </keywords>
      <param name="value">The value of the <see cref="T:Devart.Common.DbParameter" /> object to find. </param>
      <returns><see langword="true" /> if the collection contains the <see cref="T:Devart.Common.DbParameter" />; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="M:Devart.Common.DbParameterCollection.Contains(System.String)">
      <summary>Gets a value indicating whether a <see cref="T:Devart.Common.DbParameter" /> object with the specified parameter name exists in the collection. </summary>
      <keywords>DbParameterCollection.Contains method </keywords>
      <keywords>DbParameterCollection.Contains method </keywords>
      <param name="value">The name of the <see cref="T:Devart.Common.DbParameter" /> object to find. </param>
      <returns><see langword="true" /> if the collection contains the <see cref="T:Devart.Common.DbParameter" />; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="M:Devart.Common.DbParameterCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies a <see cref="T:Devart.Common.DbParameter" /> objects from the <see cref="T:Devart.Common.DbParameterCollection" /> to the specified array. </summary>
      <keywords>DbParameterCollection.CopyTo method </keywords>
      <keywords>DbParameterCollection.CopyTo method </keywords>
      <param name="array">The array into which to copy the <see cref="T:Devart.Common.DbParameter" /> objects. </param>
      <param name="index">The zero-based index of the array. </param>
    </member>
    <member name="P:Devart.Common.DbParameterCollection.Count">
      <summary>Gets the number of <see cref="T:Devart.Common.DbParameter" /> objects in the collection. </summary>
      <keywords>DbParameterCollection.Count property </keywords>
      <keywords>DbParameterCollection.Count property </keywords>
      <value>The number of <see cref="T:Devart.Common.DbParameter" /> objects in the collection. </value>
    </member>
    <member name="M:Devart.Common.DbParameterCollection.GetEnumerator()">
      <summary>Returns an enumerator for the <see cref="T:Devart.Common.DbParameterCollection" />. </summary>
      <keywords>DbParameterCollection.GetEnumerator method </keywords>
      <keywords>DbParameterCollection.GetEnumerator method </keywords>
      <returns>An enumerator for the <see cref="T:Devart.Common.DbParameterCollection" />. </returns>
    </member>
    <member name="M:Devart.Common.DbParameterCollection.IndexOf(System.Object)">
      <summary>Gets the location in the collection of the <see cref="T:Devart.Common.DbParameter" /> object. </summary>
      <keywords>DbParameterCollection.IndexOf method </keywords>
      <keywords>DbParameterCollection.IndexOf method </keywords>
      <param name="value">The <see cref="T:Devart.Common.DbParameter" /> object to find. </param>
      <returns>The zero-based location of the <see cref="T:Devart.Common.DbParameter" /> in the collection. </returns>
    </member>
    <member name="M:Devart.Common.DbParameterCollection.IndexOf(System.String)">
      <summary>Gets the location in the collection of the <see cref="T:Devart.Common.DbParameter" /> object with a specific parameter name. </summary>
      <keywords>DbParameterCollection.IndexOf method </keywords>
      <keywords>DbParameterCollection.IndexOf method </keywords>
      <param name="parameterName">The name of the parameter to retrieve. </param>
      <returns>The zero-based location of the <see cref="T:Devart.Common.DbParameter" /> in the collection. </returns>
    </member>
    <member name="M:Devart.Common.DbParameterCollection.Insert(System.Int32,System.Object)">
      <summary>Inserts a <see cref="T:Devart.Common.DbParameter" /> into the collection at the specified index. </summary>
      <keywords>DbParameterCollection.Insert method </keywords>
      <keywords>DbParameterCollection.Insert method </keywords>
      <param name="index">The zero-based index where the parameter is to be inserted within the collection. </param>
      <param name="value">The <see cref="T:Devart.Common.DbParameter" /> object to add to the collection. </param>
    </member>
    <member name="P:Devart.Common.DbParameterCollection.IsFixedSize">
      <summary>Indicating whether the collection has a fixed size. </summary>
      <keywords>DbParameterCollection.IsFixedSize property </keywords>
      <keywords>DbParameterCollection.IsFixedSize property </keywords>
      <value><see langword="true" /> if the collection has a fixed size; otherwise, <see langword="false" />. </value>
    </member>
    <member name="P:Devart.Common.DbParameterCollection.IsReadOnly">
      <summary>Indicates whether the collection is read-only. </summary>
      <keywords>DbParameterCollection.IsReadOnly property </keywords>
      <keywords>DbParameterCollection.IsReadOnly property </keywords>
      <value><see langword="true" /> if the collection is read-only; otherwise, <see langword="false" />. </value>
    </member>
    <member name="P:Devart.Common.DbParameterCollection.IsSynchronized">
      <summary>Indicates whether access to the collection is synchronized (thread-safe). </summary>
      <keywords>DbParameterCollection.IsSynchronized property </keywords>
      <keywords>DbParameterCollection.IsSynchronized property </keywords>
      <value><see langword="true" /> if access to the collection is synchronized (thread-safe); otherwise, <see langword="false" />. </value>
    </member>
    <member name="P:Devart.Common.DbParameterCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:Devart.Common.DbParameter" /> at the specified index. </summary>
      <keywords>DbParameterCollection.Item property </keywords>
      <keywords>DbParameterCollection.Item property </keywords>
      <param name="index">The <see cref="T:Devart.Common.DbParameter" /> object to find. </param>
      <value>The <see cref="T:Devart.Common.DbParameter" /> at the specified index. </value>
    </member>
    <member name="P:Devart.Common.DbParameterCollection.Item(System.String)">
      <summary>Gets or sets the <see cref="T:Devart.Common.DbParameter" /> with the specified name. </summary>
      <keywords>DbParameterCollection.Item property </keywords>
      <keywords>DbParameterCollection.Item property </keywords>
      <param name="parameterName">The name of the parameter to retrieve. </param>
      <value>The <see cref="T:Devart.Common.DbParameter" /> with the specified name. </value>
    </member>
    <member name="M:Devart.Common.DbParameterCollection.Remove(System.Object)">
      <summary>Removes the specified <see cref="T:Devart.Common.DbParameter" /> from the collection. </summary>
      <keywords>DbParameterCollection.Remove method </keywords>
      <keywords>DbParameterCollection.Remove method </keywords>
      <param name="value">The <see cref="T:Devart.Common.DbParameter" /> object to remove from the collection. </param>
    </member>
    <member name="M:Devart.Common.DbParameterCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:Devart.Common.DbParameter" /> at the specified index from the collection. </summary>
      <keywords>DbParameterCollection.RemoveAt method </keywords>
      <keywords>DbParameterCollection.RemoveAt method </keywords>
      <param name="index">The zero-based index of the parameter to remove. </param>
    </member>
    <member name="M:Devart.Common.DbParameterCollection.RemoveAt(System.String)">
      <summary>Removes the <see cref="T:Devart.Common.DbParameter" /> with the specified name from the collection. </summary>
      <keywords>DbParameterCollection.RemoveAt method </keywords>
      <keywords>DbParameterCollection.RemoveAt method </keywords>
      <param name="parameterName">The name of the parameter to remove. </param>
    </member>
    <member name="P:Devart.Common.DbParameterCollection.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the <see cref="T:Devart.Common.DbParameterCollection" />. </summary>
      <keywords>DbParameterCollection.SyncRoot property </keywords>
      <keywords>DbParameterCollection.SyncRoot property </keywords>
      <value>An object that can be used to synchronize access to the <see cref="T:Devart.Common.DbParameterCollection" />. </value>
    </member>
    <member name="T:Devart.Common.DbProviderFactory">
      <summary>Allows to implement provider-independent code. </summary>
    </member>
    <member name="M:Devart.Common.DbProviderFactory.CreateCommand()">
      <summary>Creates and returns a <see cref="T:Devart.Common.DbCommand" /> inheritor object. </summary>
      <keywords>DbProviderFactory.CreateCommand method </keywords>
      <keywords>DbProviderFactory.CreateCommand method </keywords>
      <returns>An object that inherits from <see cref="T:Devart.Common.DbCommand" /> suitable for use with specific Data Provider. </returns>
    </member>
    <member name="M:Devart.Common.DbProviderFactory.CreateCommandBuilder()">
      <summary>Creates and returns a <see cref="T:Devart.Common.DbCommandBuilder" /> inheritor object. </summary>
      <keywords>DbProviderFactory.CreateCommandBuilder method </keywords>
      <keywords>DbProviderFactory.CreateCommandBuilder method </keywords>
      <returns>An object that inherits from <see cref="T:Devart.Common.DbCommandBuilder" /> suitable for use with specific Data Provider. </returns>
    </member>
    <member name="M:Devart.Common.DbProviderFactory.CreateConnection()">
      <summary>Creates and returns a <see cref="T:Devart.Common.DbConnection" /> inheritor object. </summary>
      <keywords>DbProviderFactory.CreateConnection method </keywords>
      <keywords>DbProviderFactory.CreateConnection method </keywords>
      <returns>An object that inherits from <see cref="T:Devart.Common.DbConnection" /> suitable for use with specific Data Provider. </returns>
    </member>
    <member name="M:Devart.Common.DbProviderFactory.CreateConnectionStringBuilder()">
      <summary>Creates and returns a <see cref="T:Devart.Common.DbConnectionStringBuilder" /> inheritor object. </summary>
      <keywords>DbProviderFactory.CreateConnectionStringBuilder method </keywords>
      <keywords>DbProviderFactory.CreateConnectionStringBuilder method </keywords>
      <returns>An object that inherits from <see cref="T:Devart.Common.DbConnectionStringBuilder" /> suitable for use with specific Data Provider. </returns>
    </member>
    <member name="M:Devart.Common.DbProviderFactory.CreateDataAdapter()">
      <summary>Creates and returns a <see cref="T:Devart.Common.DbDataAdapter" /> inheritor object. </summary>
      <keywords>DbProviderFactory.CreateDataAdapter method </keywords>
      <keywords>DbProviderFactory.CreateDataAdapter method </keywords>
      <returns>An object that inherits from <see cref="T:Devart.Common.DbDataAdapter" /> suitable for use with specific Data Provider. </returns>
    </member>
    <member name="M:Devart.Common.DbProviderFactory.CreateDataSourceEnumerator()">
      <summary>Creates and returns a <see cref="T:Devart.Common.DbDataSourceEnumerator" /> inheritor object. </summary>
      <keywords>DbProviderFactory.CreateDataSourceEnumerator method </keywords>
      <keywords>DbProviderFactory.CreateDataSourceEnumerator method </keywords>
      <returns>An object that inherits from <see cref="T:Devart.Common.DbDataSourceEnumerator" /> suitable for use with specific Data Provider. </returns>
    </member>
    <member name="M:Devart.Common.DbProviderFactory.CreateParameter()">
      <summary>Creates and returns a <see cref="T:Devart.Common.DbParameter" /> inheritor object. </summary>
      <keywords>DbProviderFactory.CreateParameter method </keywords>
      <keywords>DbProviderFactory.CreateParameter method </keywords>
      <returns>An object that inherits from <see cref="T:Devart.Common.DbParameter" /> suitable for use with specific Data Provider. </returns>
    </member>
    <member name="M:Devart.Common.DbProviderFactory.CreatePermission(System.Security.Permissions.PermissionState)">
      <summary>Specifies whether a permission should have all or no access to resources at creation. </summary>
      <keywords>DbProviderFactory.CreatePermission method </keywords>
      <keywords>DbProviderFactory.CreatePermission method </keywords>
      <param name="state">One of <see cref="E:System.Security.Permissions.PermissionState" /> values. </param>
      <returns><see cref="T:System.Security.CodePermission" /> object. </returns>
    </member>
    <member name="T:Devart.Common.DbScript">
      <summary>Serves to execute series of SQL statements separated by special symbols. </summary>
    </member>
    <member name="P:Devart.Common.DbScript.Connection">
      <summary>Gets or sets the <see cref="T:System.Data.IDbConnection" /> used by this instance of the <see cref="T:Devart.Common.DbScript" />. </summary>
      <keywords>DbScript.Connection property </keywords>
      <keywords>DbScript.Connection property </keywords>
      <value>The connection to a data source. The default value is a null reference. </value>
    </member>
    <member name="E:Devart.Common.DbScript.Error">
      <summary>Occurs when a SQL statement within script has produced an error. </summary>
      <keywords>DbScript.Error event </keywords>
    </member>
    <member name="M:Devart.Common.DbScript.Execute()">
      <summary>Executes script specified in <see cref="P:Devart.Common.DbScript.ScriptText" /> property. </summary>
      <keywords>DbScript.Execute method </keywords>
      <keywords>DbScript.Execute method </keywords>
    </member>
    <member name="M:Devart.Common.DbScript.ExecuteNext(System.Data.IDataReader@)">
      <summary>Executes next statement from the script. </summary>
      <keywords>DbScript.ExecuteNext method </keywords>
      <keywords>DbScript.ExecuteNext method </keywords>
      <param name="reader"><see cref="T:Devart.Common.DbDataReader" /> to store result set. </param>
      <returns><see langword="true" /> if there are more statements to execute; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="P:Devart.Common.DbScript.Name">
      <summary>Gets or sets the name of component that will be displayed in DBMonitor application. </summary>
      <keywords>DbScript.Name property </keywords>
      <keywords>DbScript.Name property </keywords>
      <value>The name of the component. </value>
    </member>
    <member name="M:Devart.Common.DbScript.Open(System.IO.Stream)">
      <summary>Prepares a stream to be executed as SQL script. </summary>
      <keywords>DbScript.Open method </keywords>
      <keywords>DbScript.Open method </keywords>
      <param name="stream">Stream to read SQL statements from. </param>
    </member>
    <member name="M:Devart.Common.DbScript.Open(System.IO.TextReader)">
      <summary>Prepares a StreamReader to be executed as SQL script. </summary>
      <keywords>DbScript.Open method </keywords>
      <keywords>DbScript.Open method </keywords>
      <param name="reader">TextReader to read SQL statements from. </param>
    </member>
    <member name="M:Devart.Common.DbScript.Open(System.String)">
      <summary>Prepares a file stream to be executed as SQL script. </summary>
      <keywords>DbScript.Open method </keywords>
      <keywords>DbScript.Open method </keywords>
      <param name="filename">Name of file to open. </param>
    </member>
    <member name="E:Devart.Common.DbScript.Progress">
      <summary>Occurs when a SQL statement within script has successfully executed. </summary>
      <keywords>DbScript.Progress event </keywords>
    </member>
    <member name="M:Devart.Common.DbScript.Reset()">
      <summary>Positions <see cref="M:Devart.Common.DbScript.ExecuteNext" /> method on the first statement in the script. </summary>
      <keywords>DbScript.Reset method </keywords>
      <keywords>DbScript.Reset method </keywords>
    </member>
    <member name="P:Devart.Common.DbScript.ScriptText">
      <summary>Gets or sets script text. </summary>
      <keywords>DbScript.ScriptText property </keywords>
      <keywords>DbScript.ScriptText property </keywords>
      <value>The text of the script. The default value is an empty string (""). </value>
    </member>
    <member name="P:Devart.Common.DbScript.Statements">
      <summary>Gets the collection of statements that make up the script. </summary>
      <keywords>DbScript.Statements property </keywords>
      <keywords>DbScript.Statements property </keywords>
      <value>Collection of statements. </value>
    </member>
    <member name="T:Devart.Common.DbTransaction">
      <summary>Represents a SQL transaction to be made in the a database. </summary>
    </member>
    <member name="M:Devart.Common.DbTransaction.Commit()">
      <summary>Commits the database transaction. </summary>
      <keywords>DbTransaction.Commit method </keywords>
      <keywords>DbTransaction.Commit method </keywords>
    </member>
    <member name="P:Devart.Common.DbTransaction.Connection">
      <summary>Gets the <see cref="T:Devart.Common.DbConnection" /> object associated with the transaction, or <see langword="null" /> if the transaction is no longer valid. </summary>
      <keywords>DbTransaction.Connection property </keywords>
      <keywords>DbTransaction.Connection property </keywords>
      <value>The <see cref="T:Devart.Common.DbConnection" /> object associated with the transaction. </value>
    </member>
    <member name="M:Devart.Common.DbTransaction.Dispose()">
      <summary>Releases the unmanaged resources used by the <see cref="T:Devart.Common.DbTransaction" /> and optionally releases the managed resources. </summary>
      <keywords>DbTransaction.Dispose method </keywords>
      <keywords>DbTransaction.Dispose method </keywords>
    </member>
    <member name="P:Devart.Common.DbTransaction.IsolationLevel">
      <summary>Specifies the <see cref="T:System.Data.IsolationLevel" /> for this transaction. </summary>
      <keywords>DbTransaction.IsolationLevel property </keywords>
      <keywords>DbTransaction.IsolationLevel property </keywords>
      <value>The <see cref="T:System.Data.IsolationLevel" /> for this transaction. The default value is <see cref="T:System.Data.IsolationLevel.ReadCommitted" />. </value>
    </member>
    <member name="M:Devart.Common.DbTransaction.Rollback()">
      <summary>Rolls back a database transaction from a pending state. </summary>
      <keywords>DbTransaction.Rollback method </keywords>
      <keywords>DbTransaction.Rollback method </keywords>
    </member>
    <member name="T:Devart.Common.MonitorEventArgs">
      <summary>Provides data for the <see cref="E:Devart.Common.DbMonitor.TraceEvent" /> event of the <see cref="T:Devart.Common.DbMonitor" /> class. </summary>
    </member>
    <member name="M:Devart.Common.MonitorEventArgs.#ctor(Devart.Common.MonitorEventType,System.String,Devart.Common.MonitorTracePoint,System.String)">
      <summary>Initialize a new instance of <see cref="T:Devart.Common.MonitorEventArgs" /> class. </summary>
      <param name="eventType">One of <see cref="T:Devart.Common.MonitorEventType" /> values. </param>
      <param name="description">The text description of the <see cref="T:Devart.Common.DbMonitor" /> event. </param>
      <param name="tp">The <see cref="T:Devart.Common.MonitorTracePoint" />. </param>
      <param name="extraInfo">The string representation of the connection string, error text, or SQL parameters. </param>
    </member>
    <member name="P:Devart.Common.MonitorEventArgs.Description">
      <summary>Gets the description of a <see cref="T:Devart.Common.DbMonitor" /> event. </summary>
      <keywords>MonitorEventArgs.Description property </keywords>
      <keywords>MonitorEventArgs.Description property </keywords>
      <value>The text description of a <see cref="T:Devart.Common.DbMonitor" /> event. </value>
    </member>
    <member name="P:Devart.Common.MonitorEventArgs.EventType">
      <summary>Gets <see cref="T:Devart.Common.DbMonitor" /> event type. </summary>
      <keywords>MonitorEventArgs.EventType property </keywords>
      <keywords>MonitorEventArgs.EventType property </keywords>
      <value>The <see cref="T:Devart.Common.DbMonitor" /> event type that depends on SQL activity of the application. </value>
    </member>
    <member name="P:Devart.Common.MonitorEventArgs.ExtraInfo">
      <summary>Gets the additional information for a <see cref="T:Devart.Common.DbMonitor" /> event. </summary>
      <keywords>MonitorEventArgs.ExtraInfo property </keywords>
      <keywords>MonitorEventArgs.ExtraInfo property </keywords>
      <value>The string representation of the connection string, error text, or SQL parameters. </value>
    </member>
    <member name="P:Devart.Common.MonitorEventArgs.TracePoint">
      <summary>Determines whether <see cref="E:Devart.Common.DbMonitor.TraceEvent" /> event occurs before or after the operation takes place. </summary>
      <keywords>MonitorEventArgs.TracePoint property </keywords>
      <keywords>MonitorEventArgs.TracePoint property </keywords>
      <value>One of <see cref="T:Devart.Common.MonitorTracePoint" /> values. </value>
    </member>
    <member name="T:Devart.Common.MonitorEventHandler">
      <summary>Represents the method that will handle the <see cref="E:Devart.Common.DbMonitor.TraceEvent" /> event of the <see cref="T:Devart.Common.DbMonitor" /> class. </summary>
      <keywords>MonitorEventHandler delegate </keywords>
      <param name="sender">The source of the event. </param>
      <param name="e">The <see cref="T:Devart.Common.MonitorEventArgs" /> object that contains the event data. </param>
    </member>
    <member name="T:Devart.Common.MonitorEventType">
      <summary>Describes type of the current <see cref="T:Devart.Common.DbMonitor" /> event. </summary>
    </member>
    <member name="F:Devart.Common.MonitorEventType.Commit">
      <summary>Application executes COMMIT statement against a data source. </summary>
      <keywords>MonitorEventType.Commit field </keywords>
    </member>
    <member name="F:Devart.Common.MonitorEventType.Connect">
      <summary>Application opens connection to a data source. </summary>
      <keywords>MonitorEventType.Connect field </keywords>
    </member>
    <member name="F:Devart.Common.MonitorEventType.Custom">
      <summary>Application executes any user defined statement against a data source. </summary>
      <keywords>MonitorEventType.Custom field </keywords>
    </member>
    <member name="F:Devart.Common.MonitorEventType.Disconnect">
      <summary>Application closes connection to a data source. </summary>
      <keywords>MonitorEventType.Disconnect field </keywords>
    </member>
    <member name="F:Devart.Common.MonitorEventType.Error">
      <summary>Data source returns an error message. </summary>
      <keywords>MonitorEventType.Error field </keywords>
    </member>
    <member name="F:Devart.Common.MonitorEventType.Execute">
      <summary>Application executes a statement against a data source. </summary>
      <keywords>MonitorEventType.Execute field </keywords>
    </member>
    <member name="F:Devart.Common.MonitorEventType.Prepare">
      <summary>Application prepares an execute statement. </summary>
      <keywords>MonitorEventType.Prepare field </keywords>
    </member>
    <member name="F:Devart.Common.MonitorEventType.Rollback">
      <summary>Application executes ROLLBACK statement against a data source. </summary>
      <keywords>MonitorEventType.Rollback field </keywords>
    </member>
    <member name="T:Devart.Common.MonitorTracePoint">
      <summary>Determines when <see cref="E:Devart.Common.DbMonitor.TraceEvent" /> event occurs. </summary>
    </member>
    <member name="F:Devart.Common.MonitorTracePoint.AfterEvent">
      <summary>Occurs in <see cref="T:Devart.Common.DbMonitor" /> after some operation is complete. </summary>
      <keywords>MonitorTracePoint.AfterEvent field </keywords>
    </member>
    <member name="F:Devart.Common.MonitorTracePoint.BeforeEvent">
      <summary>Occurs in <see cref="T:Devart.Common.DbMonitor" /> before some operation has started. </summary>
      <keywords>MonitorTracePoint.BeforeEvent field </keywords>
    </member>
    <member name="T:Devart.Common.SchemaTableColumn">
      <summary>Holds set of fields that represent constants used when working with metadata. </summary>
    </member>
    <member name="F:Devart.Common.SchemaTableColumn.AllowDBNull">
      <summary>Indicates whether NULL values are allowed in this column for rows belonging to the table. </summary>
      <keywords>SchemaTableColumn.AllowDBNull field </keywords>
    </member>
    <member name="F:Devart.Common.SchemaTableColumn.BaseColumnName">
      <summary>The name of the column in the data store. This might be different than the column name returned in the ColumnName column if an alias was used. A null value if the base column name cannot be determined or if the rowset column is derived, but not identical to, a column in the data store. The default of this column is a null value. </summary>
      <keywords>SchemaTableColumn.BaseColumnName field </keywords>
    </member>
    <member name="F:Devart.Common.SchemaTableColumn.BaseSchemaName">
      <summary>The name of the schema in the data store that contains the column. A null value if the base schema name cannot be determined. The default of this column is a null value. </summary>
      <keywords>SchemaTableColumn.BaseSchemaName field </keywords>
    </member>
    <member name="F:Devart.Common.SchemaTableColumn.BaseTableName">
      <summary>The name of the table or view in the data store that contains the column. A null value if the base table name cannot be determined. The default of this column is a null value. </summary>
      <keywords>SchemaTableColumn.BaseTableName field </keywords>
    </member>
    <member name="F:Devart.Common.SchemaTableColumn.ColumnName">
      <summary>Gets the name of the column. </summary>
      <keywords>SchemaTableColumn.ColumnName field </keywords>
    </member>
    <member name="F:Devart.Common.SchemaTableColumn.ColumnOrdinal">
      <summary>Gets the ordinal of the column. </summary>
      <keywords>SchemaTableColumn.ColumnOrdinal field </keywords>
    </member>
    <member name="F:Devart.Common.SchemaTableColumn.ColumnSize">
      <summary>The maximum possible length of a value in the column. For columns that use a fixed-length data type, this is the size of the data type. </summary>
      <keywords>SchemaTableColumn.ColumnSize field </keywords>
    </member>
    <member name="F:Devart.Common.SchemaTableColumn.DataType">
      <summary>Gets the type of data stored in the column. </summary>
      <keywords>SchemaTableColumn.DataType field </keywords>
    </member>
    <member name="F:Devart.Common.SchemaTableColumn.IsAliased">
      <summary>Indicates whether the column is an alias. </summary>
      <keywords>SchemaTableColumn.IsAliased field </keywords>
    </member>
    <member name="F:Devart.Common.SchemaTableColumn.IsExpression">
      <summary>Indicates whether the column is an expression </summary>
      <keywords>SchemaTableColumn.IsExpression field </keywords>
    </member>
    <member name="F:Devart.Common.SchemaTableColumn.IsKey">
      <summary>Indicates whether the column is one of a set of columns in the rowset that, taken together, uniquely identify the row. </summary>
      <keywords>SchemaTableColumn.IsKey field </keywords>
    </member>
    <member name="F:Devart.Common.SchemaTableColumn.IsLong">
      <summary>Set if the column contains a Binary Long Object (BLOB) that contains very long data. The definition of very long data is provider-specific. </summary>
      <keywords>SchemaTableColumn.IsLong field </keywords>
    </member>
    <member name="F:Devart.Common.SchemaTableColumn.IsUnique">
      <summary>Indicates whether the values in each row of the column must be unique. </summary>
      <keywords>SchemaTableColumn.IsUnique field </keywords>
    </member>
    <member name="F:Devart.Common.SchemaTableColumn.NumericPrecision">
      <summary>Gets the precision of the numeric column. </summary>
      <keywords>SchemaTableColumn.NumericPrecision field </keywords>
    </member>
    <member name="F:Devart.Common.SchemaTableColumn.NumericScale">
      <summary>Gets the scale of the numeric column. </summary>
      <keywords>SchemaTableColumn.NumericScale field </keywords>
    </member>
    <member name="F:Devart.Common.SchemaTableColumn.ProviderType">
      <summary>Gets a number that represents provider-specific column type. </summary>
      <keywords>SchemaTableColumn.ProviderType field </keywords>
    </member>
    <member name="T:Devart.Common.SchemaTableOptionalColumn">
      <summary>Holds set of fields that represent constants used when working with metadata. </summary>
    </member>
    <member name="F:Devart.Common.SchemaTableOptionalColumn.AutoIncrementSeed">
      <summary>Gets the starting value for a column that has AutoIncrement attribute. </summary>
      <keywords>SchemaTableOptionalColumn.AutoIncrementSeed field </keywords>
    </member>
    <member name="F:Devart.Common.SchemaTableOptionalColumn.AutoIncrementStep">
      <summary>Gets the increment used by a column that has AutoIncrement attribute. </summary>
      <keywords>SchemaTableOptionalColumn.AutoIncrementStep field </keywords>
    </member>
    <member name="F:Devart.Common.SchemaTableOptionalColumn.BaseCatalogName">
      <summary>The name of the catalog in the data store that contains the column. NULL if the base catalog name cannot be determined. The default of this column is a null value. </summary>
      <keywords>SchemaTableOptionalColumn.BaseCatalogName field </keywords>
    </member>
    <member name="F:Devart.Common.SchemaTableOptionalColumn.BaseColumnNamespace">
      <summary>Gets the namespace of the base column. </summary>
      <keywords>SchemaTableOptionalColumn.BaseColumnNamespace field </keywords>
    </member>
    <member name="F:Devart.Common.SchemaTableOptionalColumn.BaseServerName">
      <summary>Returns the name of the server. </summary>
      <keywords>SchemaTableOptionalColumn.BaseServerName field </keywords>
    </member>
    <member name="F:Devart.Common.SchemaTableOptionalColumn.BaseTableNamespace">
      <summary>Returns the namespace of the base table. </summary>
      <keywords>SchemaTableOptionalColumn.BaseTableNamespace field </keywords>
    </member>
    <member name="F:Devart.Common.SchemaTableOptionalColumn.ColumnMapping">
      <summary>Specifies how a column is mapped. </summary>
      <keywords>SchemaTableOptionalColumn.ColumnMapping field </keywords>
    </member>
    <member name="F:Devart.Common.SchemaTableOptionalColumn.DefaultValue">
      <summary>Gets the default value of the column. </summary>
      <keywords>SchemaTableOptionalColumn.DefaultValue field </keywords>
    </member>
    <member name="F:Devart.Common.SchemaTableOptionalColumn.Expression">
      <summary>Gets the expression the column represents. </summary>
      <keywords>SchemaTableOptionalColumn.Expression field </keywords>
    </member>
    <member name="F:Devart.Common.SchemaTableOptionalColumn.IsAutoIncrement">
      <summary>Indicates whether the column automatically increments the value of the column for new rows added to the table. </summary>
      <keywords>SchemaTableOptionalColumn.IsAutoIncrement field </keywords>
    </member>
    <member name="F:Devart.Common.SchemaTableOptionalColumn.IsHidden">
      <summary>Indicates if the column is hidden. </summary>
      <keywords>SchemaTableOptionalColumn.IsHidden field </keywords>
    </member>
    <member name="F:Devart.Common.SchemaTableOptionalColumn.IsReadOnly">
      <summary>Indicates if the column is read-only. </summary>
      <keywords>SchemaTableOptionalColumn.IsReadOnly field </keywords>
    </member>
    <member name="F:Devart.Common.SchemaTableOptionalColumn.IsRowVersion">
      <summary>Set if the column contains a persistent row identifier that cannot be written to, and has no meaningful value except to identity the row. </summary>
      <keywords>SchemaTableOptionalColumn.IsRowVersion field </keywords>
    </member>
    <member name="F:Devart.Common.SchemaTableOptionalColumn.ProviderSpecificDataType">
      <summary>Returns an object of provider-specific data type. </summary>
      <keywords>SchemaTableOptionalColumn.ProviderSpecificDataType field </keywords>
    </member>
    <member name="T:Devart.Common.ScriptErrorEventArgs">
      <summary>Provides data for the <see cref="E:Devart.Common.DbScript.Error" /> event of the <see cref="T:Devart.Common.DbScript" /> class. </summary>
    </member>
    <member name="M:Devart.Common.ScriptErrorEventArgs.#ctor(System.Exception,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Initialize a new instance of <see cref="T:Devart.Common.ScriptErrorEventArgs" /> class. </summary>
      <param name="e">The <see cref="T:System.Exception" /> instance that contains information specific to <see cref="T:Devart.Common.DbScript" /> error. </param>
      <param name="text">SQL statement text where an error occurred. </param>
      <param name="offset">Offset of statement where an error occurs. </param>
      <param name="length">Length of statement where an error occurs. </param>
      <param name="lineNumber">Number of the line where an error occurs. </param>
      <param name="linePosition">Position in the line where an error occurs. </param>
    </member>
    <member name="P:Devart.Common.ScriptErrorEventArgs.Exception">
      <summary>Gets the <see cref="T:System.Exception" /> instance that <see cref="T:Devart.Common.DbScript" /> throws. </summary>
      <keywords>ScriptErrorEventArgs.Exception property </keywords>
      <keywords>ScriptErrorEventArgs.Exception property </keywords>
      <value>An <see cref="T:System.Exception" /> instance that contains information specific to <see cref="T:Devart.Common.DbScript" /> error. </value>
    </member>
    <member name="P:Devart.Common.ScriptErrorEventArgs.Ignore">
      <summary>Gets or sets whether the current error will be ignored or not. </summary>
      <keywords>ScriptErrorEventArgs.Ignore property </keywords>
      <keywords>ScriptErrorEventArgs.Ignore property </keywords>
      <value><see langword="true" /> if the current error will be ignored; otherwise <see langword="false" />. </value>
    </member>
    <member name="P:Devart.Common.ScriptErrorEventArgs.Length">
      <summary>Gets length of statement where an error occurred. </summary>
      <keywords>ScriptErrorEventArgs.Length property </keywords>
      <keywords>ScriptErrorEventArgs.Length property </keywords>
      <value>Length of statement where an error occurred. </value>
    </member>
    <member name="P:Devart.Common.ScriptErrorEventArgs.LineNumber">
      <summary>Gets number of the line where an error occurred. </summary>
      <keywords>ScriptErrorEventArgs.LineNumber property </keywords>
      <keywords>ScriptErrorEventArgs.LineNumber property </keywords>
      <value>Number of the line where an error occurred. </value>
    </member>
    <member name="P:Devart.Common.ScriptErrorEventArgs.LinePosition">
      <summary>Gets position in the line where an error occurred. </summary>
      <keywords>ScriptErrorEventArgs.LinePosition property </keywords>
      <keywords>ScriptErrorEventArgs.LinePosition property </keywords>
      <value>Position in the line where an error occurred. </value>
    </member>
    <member name="P:Devart.Common.ScriptErrorEventArgs.Offset">
      <summary>Gets offset of statement where an error occurred. </summary>
      <keywords>ScriptErrorEventArgs.Offset property </keywords>
      <keywords>ScriptErrorEventArgs.Offset property </keywords>
      <value>Offset of statement where an error occurred. </value>
    </member>
    <member name="P:Devart.Common.ScriptErrorEventArgs.Text">
      <summary>Gets SQL statement where an error occurred. </summary>
      <keywords>ScriptErrorEventArgs.Text property </keywords>
      <keywords>ScriptErrorEventArgs.Text property </keywords>
      <value>SQL statement text where an error occurred. </value>
    </member>
    <member name="T:Devart.Common.ScriptErrorEventHandler">
      <summary>Represents the method that will handle the <see cref="E:Devart.Common.DbScript.Error" /> event of the <see cref="T:Devart.Common.DbScript" />. </summary>
      <keywords>ScriptErrorEventHandler delegate </keywords>
      <param name="sender">The source of the event. </param>
      <param name="e">The <see cref="T:Devart.Common.ScriptErrorEventArgs" /> object that contains the event data. </param>
    </member>
    <member name="T:Devart.Common.ScriptProgressEventArgs">
      <summary>Provides data for the <see cref="E:Devart.Common.DbScript.Progress" /> event of the <see cref="T:Devart.Common.DbScript" /> class. </summary>
    </member>
    <member name="P:Devart.Common.ScriptProgressEventArgs.Length">
      <summary>Gets length of the statement in symbols. </summary>
      <keywords>ScriptProgressEventArgs.Length property </keywords>
      <keywords>ScriptProgressEventArgs.Length property </keywords>
      <value>Length of the statement. </value>
    </member>
    <member name="P:Devart.Common.ScriptProgressEventArgs.LineNumber">
      <summary>Gets number of line in the whole script where the statement can be located. </summary>
      <keywords>ScriptProgressEventArgs.LineNumber property </keywords>
      <keywords>ScriptProgressEventArgs.LineNumber property </keywords>
      <value>Number of line in the whole script. </value>
    </member>
    <member name="P:Devart.Common.ScriptProgressEventArgs.LinePosition">
      <summary>Gets position of the statement in its line. </summary>
      <keywords>ScriptProgressEventArgs.LinePosition property </keywords>
      <keywords>ScriptProgressEventArgs.LinePosition property </keywords>
      <value>Position of the statement. </value>
    </member>
    <member name="P:Devart.Common.ScriptProgressEventArgs.Offset">
      <summary>Gets offset of the statement in the whole script text. </summary>
      <keywords>ScriptProgressEventArgs.Offset property </keywords>
      <keywords>ScriptProgressEventArgs.Offset property </keywords>
      <value>Offset of the statement in the script text. </value>
    </member>
    <member name="P:Devart.Common.ScriptProgressEventArgs.Text">
      <summary>Gets SQL statement that has been executed. </summary>
      <keywords>ScriptProgressEventArgs.Text property </keywords>
      <keywords>ScriptProgressEventArgs.Text property </keywords>
      <value>SQL statement. </value>
    </member>
    <member name="T:Devart.Common.ScriptProgressEventHandler">
      <summary>Represents the method that will handle the <see cref="E:Devart.Common.DbScript.Progress" /> event of the <see cref="T:Devart.Common.DbScript" />. </summary>
      <keywords>ScriptProgressEventHandler delegate </keywords>
      <param name="sender">The source of the event. </param>
      <param name="e">The <see cref="T:Devart.Common.ScriptErrorEventArgs" /> object that contains the event data. </param>
    </member>
    <member name="T:Devart.Common.SqlStatement">
      <summary>Represents a single statement in a script. </summary>
    </member>
    <member name="M:Devart.Common.SqlStatement.Execute()">
      <summary>Executes the statement and returns result set. </summary>
      <keywords>SqlStatement.Execute method </keywords>
      <keywords>SqlStatement.Execute method </keywords>
      <returns>Result set returned by the statement execution. </returns>
    </member>
    <member name="P:Devart.Common.SqlStatement.Length">
      <summary>Gets length of the statement in symbols. </summary>
      <keywords>SqlStatement.Length property </keywords>
      <keywords>SqlStatement.Length property </keywords>
      <value>Length of the statement in symbols. </value>
    </member>
    <member name="P:Devart.Common.SqlStatement.LineNumber">
      <summary>Gets number of line in the whole script where the statement can be located. </summary>
      <keywords>SqlStatement.LineNumber property </keywords>
      <keywords>SqlStatement.LineNumber property </keywords>
      <value>Number of line in the whole script. </value>
    </member>
    <member name="P:Devart.Common.SqlStatement.LinePosition">
      <summary>Gets position of the statement in its line. </summary>
      <keywords>SqlStatement.LinePosition property </keywords>
      <keywords>SqlStatement.LinePosition property </keywords>
      <value>Position of the statement. </value>
    </member>
    <member name="P:Devart.Common.SqlStatement.Offset">
      <summary>Gets offset of the statement in the whole script text. </summary>
      <keywords>SqlStatement.Offset property </keywords>
      <keywords>SqlStatement.Offset property </keywords>
      <value>Offset of the statement in the script text. </value>
    </member>
    <member name="P:Devart.Common.SqlStatement.Text">
      <summary>Gets SQL statement to be executed. </summary>
      <keywords>SqlStatement.Text property </keywords>
      <keywords>SqlStatement.Text property </keywords>
      <value>SQL statement. </value>
    </member>
    <member name="T:Devart.Common.SqlStatementCollection">
      <summary>Represents collection of statements that constitute  script. </summary>
    </member>
    <member name="M:Devart.Common.SqlStatementCollection.#ctor()">
      <summary>Initializes a new instance of the <see cref="T:Devart.Common.SqlStatementCollection" /> class. </summary>
    </member>
    <member name="M:Devart.Common.SqlStatementCollection.Add(Devart.Common.SqlStatement)">
      <summary>Not used in <see cref="T:Devart.Common.SqlStatementCollection" />. </summary>
      <keywords>SqlStatementCollection.Add method </keywords>
      <keywords>SqlStatementCollection.Add method </keywords>
    </member>
    <member name="M:Devart.Common.SqlStatementCollection.Contains(Devart.Common.SqlStatement)">
      <summary>Gets a value indicating whether a <see cref="T:Devart.Common.SqlStatement" /> object exists in the collection. </summary>
      <keywords>SqlStatementCollection.Contains method </keywords>
      <keywords>SqlStatementCollection.Contains method </keywords>
      <param name="value">The value of the <see cref="T:Devart.Common.SqlStatement" /> object to find. </param>
      <returns><see langword="true" /> if the collection contains the <see cref="T:Devart.Common.SqlStatement" />; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="M:Devart.Common.SqlStatementCollection.CopyTo(Devart.Common.SqlStatement[],System.Int32)">
      <summary>Copies <see cref="T:Devart.Common.SqlStatement" /> objects from the <see cref="T:Devart.Common.SqlStatementCollection" /> to the specified array. </summary>
      <keywords>SqlStatementCollection.CopyTo method </keywords>
      <keywords>SqlStatementCollection.CopyTo method </keywords>
      <param name="array">The array into which to copy the <see cref="T:Devart.Common.SqlStatement" /> objects. </param>
      <param name="index">The zero-based index of the object to copy. </param>
    </member>
    <member name="M:Devart.Common.SqlStatementCollection.IndexOf(Devart.Common.SqlStatement)">
      <summary>Gets the location in the collection of the <see cref="T:Devart.Common.SqlStatement" /> object. </summary>
      <keywords>SqlStatementCollection.IndexOf method </keywords>
      <keywords>SqlStatementCollection.IndexOf method </keywords>
      <param name="value">The <see cref="T:Devart.Common.SqlStatement" /> object to find. </param>
      <returns>The zero-based location of the <see cref="T:Devart.Common.SqlStatement" /> in the collection. </returns>
    </member>
    <member name="M:Devart.Common.SqlStatementCollection.Insert(System.Int32,Devart.Common.SqlStatement)">
      <summary>Not used in <see cref="T:Devart.Common.SqlStatementCollection" />. </summary>
      <keywords>SqlStatementCollection.Insert method </keywords>
      <keywords>SqlStatementCollection.Insert method </keywords>
    </member>
    <member name="P:Devart.Common.SqlStatementCollection.Item(System.Int32)">
      <summary>Gets the <see cref="T:Devart.Common.SqlStatement" /> at the specified index. </summary>
      <keywords>SqlStatementCollection.Item property </keywords>
      <keywords>SqlStatementCollection.Item property </keywords>
      <param name="index">The zero-based index of the statement. </param>
      <value>The <see cref="T:Devart.Common.SqlStatement" /> at the specified index. </value>
    </member>
    <member name="M:Devart.Common.SqlStatementCollection.Remove(Devart.Common.SqlStatement)">
      <summary>Not used in <see cref="T:Devart.Common.SqlStatementCollection" />. </summary>
      <keywords>SqlStatementCollection.Remove method </keywords>
      <keywords>SqlStatementCollection.Remove method </keywords>
    </member>
    <member name="N:Devart.Data.Universal">
      <summary>The <see cref="N:Devart.Data.Universal" /> namespace is the Universal .NET Data Provider. </summary>
    </member>
    <member name="T:Devart.Data.Universal.IUniProvider">
      <summary>Describes interface used by Universal .NET to collaborate with .NET data providers. </summary>
    </member>
    <member name="T:Devart.Data.Universal.ProviderManager">
      <summary>Manages data providers that can be used by the Universal .NET data provider. </summary>
    </member>
    <member name="M:Devart.Data.Universal.ProviderManager.GetProvider(System.String)">
      <summary>Returns <see cref="T:Devart.Data.Universal.IUniProvider" /> interface for registered data provider. </summary>
      <keywords>ProviderManager.GetProvider method </keywords>
      <keywords>ProviderManager.GetProvider method </keywords>
      <param name="providerName">The name of the provider for which to return <see cref="T:Devart.Data.Universal.IUniProvider" /> interface. </param>
      <returns>An object implementing <see cref="T:Devart.Data.Universal.IUniProvider" /> for the registered data provider. </returns>
    </member>
    <member name="M:Devart.Data.Universal.ProviderManager.GetProviderNames()">
      <summary>Returns a list of the registered providers names. </summary>
      <keywords>ProviderManager.GetProviderNames method </keywords>
      <keywords>ProviderManager.GetProviderNames method </keywords>
      <returns>A list of the names of registered providers. </returns>
    </member>
    <member name="M:Devart.Data.Universal.ProviderManager.GetProviderNames(System.Boolean)">
      <summary>Returns names of correctly registered providers. </summary>
      <keywords>ProviderManager.GetProviderNames method </keywords>
      <keywords>ProviderManager.GetProviderNames method </keywords>
      <param name="validOnly">If <see langword="true" />, the method returns list of correctly registered providers only. If <see langword="false" />, returns the whole list of providers. </param>
      <returns>A list of the names of registered providers. </returns>
    </member>
    <member name="M:Devart.Data.Universal.ProviderManager.Register(Devart.Data.Universal.IUniProvider)">
      <summary>Registers IUniProvider so it can be used with Universal .NET. </summary>
      <keywords>ProviderManager.Register method </keywords>
      <keywords>ProviderManager.Register method </keywords>
      <param name="provider"> </param>
    </member>
    <member name="M:Devart.Data.Universal.ProviderManager.Register(System.String)">
      <summary>Registers IUniProvider so it can be used with Universal .NET. </summary>
      <keywords>ProviderManager.Register method </keywords>
      <keywords>ProviderManager.Register method </keywords>
    </member>
    <member name="M:Devart.Data.Universal.ProviderManager.Register(System.String,System.String)">
      <summary>Registers IUniProvider so it can be used with Universal .NET. </summary>
      <keywords>ProviderManager.Register method </keywords>
      <keywords>ProviderManager.Register method </keywords>
      <param name="providerName"> </param>
      <param name="providerClassName"> </param>
    </member>
    <member name="T:Devart.Data.Universal.UniBlob">
      <summary>Represents a variable-length stream of binary data to be stored in or retrieved from a database. </summary>
    </member>
    <member name="M:Devart.Data.Universal.UniBlob.#ctor(Devart.Data.Universal.UniConnection,Devart.Data.Universal.UniDbType)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.Universal.UniBlob" /> class. </summary>
      <param name="connection">The <see cref="T:Devart.Data.Universal.UniConnection" /> object. </param>
      <param name="uniDbType">One of the <see cref="T:Devart.Data.Universal.UniDbType" /> values. </param>
      <overloads>Initializes a new instance of the <see cref="T:Devart.Data.Universal.UniBlob" /> class. </overloads>
    </member>
    <member name="P:Devart.Data.Universal.UniBlob.CanRead">
      <summary>Gets a value indicating whether the UniBlob stream can be read. </summary>
      <keywords>UniBlob.CanRead property </keywords>
      <keywords>UniBlob.CanRead property </keywords>
      <value><see langword="true" /> if the <see cref="T:Devart.Data.Universal.UniBlob" /> stream supports reading; <see langword="false" /> if a <see cref="T:Devart.Data.Universal.UniBlob" /> is closed, disposed, or <see cref="F:Devart.Data.Universal.UniBlob.Null" />. </value>
    </member>
    <member name="P:Devart.Data.Universal.UniBlob.CanSeek">
      <summary>Gets a value indicating whether forward and backward seek operations can be performed. </summary>
      <keywords>UniBlob.CanSeek property </keywords>
      <keywords>UniBlob.CanSeek property </keywords>
      <value><see langword="true" /> if the <see cref="T:Devart.Data.Universal.UniBlob" /> stream supports seeking; <see langword="false" /> if a <see cref="T:Devart.Data.Universal.UniBlob" /> is closed, disposed, or <see cref="F:Devart.Data.Universal.UniBlob.Null" />. </value>
    </member>
    <member name="P:Devart.Data.Universal.UniBlob.CanWrite">
      <summary>Gets a value indicating whether the UniBlob object supports writing. </summary>
      <keywords>UniBlob.CanWrite property </keywords>
      <keywords>UniBlob.CanWrite property </keywords>
      <value><see langword="true" /> if the <see cref="T:Devart.Data.Universal.UniBlob" /> stream can be written; <see langword="false" /> if a <see cref="T:Devart.Data.Universal.UniBlob" /> is closed, disposed or <see cref="F:Devart.Data.Universal.UniBlob.Null" />. </value>
    </member>
    <member name="M:Devart.Data.Universal.UniBlob.Close()">
      <summary>Closes the current stream and releases any resources associated with it. </summary>
      <keywords>UniBlob.Close method </keywords>
      <keywords>UniBlob.Close method </keywords>
    </member>
    <member name="P:Devart.Data.Universal.UniBlob.Connection">
      <summary>Gets the <see cref="T:Devart.Data.Universal.UniConnection" /> used by this instance of the <see cref="T:Devart.Data.Universal.UniBlob" />. </summary>
      <keywords>UniBlob.Connection property </keywords>
      <keywords>UniBlob.Connection property </keywords>
      <value>The connection to a database. The default value is a null reference. </value>
    </member>
    <member name="M:Devart.Data.Universal.UniBlob.Dispose()">
      <summary>Releases all resources allocated by this object. </summary>
      <keywords>UniBlob.Dispose method </keywords>
      <keywords>UniBlob.Dispose method </keywords>
    </member>
    <member name="P:Devart.Data.Universal.UniBlob.IsNull">
      <summary>Gets a value indicating whether the <see cref="T:Devart.Data.Universal.UniBlob" /> is a <see cref="F:Devart.Data.Universal.UniBlob.Null" /> stream. </summary>
      <keywords>UniBlob.IsNull property </keywords>
      <keywords>UniBlob.IsNull property </keywords>
      <value><see langword="true" />, if the <see cref="T:Devart.Data.Universal.UniBlob" /> is a <see cref="F:Devart.Data.Universal.UniBlob.Null" />; otherwise, <see langword="false" />. </value>
    </member>
    <member name="P:Devart.Data.Universal.UniBlob.Length">
      <summary>Gets the size of the <see cref="T:Devart.Data.Universal.UniBlob" />. </summary>
      <keywords>UniBlob.Length property </keywords>
      <keywords>UniBlob.Length property </keywords>
      <value>The size of the <see cref="T:Devart.Data.Universal.UniBlob" /> in bytes. </value>
    </member>
    <member name="P:Devart.Data.Universal.UniBlob.LobType">
      <summary>Gets or sets type of the LOB object. </summary>
      <keywords>UniBlob.LobType property </keywords>
      <keywords>UniBlob.LobType property </keywords>
      <value>One of <see cref="T:Devart.Data.Universal.UniDbType" /> values. The following types are allowed: <see cref="F:Devart.Data.Universal.UniDbType.Blob" />, <see cref="F:Devart.Data.Universal.UniDbType.Clob" />, <see cref="F:Devart.Data.Universal.UniDbType.NClob" />. </value>
    </member>
    <member name="F:Devart.Data.Universal.UniBlob.Null">
      <summary>Represents a null <see cref="T:Devart.Data.Universal.UniBlob" /> object. </summary>
      <keywords>UniBlob.Null field </keywords>
    </member>
    <member name="P:Devart.Data.Universal.UniBlob.Position">
      <summary>Gets the current read position in the <see cref="T:Devart.Data.Universal.UniBlob" /> stream. </summary>
      <keywords>UniBlob.Position property </keywords>
      <keywords>UniBlob.Position property </keywords>
      <value>The current position within the <see cref="T:Devart.Data.Universal.UniBlob" /> stream. </value>
    </member>
    <member name="M:Devart.Data.Universal.UniBlob.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>Reads a sequence of bytes from the current <see cref="T:Devart.Data.Universal.UniBlob" /> stream and advances the position within the stream by the number of bytes read. </summary>
      <keywords>UniBlob.Read method </keywords>
      <keywords>UniBlob.Read method </keywords>
      <param name="buffer">The byte array buffer to be populated. </param>
      <param name="offset">The zero-based byte offset in the buffer. </param>
      <param name="count">The amount of bytes to read. </param>
      <returns>The total number of bytes read into the buffer. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniBlob.Seek(System.Int64,System.IO.SeekOrigin)">
      <summary>Sets the position on the current <see cref="T:Devart.Data.Universal.UniBlob" /> stream. </summary>
      <keywords>UniBlob.Seek method </keywords>
      <keywords>UniBlob.Seek method </keywords>
      <param name="offset">A byte offset relative to origin. </param>
      <param name="origin">A value of <see cref="T:System.IO.SeekOrigin" /> type indicating the reference point used to obtain the new position. </param>
      <returns>The new position within the current stream. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniBlob.SetLength(System.Int64)">
      <summary>Sets length for <see cref="T:Devart.Data.Universal.UniBlob" /> value. </summary>
      <keywords>UniBlob.SetLength method </keywords>
      <keywords>UniBlob.SetLength method </keywords>
      <param name="len">The size of the <see cref="T:Devart.Data.Universal.UniBlob" /> in bytes. </param>
    </member>
    <member name="P:Devart.Data.Universal.UniBlob.Value">
      <summary>Gets the value of the <see cref="T:Devart.Data.Universal.UniBlob" /> object. </summary>
      <keywords>UniBlob.Value property </keywords>
      <keywords>UniBlob.Value property </keywords>
      <value>The value of the <see cref="T:Devart.Data.Universal.UniBlob" /> object. </value>
    </member>
    <member name="M:Devart.Data.Universal.UniBlob.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>Writes a sequence of bytes to the current <see cref="T:Devart.Data.Universal.UniBlob" /> stream, and advances the current position within this stream by the number of bytes written. </summary>
      <keywords>UniBlob.Write method </keywords>
      <keywords>UniBlob.Write method </keywords>
      <param name="buffer">An array of bytes. </param>
      <param name="offset">The zero-based byte offset in the buffer. </param>
      <param name="count">The amount of bytes to be written to the current stream. </param>
    </member>
    <member name="T:Devart.Data.Universal.UniCommand">
      <summary>Represents a SQL statement or stored procedure to execute against a database. </summary>
    </member>
    <member name="M:Devart.Data.Universal.UniCommand.#ctor()">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.Universal.UniCommand" /> class. </summary>
      <overloads>Initializes a new instance of the <see cref="T:Devart.Data.Universal.UniCommand" /> class. </overloads>
    </member>
    <member name="M:Devart.Data.Universal.UniCommand.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.Universal.UniCommand" /> class with the text of the query. </summary>
      <param name="commandText">The text of the query. </param>
    </member>
    <member name="M:Devart.Data.Universal.UniCommand.#ctor(System.String,Devart.Data.Universal.UniConnection)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.Universal.UniCommand" /> class with the text of the query and a <see ref="T:Devart.Data.Universal.UniConnection" /> object. </summary>
      <param name="commandText">The text of the query. </param>
      <param name="connection">A <see cref="T:Devart.Data.Universal.UniConnection" /> object that represents the connection to an instance of  server. </param>
    </member>
    <member name="M:Devart.Data.Universal.UniCommand.#ctor(System.String,Devart.Data.Universal.UniConnection,Devart.Data.Universal.UniTransaction)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.Universal.UniCommand" /> class with the text of the query, a <see ref="T:Devart.Data.Universal.UniConnection" /> object,  and the <see cref="T:Devart.Data.Universal.UniTransaction" />. </summary>
      <param name="commandText">The text of the query. </param>
      <param name="connection">A <see cref="T:Devart.Data.Universal.UniConnection" /> object that represents the connection to an instance of  server. </param>
      <param name="transaction"><see cref="T:Devart.Data.Universal.UniTransaction" /> object used to perform transactions with this <see cref="T:Devart.Data.Universal.UniCommand" /> object. </param>
    </member>
    <member name="M:Devart.Data.Universal.UniCommand.Clone()">
      <summary>Creates a new object that is a copy of the current <see cref="T:Devart.Data.Universal.UniCommand" /> instance. </summary>
      <keywords>UniCommand.Clone method </keywords>
      <keywords>UniCommand.Clone method </keywords>
      <returns>A new <see cref="T:Devart.Data.Universal.UniCommand" /> object in which all property values are the same as the original. </returns>
    </member>
    <member name="P:Devart.Data.Universal.UniCommand.CommandText">
      <summary>Gets or sets the SQL statement to execute against a database. </summary>
      <keywords>UniCommand.CommandText property </keywords>
      <keywords>UniCommand.CommandText property </keywords>
      <value>The SQL statement or stored procedure to execute. The default value is an empty string (""). </value>
    </member>
    <member name="P:Devart.Data.Universal.UniCommand.Connection">
      <summary>Gets or sets the <see cref="T:Devart.Data.Universal.UniConnection" /> used by this instance of the <see cref="T:Devart.Data.Universal.UniCommand" />. </summary>
      <keywords>UniCommand.Connection property </keywords>
      <keywords>UniCommand.Connection property </keywords>
      <value>The connection to a database. The default value is a null reference. </value>
    </member>
    <member name="M:Devart.Data.Universal.UniCommand.CreateParameter()">
      <summary>Creates a new instance of a <see cref="T:Devart.Data.Universal.UniParameter" /> object. </summary>
      <keywords>UniCommand.CreateParameter method </keywords>
      <keywords>UniCommand.CreateParameter method </keywords>
      <returns>A <see cref="T:Devart.Data.Universal.UniParameter" /> object. </returns>
      <overloads>Creates a new instance of a <see cref="T:Devart.Data.Universal.UniParameter" /> object. </overloads>
    </member>
    <member name="M:Devart.Data.Universal.UniCommand.ExecuteNonQuery()">
      <summary>Executes SQL statement against the <see cref="T:Devart.Data.Universal.UniConnection" /> and returns the number of rows affected. </summary>
      <keywords>UniCommand.ExecuteNonQuery method </keywords>
      <keywords>UniCommand.ExecuteNonQuery method </keywords>
      <returns>For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command. For all other types of statements, the return value is -1. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniCommand.ExecuteReader()">
      <summary>Sends the <see cref="P:Devart.Data.Universal.UniCommand.CommandText" /> to the <see cref="P:Devart.Data.Universal.UniCommand.Connection" /> and builds a <see cref="T:Devart.Data.Universal.UniDataReader" />. </summary>
      <keywords>UniCommand.ExecuteReader method </keywords>
      <keywords>UniCommand.ExecuteReader method </keywords>
      <returns>A <see cref="T:Devart.Data.Universal.UniDataReader" /> object. </returns>
      <overloads>Sends the <see cref="P:Devart.Data.Universal.UniCommand.CommandText" /> to the <see cref="P:Devart.Data.Universal.UniCommand.Connection" /> and builds a <see cref="T:Devart.Data.Universal.UniDataReader" />. </overloads>
    </member>
    <member name="M:Devart.Data.Universal.UniCommand.ExecuteReader(System.Data.CommandBehavior)">
      <summary>Sends the <see cref="P:Devart.Data.Universal.UniCommand.CommandText" /> to the <see cref="P:Devart.Data.Universal.UniCommand.Connection" />, and builds a <see cref="T:Devart.Data.Universal.UniDataReader" /> using one of the <see cref="T:System.Data.CommandBehavior" /> values. </summary>
      <keywords>UniCommand.ExecuteReader method </keywords>
      <keywords>UniCommand.ExecuteReader method </keywords>
      <param name="behavior">One of the <see cref="T:System.Data.CommandBehavior" /> values. </param>
      <returns>A <see cref="T:Devart.Data.Universal.UniDataReader" /> object. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniCommand.ExecuteScalar()">
      <summary>Executes the query, and returns the first column of the first row in the result set returned by the query. Extra columns or rows are ignored. </summary>
      <keywords>UniCommand.ExecuteScalar method </keywords>
      <keywords>UniCommand.ExecuteScalar method </keywords>
      <returns>The first column of the first row in the result set. </returns>
    </member>
    <member name="P:Devart.Data.Universal.UniCommand.Parameters">
      <summary>Gets or sets the <see cref="T:Devart.Data.Universal.UniParameterCollection" />. </summary>
      <keywords>UniCommand.Parameters property </keywords>
      <keywords>UniCommand.Parameters property </keywords>
      <value>The parameters of a SQL statement or a stored procedure. The default value is an empty collection. </value>
    </member>
    <member name="T:Devart.Data.Universal.UniCommandBuilder">
      <summary>Allows to generate automatically single-table commands used to reconcile changes made to a <see cref="T:System.Data.DataSet" /> with the associated  database. </summary>
    </member>
    <member name="M:Devart.Data.Universal.UniCommandBuilder.#ctor()">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.Universal.UniCommandBuilder" /> class. </summary>
      <overloads>Initializes a new instance of the <see cref="T:Devart.Data.Universal.UniCommandBuilder" /> class. </overloads>
    </member>
    <member name="M:Devart.Data.Universal.UniCommandBuilder.#ctor(Devart.Data.Universal.UniDataAdapter)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.Universal.UniCommandBuilder" /> class with the associated <see cref="T:Devart.Data.Universal.UniDataAdapter" /> object. </summary>
      <param name="adapter">A <see cref="T:Devart.Data.Universal.UniDataAdapter" /> object to associate with this <see cref="T:Devart.Data.Universal.UniCommandBuilder" />. </param>
    </member>
    <member name="P:Devart.Data.Universal.UniCommandBuilder.DataAdapter">
      <summary>Gets or sets a <see cref="T:Devart.Data.Universal.UniDataAdapter" /> object for which this <see cref="T:Devart.Data.Universal.UniCommandBuilder" /> object will generate SQL statements. </summary>
      <keywords>UniCommandBuilder.DataAdapter property </keywords>
      <keywords>UniCommandBuilder.DataAdapter property </keywords>
      <value>A <see cref="T:Devart.Data.Universal.UniDataAdapter" /> object that is associated with this <see cref="T:Devart.Data.Universal.UniCommandBuilder" />. </value>
    </member>
    <member name="M:Devart.Data.Universal.UniCommandBuilder.DeriveParameters(Devart.Data.Universal.UniCommand)">
      <summary>Populates the specified <see cref="T:Devart.Data.Universal.UniCommand" /> object's <see cref="P:Devart.Data.Universal.UniCommand.Parameters" /> collection with parameter information for a stored procedure specified in the <see cref="P:Devart.Data.Universal.UniCommand.CommandText" />. </summary>
      <keywords>UniCommandBuilder.DeriveParameters method </keywords>
      <keywords>UniCommandBuilder.DeriveParameters method </keywords>
      <param name="command">The <see cref="T:Devart.Data.Universal.UniCommand" /> referencing the stored procedure for which the parameter information is to be derived. The derived parameters will be populated into the <see cref="P:Devart.Data.Universal.UniCommand.Parameters" /> collection of this command. </param>
    </member>
    <member name="M:Devart.Data.Universal.UniCommandBuilder.GetDeleteCommand()">
      <summary>Gets the automatically generated SQL statement required to perform deletions on the database when an application calls <see cref="M:System.Data.Common.DbDataAdapter.Update()" /> on the <see cref="T:Devart.Data.Universal.UniDataAdapter" />. </summary>
      <keywords>UniCommandBuilder.GetDeleteCommand method </keywords>
      <keywords>UniCommandBuilder.GetDeleteCommand method </keywords>
      <returns>The text of the SQL statement to be executed. </returns>
      <overloads>Gets the automatically generated SQL statement required to perform deletions on the data source. </overloads>
    </member>
    <member name="M:Devart.Data.Universal.UniCommandBuilder.GetInsertCommand()">
      <summary>Gets the automatically generated SQL statement required to perform inserts on the database when an application calls <see cref="M:System.Data.Common.DbDataAdapter.Update()" /> on the <see cref="T:Devart.Data.Universal.UniDataAdapter" />. </summary>
      <keywords>UniCommandBuilder.GetInsertCommand method </keywords>
      <keywords>UniCommandBuilder.GetInsertCommand method </keywords>
      <returns>The text of the SQL statement to be executed. </returns>
      <overloads>Gets the automatically generated SQL statement required to perform inserts on the data source. </overloads>
    </member>
    <member name="M:Devart.Data.Universal.UniCommandBuilder.GetUpdateCommand()">
      <summary>Gets the automatically generated SQL statement required to perform updates on the database when an application calls <see cref="M:System.Data.Common.DbDataAdapter.Update()" /> on the <see cref="T:Devart.Data.Universal.UniDataAdapter" />. </summary>
      <keywords>UniCommandBuilder.GetUpdateCommand method </keywords>
      <keywords>UniCommandBuilder.GetUpdateCommand method </keywords>
      <returns>The text of the SQL statement to be executed. </returns>
      <overloads>Gets the automatically generated SQL statement required to perform updates on the data source. </overloads>
    </member>
    <member name="P:Devart.Data.Universal.UniCommandBuilder.KeyFields">
      <summary>Gets or sets string containing list of key field names separated by semicolon. They are used to generate update commands. </summary>
      <keywords>UniCommandBuilder.KeyFields property </keywords>
      <value>The string containing list of key field names separated by semicolon. </value>
    </member>
    <member name="M:Devart.Data.Universal.UniCommandBuilder.QuoteIdentifier(System.String)">
      <summary>Returns the string passed as the parameter enclosed in quotes. </summary>
      <keywords>UniCommandBuilder.QuoteIdentifier method </keywords>
      <keywords>UniCommandBuilder.QuoteIdentifier method </keywords>
      <param name="unquotedIdentifier">Identifier to be placed inside the quotes. </param>
      <returns>The identifier enclosed in quotes. </returns>
    </member>
    <member name="P:Devart.Data.Universal.UniCommandBuilder.QuotePrefix">
      <summary>The string to be placed before identifier when quoting a string with <see cref="M:Devart.Data.Universal.UniCommandBuilder.QuoteIdentifier" /> method. </summary>
      <keywords>UniCommandBuilder.QuotePrefix property </keywords>
      <keywords>UniCommandBuilder.QuotePrefix property </keywords>
      <value>Quote prefix. </value>
    </member>
    <member name="P:Devart.Data.Universal.UniCommandBuilder.QuoteSuffix">
      <summary>The string to be placed after identifier when quoting a string with <see cref="M:Devart.Data.Universal.UniCommandBuilder.QuoteIdentifier" /> method. </summary>
      <keywords>UniCommandBuilder.QuoteSuffix property </keywords>
      <keywords>UniCommandBuilder.QuoteSuffix property </keywords>
      <value>Quote suffix. </value>
    </member>
    <member name="P:Devart.Data.Universal.UniCommandBuilder.Quoted">
      <summary><para>Gets or sets whether the command builder quotes all the names of database objects.</para> </summary>
      <keywords>UniCommandBuilder.Quoted property </keywords>
      <keywords>UniCommandBuilder.Quoted property </keywords>
      <value><see langword="true" /> if the command builder will quote all the names of database objects; otherwise, <see langword="false" />. The default value is <see langword="false" />. </value>
    </member>
    <member name="M:Devart.Data.Universal.UniCommandBuilder.RefreshSchema()">
      <summary>Refreshes the database schema information used to generate INSERT, UPDATE, or DELETE statements. </summary>
      <keywords>UniCommandBuilder.RefreshSchema method </keywords>
      <keywords>UniCommandBuilder.RefreshSchema method </keywords>
    </member>
    <member name="P:Devart.Data.Universal.UniCommandBuilder.RefreshingFields">
      <summary>Gets or sets list of fields whose values should be retrieved after a DML statement execution. </summary>
      <keywords>UniCommandBuilder.RefreshingFields property </keywords>
      <value>The string containing list of field names separated by semicolon. </value>
    </member>
    <member name="M:Devart.Data.Universal.UniCommandBuilder.UnquoteIdentifier(System.String)">
      <summary>Removes quote strings from identifier. </summary>
      <keywords>UniCommandBuilder.UnquoteIdentifier method </keywords>
      <keywords>UniCommandBuilder.UnquoteIdentifier method </keywords>
      <param name="quotedIdentifier">String containing <see cref="P:Devart.Common.DbCommandBuilderBase.QuotePrefix" />, identifier itself, and <see cref="P:Devart.Common.DbCommandBuilderBase.QuoteSuffix" /> parts. </param>
      <returns>Unquoted identifier. </returns>
    </member>
    <member name="P:Devart.Data.Universal.UniCommandBuilder.UpdatingFields">
      <summary>Gets or sets list of fields to modify. </summary>
      <keywords>UniCommandBuilder.UpdatingFields property </keywords>
      <keywords>UniCommandBuilder.UpdatingFields property </keywords>
      <value>The string containing list of field names separated by semicolon. </value>
    </member>
    <member name="P:Devart.Data.Universal.UniCommandBuilder.UpdatingTable">
      <summary>
        <para>Gets or sets table name to generate update statements for.</para> </summary>
      <keywords>UniCommandBuilder.UpdatingTable property </keywords>
      <value>The name of the table. </value>
    </member>
    <member name="T:Devart.Data.Universal.UniConnection">
      <summary>Represents an open connection to a server. </summary>
    </member>
    <member name="M:Devart.Data.Universal.UniConnection.#ctor()">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.Universal.UniConnection" /> class. </summary>
      <overloads>Initializes a new instance of the <see cref="T:Devart.Data.Universal.UniConnection" /> class. </overloads>
    </member>
    <member name="M:Devart.Data.Universal.UniConnection.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.Universal.UniConnection" /> class when given a string containing the connection string. </summary>
      <param name="connectionString">The connection used to open the  server. </param>
    </member>
    <member name="M:Devart.Data.Universal.UniConnection.BeginTransaction()">
      <summary>Begins a database transaction. </summary>
      <keywords>UniConnection.BeginTransaction method </keywords>
      <keywords>UniConnection.BeginTransaction method </keywords>
      <returns>An object representing the new transaction. </returns>
      <overloads>Begins a transaction at the database. </overloads>
    </member>
    <member name="M:Devart.Data.Universal.UniConnection.BeginTransaction(System.Data.IsolationLevel)">
      <summary>Begins a database transaction with the specified isolation level. </summary>
      <keywords>UniConnection.BeginTransaction method </keywords>
      <keywords>UniConnection.BeginTransaction method </keywords>
      <param name="il">Isolation level, one of <b>System.Data.IsolationLevel</b> values. </param>
      <returns>An object representing the new transaction. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniConnection.ChangeDatabase(System.String)">
      <summary>Changes the current database associated with an open <see cref="T:Devart.Data.Universal.UniConnection" />. </summary>
      <keywords>UniConnection.ChangeDatabase method </keywords>
      <keywords>UniConnection.ChangeDatabase method </keywords>
      <param name="databaseName">The database name. </param>
    </member>
    <member name="M:Devart.Data.Universal.UniConnection.ClearAllPools()">
      <summary>Clears all pools associated with the connection. </summary>
      <keywords>UniConnection.ClearAllPools method </keywords>
      <keywords>UniConnection.ClearAllPools method </keywords>
    </member>
    <member name="M:Devart.Data.Universal.UniConnection.ClearAllPools(System.Boolean)">
      <summary>Clears all pools associated with the connection. </summary>
      <keywords>UniConnection.ClearAllPools method </keywords>
      <param name="forced">Determines whether to start the operation immediately, or after the timeout. </param>
    </member>
    <member name="M:Devart.Data.Universal.UniConnection.ClearPool(Devart.Data.Universal.UniConnection)">
      <summary>Clears the pool matching <see cref="P:Devart.Data.Universal.UniConnection.ConnectionString" /> of provided <see cref="T:Devart.Data.Universal.UniConnection" /> object. </summary>
      <keywords>UniConnection.ClearPool method </keywords>
      <keywords>UniConnection.ClearPool method </keywords>
      <param name="connection">A connection that holds <see cref="P:Devart.Data.Universal.UniConnection.ConnectionString" /> that identifies pool to clear. </param>
    </member>
    <member name="M:Devart.Data.Universal.UniConnection.Clone()">
      <summary>Creates a new object that is a copy of the current instance. </summary>
      <keywords>UniConnection.Clone method </keywords>
      <keywords>UniConnection.Clone method </keywords>
      <returns>A new <see cref="T:Devart.Data.Universal.UniConnection" /> object. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniConnection.Close()">
      <summary>Closes the connection to the database. This is the preferred method of closing any open connection. </summary>
      <keywords>UniConnection.Close method </keywords>
      <keywords>UniConnection.Close method </keywords>
    </member>
    <member name="M:Devart.Data.Universal.UniConnection.Commit()">
      <summary>Commits the database transaction. </summary>
      <keywords>UniConnection.Commit method </keywords>
      <keywords>UniConnection.Commit method </keywords>
    </member>
    <member name="P:Devart.Data.Universal.UniConnection.ConnectionString">
      <summary>Gets or sets the string used to open a server connection. </summary>
      <keywords>UniConnection.ConnectionString property </keywords>
      <keywords>UniConnection.ConnectionString property </keywords>
      <value>The connection string that includes the source database name, and other parameters needed to establish the initial connection. The default value is an empty string (""). </value>
    </member>
    <member name="P:Devart.Data.Universal.UniConnection.ConnectionTimeout">
      <summary>Gets the time to wait while trying to establish a connection before terminating the attempt and generating an error. </summary>
      <keywords>UniConnection.ConnectionTimeout property </keywords>
      <keywords>UniConnection.ConnectionTimeout property </keywords>
      <value>The time (in seconds) to wait for a connection to open. The default value is 15 seconds. </value>
    </member>
    <member name="M:Devart.Data.Universal.UniConnection.CreateCommand()">
      <summary>Creates and returns a <see cref="T:Devart.Data.Universal.UniCommand" /> object associated with the <see cref="T:Devart.Data.Universal.UniConnection" />. </summary>
      <keywords>UniConnection.CreateCommand method </keywords>
      <keywords>UniConnection.CreateCommand method </keywords>
      <returns><para>A <see cref="T:Devart.Data.Universal.UniCommand" /> object. </para> </returns>
      <overloads>Creates and returns a <see cref="T:Devart.Data.Universal.UniCommand" /> object associated with the <see cref="T:Devart.Data.Universal.UniConnection" />. </overloads>
    </member>
    <member name="P:Devart.Data.Universal.UniConnection.DataSource">
      <summary>Gets or sets name of the data source. </summary>
      <keywords>UniConnection.DataSource property </keywords>
      <keywords>UniConnection.DataSource property </keywords>
      <value>Name of the data source. </value>
    </member>
    <member name="P:Devart.Data.Universal.UniConnection.Database">
      <summary>Gets or sets the name of the current database or the database to be used once a connection is open. </summary>
      <keywords>UniConnection.Database property </keywords>
      <keywords>UniConnection.Database property </keywords>
      <value>The name of the current database or the name of the database to be used once a connection is open. The default value is an empty string (""). </value>
    </member>
    <member name="M:Devart.Data.Universal.UniConnection.EnlistTransaction(System.Transactions.Transaction)">
      <summary>Enlists in the specified transaction. </summary>
      <keywords>UniConnection.EnlistTransaction method </keywords>
      <param name="transaction">A reference to an existing <b>System.Transactions.Transaction</b> in which to enlist. </param>
    </member>
    <member name="E:Devart.Data.Universal.UniConnection.InfoMessage">
      <summary>Occurs when  server returns a warning or informational message. </summary>
      <keywords>UniConnection.InfoMessage event </keywords>
    </member>
    <member name="P:Devart.Data.Universal.UniConnection.Macros">
      <summary>Gets collection of macros used in UniSQL statements. </summary>
      <keywords>UniConnection.Macros property </keywords>
      <keywords>UniConnection.Macros property </keywords>
      <value><see cref="T:Devart.Data.Universal.UniMacroCollection" /> that contains custom macros. Note that predefined macros are not listed in the collection. </value>
    </member>
    <member name="P:Devart.Data.Universal.UniConnection.Name">
      <summary>Gets or sets the name of component that will be displayed in DBMonitor application. </summary>
      <keywords>UniConnection.Name property </keywords>
      <keywords>UniConnection.Name property </keywords>
      <value>The name of the component. </value>
    </member>
    <member name="M:Devart.Data.Universal.UniConnection.Open()">
      <summary>Opens a database connection with the property settings specified by the <see cref="P:Devart.Data.Universal.UniConnection.ConnectionString" />. </summary>
      <keywords>UniConnection.Open method </keywords>
      <keywords>UniConnection.Open method </keywords>
    </member>
    <member name="P:Devart.Data.Universal.UniConnection.Password">
      <summary>Gets or sets the user's password to connect. </summary>
      <keywords>UniConnection.Password property </keywords>
      <keywords>UniConnection.Password property </keywords>
      <value>The user's password to connect. </value>
    </member>
    <member name="P:Devart.Data.Universal.UniConnection.Port">
      <summary>Gets or sets the port to which to connect. </summary>
      <keywords>UniConnection.Port property </keywords>
      <value>The port to which to connect. </value>
    </member>
    <member name="P:Devart.Data.Universal.UniConnection.Provider">
      <summary>Gets or sets the name of the ADO.NET data provider used to access actual data. </summary>
      <keywords>UniConnection.Provider property </keywords>
      <keywords>UniConnection.Provider property </keywords>
      <value>Name of the ADO.NET data provider. The default value is an empty string. </value>
    </member>
    <member name="P:Devart.Data.Universal.UniConnection.ProviderIntf">
      <summary>Returns the <see cref="T:Devart.Data.Universal.IUniProvider" /> interface, which allows to manipulate any provider in run time. </summary>
      <keywords>UniConnection.ProviderIntf property </keywords>
      <keywords>UniConnection.ProviderIntf property </keywords>
      <value>The <see cref="T:Devart.Data.Universal.IUniProvider" /> interface. </value>
    </member>
    <member name="M:Devart.Data.Universal.UniConnection.Rollback()">
      <summary>Rolls back a transaction from a pending state. </summary>
      <keywords>UniConnection.Rollback method </keywords>
      <keywords>UniConnection.Rollback method </keywords>
    </member>
    <member name="P:Devart.Data.Universal.UniConnection.ServerVersion">
      <summary>Gets a string containing the version of the instance of  server to which the client is connected. </summary>
      <keywords>UniConnection.ServerVersion property </keywords>
      <keywords>UniConnection.ServerVersion property </keywords>
      <value>The version of the instance of  server. </value>
    </member>
    <member name="P:Devart.Data.Universal.UniConnection.State">
      <summary>Gets the current state of the connection. </summary>
      <keywords>UniConnection.State property </keywords>
      <keywords>UniConnection.State property </keywords>
      <value>A bitwise combination of the <see cref="T:System.Data.ConnectionState" /> values. The default value is Closed. </value>
    </member>
    <member name="E:Devart.Data.Universal.UniConnection.StateChange">
      <summary>Occurs when the state of the connection changes. </summary>
      <keywords>UniConnection.StateChange event </keywords>
    </member>
    <member name="P:Devart.Data.Universal.UniConnection.UserId">
      <summary>Gets or sets the name of the user to connect. </summary>
      <keywords>UniConnection.UserId property </keywords>
      <keywords>UniConnection.UserId property </keywords>
      <value>The name of the user to connect. </value>
    </member>
    <member name="T:Devart.Data.Universal.UniConnectionStringBuilder">
      <summary>Allows to automatically generate connection strings used to connect to a server database. </summary>
    </member>
    <member name="M:Devart.Data.Universal.UniConnectionStringBuilder.#ctor()">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.Universal.UniConnectionStringBuilder" /> class. </summary>
      <overloads>Initializes a new instance of the <see cref="T:Devart.Data.Universal.UniConnectionStringBuilder" /> class. </overloads>
    </member>
    <member name="M:Devart.Data.Universal.UniConnectionStringBuilder.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.Universal.UniConnectionStringBuilder" /> class and assigns custom initial values to some properties. </summary>
      <param name="connectionString">Initial connection setup string. </param>
    </member>
    <member name="M:Devart.Data.Universal.UniConnectionStringBuilder.Clear()">
      <summary>Sets all <see cref="T:Devart.Data.Universal.UniConnectionStringBuilder" /> properties to default values. </summary>
      <keywords>UniConnectionStringBuilder.Clear method </keywords>
      <keywords>UniConnectionStringBuilder.Clear method </keywords>
    </member>
    <member name="P:Devart.Data.Universal.UniConnectionStringBuilder.ConnectionLifetime">
      <summary>Gets or sets time span in seconds for connection to live. </summary>
      <keywords>UniConnectionStringBuilder.ConnectionLifetime property </keywords>
      <value>Number of seconds for connection to live. </value>
    </member>
    <member name="P:Devart.Data.Universal.UniConnectionStringBuilder.ConnectionString">
      <summary>Gets connection string based on values of <see cref="T:Devart.Data.Universal.UniConnectionStringBuilder" /> properties. </summary>
      <keywords>UniConnectionStringBuilder.ConnectionString property </keywords>
      <keywords>UniConnectionStringBuilder.ConnectionString property </keywords>
      <value>Connection string based on values of <see cref="T:Devart.Data.Universal.UniConnectionStringBuilder" /> properties. </value>
    </member>
    <member name="M:Devart.Data.Universal.UniConnectionStringBuilder.ContainsKey(System.String)">
      <summary>Indicates whether specified key is set in the <see cref="T:Devart.Data.Universal.UniConnectionStringBuilder" /> object. </summary>
      <keywords>UniConnectionStringBuilder.ContainsKey method </keywords>
      <keywords>UniConnectionStringBuilder.ContainsKey method </keywords>
      <param name="keyword">Key to search for. </param>
      <returns><see langword="true" />, if the value of the specified key differs from default; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="P:Devart.Data.Universal.UniConnectionStringBuilder.DataSource">
      <summary>Gets or sets the data source to which to connect. </summary>
      <keywords>UniConnectionStringBuilder.DataSource property </keywords>
      <value>The data source to which to connect. </value>
    </member>
    <member name="P:Devart.Data.Universal.UniConnectionStringBuilder.Database">
      <summary>Gets or sets the name of the database to which to connect. </summary>
      <keywords>UniConnectionStringBuilder.Database property </keywords>
      <value>The name of the database to which to connect. </value>
    </member>
    <member name="M:Devart.Data.Universal.UniConnectionStringBuilder.EquivalentTo(Devart.Common.DbConnectionStringBuilder,System.Boolean)">
      <summary>Returns a value indicating whether this <see cref="T:Devart.Data.Universal.UniConnectionStringBuilder" /> object has same parameters as given <b>DbConnectionStringBuilder</b> object. </summary>
      <keywords>UniConnectionStringBuilder.EquivalentTo method </keywords>
      <keywords>UniConnectionStringBuilder.EquivalentTo method </keywords>
      <param name="connectionStringBuilder">A <b>DbConnectionStringBuilder</b> object to compare with. </param>
      <param name="loginOnly"> </param>
      <returns><see langword="true" />, if the two objects have same parameters; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniConnectionStringBuilder.GetNativeConnectionString()">
      <summary>Gets the connection string that will be passed to the corresponding <see cref="P:Devart.Data.Universal.UniConnectionStringBuilder.Provider" />. </summary>
      <keywords>UniConnectionStringBuilder.GetNativeConnectionString method </keywords>
      <returns>The connection string that will be passed to the corresponding <see cref="P:Devart.Data.Universal.UniConnectionStringBuilder.Provider" />. </returns>
    </member>
    <member name="P:Devart.Data.Universal.UniConnectionStringBuilder.IsFixedSize">
      <summary>Returns <see langword="true" />. </summary>
      <keywords>UniConnectionStringBuilder.IsFixedSize property </keywords>
      <keywords>UniConnectionStringBuilder.IsFixedSize property </keywords>
      <value>Always <see langword="true" />. </value>
    </member>
    <member name="P:Devart.Data.Universal.UniConnectionStringBuilder.IsReadOnly">
      <summary>Always false. </summary>
      <keywords>UniConnectionStringBuilder.IsReadOnly property </keywords>
      <keywords>UniConnectionStringBuilder.IsReadOnly property </keywords>
    </member>
    <member name="P:Devart.Data.Universal.UniConnectionStringBuilder.Item(System.String)">
      <summary>Returns the value of given key. </summary>
      <keywords>UniConnectionStringBuilder.Item property </keywords>
      <keywords>UniConnectionStringBuilder.Item property </keywords>
      <param name="keyword">The key name. </param>
      <value>Value of given key. </value>
    </member>
    <member name="P:Devart.Data.Universal.UniConnectionStringBuilder.Keys">
      <summary>Collection of keys in the <see cref="T:Devart.Data.Universal.UniConnectionStringBuilder" />. </summary>
      <keywords>UniConnectionStringBuilder.Keys property </keywords>
      <keywords>UniConnectionStringBuilder.Keys property </keywords>
      <value>Collection of keys. </value>
    </member>
    <member name="P:Devart.Data.Universal.UniConnectionStringBuilder.MaxPoolSize">
      <summary>The maximum number of connections allowed in the pool. </summary>
      <keywords>UniConnectionStringBuilder.MaxPoolSize property </keywords>
      <value>Number of connections allowed in the pool. The default value is 100. </value>
    </member>
    <member name="P:Devart.Data.Universal.UniConnectionStringBuilder.MinPoolSize">
      <summary>The minimum number of connections allowed in the pool. </summary>
      <keywords>UniConnectionStringBuilder.MinPoolSize property </keywords>
      <value>Number of connections allowed in the pool. The default value is 0. </value>
    </member>
    <member name="P:Devart.Data.Universal.UniConnectionStringBuilder.Password">
      <summary>Gets or sets the user's password to connect. </summary>
      <keywords>UniConnectionStringBuilder.Password property </keywords>
      <value>The user's password to connect. </value>
    </member>
    <member name="P:Devart.Data.Universal.UniConnectionStringBuilder.Pooling">
      <summary>Gets or sets pooling mode. </summary>
      <keywords>UniConnectionStringBuilder.Pooling property </keywords>
      <value>If <see langword="true" /> (the default value), when a <see cref="T:Devart.Data.Universal.UniConnection" /> is closed, the internal connection object is not actually closed, and is placed  object is drawn from the appropriate pool or is created and added to the appropriate pool. </value>
    </member>
    <member name="P:Devart.Data.Universal.UniConnectionStringBuilder.Port">
      <summary>Gets or sets the port to which to connect. </summary>
      <keywords>UniConnectionStringBuilder.Port property </keywords>
      <value>The port to which to connect. </value>
    </member>
    <member name="P:Devart.Data.Universal.UniConnectionStringBuilder.Provider">
      <summary>Gets or sets the name of the ADO.NET data provider used to access actual data. </summary>
      <keywords>UniConnectionStringBuilder.Provider property </keywords>
      <keywords>UniConnectionStringBuilder.Provider property </keywords>
      <value>Name of the ADO.NET data provider. The default value is an empty string. </value>
    </member>
    <member name="M:Devart.Data.Universal.UniConnectionStringBuilder.Remove(System.String)">
      <summary>Sets value of the specified key to default. </summary>
      <keywords>UniConnectionStringBuilder.Remove method </keywords>
      <keywords>UniConnectionStringBuilder.Remove method </keywords>
      <param name="keyword">The key to clear. </param>
      <returns><see langword="true" />, if operation is successfull; <see langword="false" /> otherwise. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniConnectionStringBuilder.ShouldSerialize(System.String)">
      <summary>Determines whether the key will be serialized if required. </summary>
      <keywords>UniConnectionStringBuilder.ShouldSerialize method </keywords>
      <keywords>UniConnectionStringBuilder.ShouldSerialize method </keywords>
      <param name="keyword">Key name to inquiry. </param>
      <returns><see langword="true" />, if the key will be serialized; <see langword="false" /> otherwise. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniConnectionStringBuilder.ToString()">
      <summary>Returns value of <see cref="P:Devart.Data.Universal.UniConnectionStringBuilder.ConnectionString" /> property. </summary>
      <keywords>UniConnectionStringBuilder.ToString method </keywords>
      <keywords>UniConnectionStringBuilder.ToString method </keywords>
    </member>
    <member name="M:Devart.Data.Universal.UniConnectionStringBuilder.TryGetValue(System.String,System.Object@)">
      <summary>Attempts to get a key value. </summary>
      <keywords>UniConnectionStringBuilder.TryGetValue method </keywords>
      <keywords>UniConnectionStringBuilder.TryGetValue method </keywords>
      <param name="keyword">Key name to obtain the value. </param>
      <param name="value">Value of the key. If operation fails, the value is null. </param>
      <returns><see langword="true" /> if the operation is successfull; <see langword="false" /> otherwise. </returns>
    </member>
    <member name="P:Devart.Data.Universal.UniConnectionStringBuilder.UserId">
      <summary>Gets or sets the name of the user to connect. </summary>
      <keywords>UniConnectionStringBuilder.UserId property </keywords>
      <value>The name of the user to connect. </value>
    </member>
    <member name="P:Devart.Data.Universal.UniConnectionStringBuilder.Values">
      <summary>Collection of values in the <see cref="T:Devart.Data.Universal.UniConnectionStringBuilder" />. </summary>
      <keywords>UniConnectionStringBuilder.Values property </keywords>
      <keywords>UniConnectionStringBuilder.Values property </keywords>
      <value>Collection of values. </value>
    </member>
    <member name="T:Devart.Data.Universal.UniCursor">
      <summary>Represents Oracle cursor. </summary>
    </member>
    <member name="P:Devart.Data.Universal.UniCursor.Connection">
      <summary>Gets <see cref="T:Devart.Data.Universal.UniConnection" /> used by <see cref="T:Devart.Data.Universal.UniCursor" />. </summary>
      <keywords>UniCursor.Connection property </keywords>
      <keywords>UniCursor.Connection property </keywords>
      <value><see cref="T:Devart.Data.Universal.UniConnection" /> used by <see cref="T:Devart.Data.Universal.UniCursor" />. </value>
    </member>
    <member name="M:Devart.Data.Universal.UniCursor.GetDataReader()">
      <summary>Gets <see cref="T:Devart.Data.Universal.UniDataReader" /> for data located in the <see cref="T:Devart.Data.Universal.UniCursor" />. </summary>
      <keywords>UniCursor.GetDataReader method </keywords>
      <keywords>UniCursor.GetDataReader method </keywords>
      <returns>The <see cref="T:Devart.Data.Universal.UniDataReader" /> for data located in the <see cref="T:Devart.Data.Universal.UniCursor" />. </returns>
    </member>
    <member name="P:Devart.Data.Universal.UniCursor.IsClosed">
      <summary>Gets state of the <see cref="T:Devart.Data.Universal.UniCursor" />. </summary>
      <keywords>UniCursor.IsClosed property </keywords>
      <keywords>UniCursor.IsClosed property </keywords>
      <value><see langword="true" /> if the <see cref="T:Devart.Data.Universal.UniCursor" /> is closed; otherwise, <see langword="false" />. </value>
    </member>
    <member name="T:Devart.Data.Universal.UniDataAdapter">
      <summary>Represents a set of data commands and a database connection that are used to fill the <see cref="T:System.Data.DataSet" /> and update a database. </summary>
    </member>
    <member name="M:Devart.Data.Universal.UniDataAdapter.#ctor()">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.Universal.UniDataAdapter" /> class. </summary>
      <overloads>Initializes a new instance of the <see cref="T:Devart.Data.Universal.UniDataAdapter" /> class. </overloads>
    </member>
    <member name="M:Devart.Data.Universal.UniDataAdapter.#ctor(Devart.Data.Universal.UniCommand)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.Universal.UniDataAdapter" /> class with the specified <see cref="T:Devart.Data.Universal.UniCommand" /> as the <see ref="P:Devart.Data.Universal.UniDataAdapter.SelectCommand" /> property. </summary>
      <param name="selectCommand">A <see cref="T:Devart.Data.Universal.UniCommand" /> that contains SQL SELECT statement, and is set as the <see cref="P:Devart.Data.Universal.UniDataAdapter.SelectCommand" /> property of the <see cref="T:Devart.Data.Universal.UniDataAdapter" />. </param>
    </member>
    <member name="M:Devart.Data.Universal.UniDataAdapter.#ctor(System.String,Devart.Data.Universal.UniConnection)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.Universal.UniDataAdapter" /> class with a <see cref="P:Devart.Data.Universal.UniDataAdapter.SelectCommand" /> and a <see cref="T:Devart.Data.Universal.UniConnection" /> object. </summary>
      <param name="selectCommandText">A <see cref="T:System.String" /> that contains a SQL SELECT statement to be used as the <see cref="P:Devart.Data.Universal.UniCommand.CommandText" /> of the <see cref="P:Devart.Data.Universal.UniDataAdapter.SelectCommand" /> property of the <see cref="T:Devart.Data.Universal.UniDataAdapter" />. </param>
      <param name="selectConnection">A <see cref="T:Devart.Data.Universal.UniConnection" /> that represents the connection. </param>
    </member>
    <member name="M:Devart.Data.Universal.UniDataAdapter.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.Universal.UniDataAdapter" /> class with a <see cref="P:Devart.Data.Universal.UniDataAdapter.SelectCommand" /> and a connection string. </summary>
      <param name="selectCommandText">A <see cref="T:System.String" /> that is a SELECT statement to be used as the <see cref="P:Devart.Data.Universal.UniCommand.CommandText" /> of the <see cref="P:Devart.Data.Universal.UniDataAdapter.SelectCommand" /> property of the <see cref="T:Devart.Data.Universal.UniDataAdapter" /> . </param>
      <param name="selectConnectionString">The connection string. </param>
    </member>
    <member name="P:Devart.Data.Universal.UniDataAdapter.DeleteCommand">
      <summary>Gets or sets a statement to delete records from the data set. </summary>
      <keywords>UniDataAdapter.DeleteCommand property </keywords>
      <keywords>UniDataAdapter.DeleteCommand property </keywords>
      <value>A <see cref="T:Devart.Data.Universal.UniCommand" /> used during an update operation to delete records in the database that correspond to deleted rows in the <see cref="T:System.Data.DataSet" />. </value>
    </member>
    <member name="M:Devart.Data.Universal.UniDataAdapter.Fill(System.Data.DataSet,Devart.Data.Universal.UniCursor)">
      <summary>Adds or refreshes rows in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the specified <see cref="T:System.Data.DataSet" /> and the <see cref="T:Devart.Data.Universal.UniCursor" />. </summary>
      <keywords>UniDataAdapter.Fill method </keywords>
      <keywords>UniDataAdapter.Fill method </keywords>
      <param name="dataSet">A <see cref="T:System.Data.DataSet" /> to fill with records. </param>
      <param name="cursor">An <see cref="T:Devart.Data.Universal.UniCursor" /> used to retrieve data using <see cref="T:Devart.Data.Universal.UniDataReader" />. </param>
      <returns>The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,Devart.Data.Universal.UniCursor)">
      <summary>Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" />, <see cref="T:System.Data.DataTable" />, and <see cref="T:Devart.Data.Universal.UniCursor" />. </summary>
      <keywords>UniDataAdapter.Fill method </keywords>
      <keywords>UniDataAdapter.Fill method </keywords>
      <param name="dataSet">A <see cref="T:System.Data.DataSet" /> to fill with records. </param>
      <param name="startRecord">The zero-based record number to start with. </param>
      <param name="maxRecords">The maximum number of records to retrieve. </param>
      <param name="srcTable">The name of the <see cref="T:System.Data.DataTable" /> to use for table mapping. </param>
      <param name="cursor">An <see cref="T:Devart.Data.Universal.UniCursor" /> used to retrieve data using <see cref="T:Devart.Oracle.OracleDataReader" />. </param>
      <returns>The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDataAdapter.Fill(System.Data.DataSet,System.String,Devart.Data.Universal.UniCursor)">
      <summary>Adds or refreshes rows in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the specified <see cref="T:System.Data.DataSet" /> and <see cref="T:Devart.Data.Universal.UniCursor" />. </summary>
      <keywords>UniDataAdapter.Fill method </keywords>
      <keywords>UniDataAdapter.Fill method </keywords>
      <param name="dataSet">A <see cref="T:System.Data.DataSet" /> to fill with records. </param>
      <param name="srcTable">The name of the <see cref="T:System.Data.DataTable" /> to use for table mapping. </param>
      <param name="cursor">An <see cref="T:Devart.Data.Universal.UniCursor" /> used to retrieve data using <see cref="T:Devart.Oracle.OracleDataReader" />. </param>
      <returns>The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDataAdapter.Fill(System.Data.DataTable,Devart.Data.Universal.UniCursor)">
      <summary>Adds or refreshes rows in a <see cref="T:System.Data.DataTable" /> to match those in the data source using the specified <see cref="T:System.Data.DataTable" /> and <see cref="T:Devart.Data.Universal.UniCursor" />. </summary>
      <keywords>UniDataAdapter.Fill method </keywords>
      <keywords>UniDataAdapter.Fill method </keywords>
      <param name="dataTable">A <see cref="T:System.Data.DataTable" /> to fill with records. </param>
      <param name="cursor">An <see cref="T:Devart.Data.Universal.UniCursor" /> used to retrieve data using <see cref="T:Devart.Oracle.OracleDataReader" />. </param>
      <returns>The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataTable" />. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
      <summary>Configures the schema to match that in the data source. </summary>
      <keywords>UniDataAdapter.FillSchema method </keywords>
      <keywords>UniDataAdapter.FillSchema method </keywords>
      <param name="dataSet">The DataSet to be filled with the schema from the data source. </param>
      <param name="schemaType">One of <b>System.Data.SchemaType</b> values.
Specifies how to handle existing schema mappings. </param>
      <returns>A <b>DataTable</b> object that contains schema information returned from the data source. </returns>
    </member>
    <member name="P:Devart.Data.Universal.UniDataAdapter.InsertCommand">
      <summary>Gets or sets a statement to insert new records into the data source. </summary>
      <keywords>UniDataAdapter.InsertCommand property </keywords>
      <keywords>UniDataAdapter.InsertCommand property </keywords>
      <value>A <see cref="T:Devart.Data.Universal.UniCommand" /> used during an update operation to insert records in the database that correspond to new rows in the <see cref="T:System.Data.DataSet" />. </value>
    </member>
    <member name="E:Devart.Data.Universal.UniDataAdapter.RowUpdated">
      <summary><para>Occurs during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> after a command is executed against the data source. The attempt to update is made, so the event fires.</para> </summary>
      <keywords>UniDataAdapter.RowUpdated event </keywords>
    </member>
    <member name="E:Devart.Data.Universal.UniDataAdapter.RowUpdating">
      <summary>Occurs during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> before a command is executed against the data source. The attempt to update is made, so the event fires. </summary>
      <keywords>UniDataAdapter.RowUpdating event </keywords>
    </member>
    <member name="P:Devart.Data.Universal.UniDataAdapter.SelectCommand">
      <summary>Gets or sets a statement used to select records in the data source. </summary>
      <keywords>UniDataAdapter.SelectCommand property </keywords>
      <keywords>UniDataAdapter.SelectCommand property </keywords>
      <value>A <see cref="T:Devart.Data.Universal.UniCommand" /> that is used during a fill operation to select records from the database for placement in the <see cref="T:System.Data.DataSet" />. </value>
    </member>
    <member name="P:Devart.Data.Universal.UniDataAdapter.TableMappings">
      <summary>Gets a collection that provides the master mapping between a source table and a <see cref="T:Devart.Data.Universal.UniDataTable" />. </summary>
      <keywords>UniDataAdapter.TableMappings property </keywords>
      <keywords>UniDataAdapter.TableMappings property </keywords>
      <value>A collection that provides the master mapping between the returned records and the <see cref="T:System.Data.DataSet" />. The default value is an empty collection. </value>
    </member>
    <member name="P:Devart.Data.Universal.UniDataAdapter.UpdateCommand">
      <summary>Gets or sets a statement used to update records in the data source. </summary>
      <keywords>UniDataAdapter.UpdateCommand property </keywords>
      <keywords>UniDataAdapter.UpdateCommand property </keywords>
      <value>A <see cref="T:Devart.Data.Universal.UniCommand" /> used during an update operation to update records in the database that correspond to modified rows in the <see cref="T:System.Data.DataSet" />. </value>
    </member>
    <member name="T:Devart.Data.Universal.UniDataReader">
      <summary>Allows to read a forward-only stream of rows from a database. </summary>
    </member>
    <member name="M:Devart.Data.Universal.UniDataReader.Close()">
      <summary>Closes the <see cref="T:Devart.Data.Universal.UniDataReader" /> object. </summary>
      <keywords>UniDataReader.Close method </keywords>
      <keywords>UniDataReader.Close method </keywords>
    </member>
    <member name="P:Devart.Data.Universal.UniDataReader.Depth">
      <summary>Gets a value indicating the depth of nesting for the current row. </summary>
      <keywords>UniDataReader.Depth property </keywords>
      <keywords>UniDataReader.Depth property </keywords>
      <value>Depth of nesting for the current row </value>
    </member>
    <member name="P:Devart.Data.Universal.UniDataReader.EndOfData">
      <summary>Do not use this property. It is left only for compatibility with the base class. If you try accessing it, <see cref="T:System.NotImplementedException" /> is thrown. </summary>
      <keywords>UniDataReader.EndOfData property </keywords>
      <value>Throws <see cref="T:System.NotImplementedException" />. </value>
    </member>
    <member name="P:Devart.Data.Universal.UniDataReader.FieldCount">
      <summary>Gets the number of columns in the current row. </summary>
      <keywords>UniDataReader.FieldCount property </keywords>
      <keywords>UniDataReader.FieldCount property </keywords>
      <value>When not positioned in a valid record set, 0; otherwise the number of columns in the current record. The default value is -1. </value>
    </member>
    <member name="M:Devart.Data.Universal.UniDataReader.GetBoolean(System.Int32)">
      <summary>Gets the value of the specified column as a Boolean. </summary>
      <keywords>UniDataReader.GetBoolean method </keywords>
      <keywords>UniDataReader.GetBoolean method </keywords>
      <param name="i">The zero-based column ordinal. </param>
      <returns>The value of the column. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDataReader.GetByte(System.Int32)">
      <summary>Gets the value of the specified column as a byte. </summary>
      <keywords>UniDataReader.GetByte method </keywords>
      <keywords>UniDataReader.GetByte method </keywords>
      <param name="i">The zero-based column ordinal. </param>
      <returns>The value of the specified column as a byte. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>Reads a stream of bytes from the specified column offset into the buffer as an array starting at the given buffer offset. </summary>
      <keywords>UniDataReader.GetBytes method </keywords>
      <keywords>UniDataReader.GetBytes method </keywords>
      <param name="i">The zero-based column ordinal. </param>
      <param name="fieldOffset">The index within the field where the read operation is to begin. </param>
      <param name="buffer">The buffer into which to read the stream of bytes. </param>
      <param name="bufferOffset">The index where buffer is to begin the write operation. </param>
      <param name="length">The maximum length to copy into the buffer. </param>
      <returns><para>The actual number of bytes read.</para> </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDataReader.GetChar(System.Int32)">
      <summary>Gets the value of the specified column as a single character. </summary>
      <keywords>UniDataReader.GetChar method </keywords>
      <keywords>UniDataReader.GetChar method </keywords>
      <param name="i">The zero-based column ordinal. </param>
      <returns>The value of the specified column as a character. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>Reads a stream of characters from the specified column offset into the buffer as an array starting at the given buffer offset. </summary>
      <keywords>UniDataReader.GetChars method </keywords>
      <keywords>UniDataReader.GetChars method </keywords>
      <param name="i">The zero-based column ordinal. </param>
      <param name="fieldOffset">The index within the row where the read operation is to begin. </param>
      <param name="buffer">The buffer into which to copy data. </param>
      <param name="bufferOffset">The index where buffer is to begin the write operation. </param>
      <param name="length">The maximum number of characters to read. </param>
      <returns><para>The actual number of characters read.</para> </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDataReader.GetData(System.Int32)">
      <summary>Returns <see cref="T:Devart.Data.Universal.UniDataReader" /> object that contains nested table data. </summary>
      <keywords>UniDataReader.GetData method </keywords>
      <keywords>UniDataReader.GetData method </keywords>
      <param name="i">The zero-based column ordinal. </param>
      <returns><see cref="T:Devart.Data.Universal.UniDataReader" /> object that contains nested table data. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDataReader.GetDataTypeName(System.Int32)">
      <summary>Gets the name of the source data type. </summary>
      <keywords>UniDataReader.GetDataTypeName method </keywords>
      <keywords>UniDataReader.GetDataTypeName method </keywords>
      <param name="i">The zero-based column ordinal. </param>
      <returns>The name of the back-end data type. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDataReader.GetDateTime(System.Int32)">
      <summary>Gets the value of the specified column as a <see cref="T:System.DateTime" /> object. </summary>
      <keywords>UniDataReader.GetDateTime method </keywords>
      <keywords>UniDataReader.GetDateTime method </keywords>
      <param name="i">The zero-based column ordinal. </param>
      <returns>The value of the specified column. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDataReader.GetDecimal(System.Int32)">
      <summary>Gets the value of the specified column as a <see cref="T:System.Decimal" /> object. </summary>
      <keywords>UniDataReader.GetDecimal method </keywords>
      <keywords>UniDataReader.GetDecimal method </keywords>
      <param name="i">The zero-based column ordinal. </param>
      <returns>The value of the specified column. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDataReader.GetDouble(System.Int32)">
      <summary>Gets the value of the specified column as a double-precision floating point number. </summary>
      <keywords>UniDataReader.GetDouble method </keywords>
      <keywords>UniDataReader.GetDouble method </keywords>
      <param name="i">The zero-based column ordinal. </param>
      <returns>The value of the specified column. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDataReader.GetFieldType(System.Int32)">
      <summary>Gets the <see cref="T:System.Type" /> that is the data type of the object. </summary>
      <keywords>UniDataReader.GetFieldType method </keywords>
      <keywords>UniDataReader.GetFieldType method </keywords>
      <param name="i">The zero-based column ordinal. </param>
      <returns>The <see cref="T:System.Type" /> that is the data type of the object. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDataReader.GetFloat(System.Int32)">
      <summary>Gets the value of the specified column as a single-precision floating point number. </summary>
      <keywords>UniDataReader.GetFloat method </keywords>
      <keywords>UniDataReader.GetFloat method </keywords>
      <param name="i">The zero-based column ordinal. </param>
      <returns>The value of the specified column. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDataReader.GetGuid(System.Int32)">
      <summary>Gets the value of the specified column as a globally-unique identifier (GUID). </summary>
      <keywords>UniDataReader.GetGuid method </keywords>
      <keywords>UniDataReader.GetGuid method </keywords>
      <param name="i">The zero-based column ordinal. </param>
      <returns>The value of the specified column. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDataReader.GetInt16(System.Int32)">
      <summary>Gets the value of the specified column as a 16-bit signed integer. </summary>
      <keywords>UniDataReader.GetInt16 method </keywords>
      <keywords>UniDataReader.GetInt16 method </keywords>
      <param name="i">The zero-based column ordinal. </param>
      <returns>The value of the specified column. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDataReader.GetInt32(System.Int32)">
      <summary>Gets the value of the specified column as a 32-bit signed integer. </summary>
      <keywords>UniDataReader.GetInt32 method </keywords>
      <keywords>UniDataReader.GetInt32 method </keywords>
      <param name="i">The zero-based column ordinal. </param>
      <returns>The value of the specified column. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDataReader.GetInt64(System.Int32)">
      <summary>Gets the value of the specified column as a 64-bit signed integer. </summary>
      <keywords>UniDataReader.GetInt64 method </keywords>
      <keywords>UniDataReader.GetInt64 method </keywords>
      <param name="i">The zero-based column ordinal. </param>
      <returns>The value of the specified column. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDataReader.GetName(System.Int32)">
      <summary><para>Gets the name of the specified column.</para> </summary>
      <keywords>UniDataReader.GetName method </keywords>
      <keywords>UniDataReader.GetName method </keywords>
      <param name="i">The zero-based column ordinal. </param>
      <returns><para>A string that is the name of the specified column.</para> </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDataReader.GetOrdinal(System.String)">
      <summary>Gets the column ordinal, given the name of the column. </summary>
      <keywords>UniDataReader.GetOrdinal method </keywords>
      <keywords>UniDataReader.GetOrdinal method </keywords>
      <param name="name">The name of the column. </param>
      <returns>The zero-based column ordinal. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDataReader.GetSchemaTable()">
      <summary>Returns a <see cref="T:System.Data.DataTable" /> that describes the column metadata of the <see cref="T:Devart.Common.DbDataReader" />. </summary>
      <keywords>UniDataReader.GetSchemaTable method </keywords>
      <keywords>UniDataReader.GetSchemaTable method </keywords>
      <returns>A <see cref="T:System.Data.DataTable" /> that describes the column metadata. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDataReader.GetString(System.Int32)">
      <summary>Gets the value of the specified column as a string. </summary>
      <keywords>UniDataReader.GetString method </keywords>
      <keywords>UniDataReader.GetString method </keywords>
      <param name="i">The zero-based column ordinal. </param>
      <returns>The value of the specified column. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDataReader.GetUniBlob(System.Int32)">
      <summary>Gets the value of the specified column as a <see cref="T:Devart.Data.Universal.UniBlob" /> object. </summary>
      <keywords>UniDataReader.GetUniBlob method </keywords>
      <keywords>UniDataReader.GetUniBlob method </keywords>
      <param name="i">The zero-based column ordinal. </param>
      <returns>The value of the specified column as a <see cref="T:Devart.Data.Universal.UniBlob" /> object. </returns>
      <overloads>Gets the value of the specified column as a <see cref="T:Devart.Data.Universal.UniBlob" /> object. </overloads>
    </member>
    <member name="M:Devart.Data.Universal.UniDataReader.GetUniBlob(System.String)">
      <summary>Gets the value of the specified column as a <see cref="T:Devart.Data.Universal.UniBlob" /> object. </summary>
      <keywords>UniDataReader.GetUniBlob method </keywords>
      <keywords>UniDataReader.GetUniBlob method </keywords>
      <param name="name">The name of the column to get value of. </param>
      <returns>The value of the specified column as a <see cref="T:Devart.Data.Universal.UniBlob" /> object. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDataReader.GetUniCursor(System.Int32)">
      <summary>Gets the value of the specified column as a <see cref="T:Devart.Data.Universal.UniCursor" /> object. </summary>
      <keywords>UniDataReader.GetUniCursor method </keywords>
      <keywords>UniDataReader.GetUniCursor method </keywords>
      <param name="i">The zero-based column ordinal. </param>
      <returns>The value of the specified column as a <see cref="T:Devart.Data.Universal.UniCursor" /> object. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDataReader.GetUniCursor(System.String)">
      <summary>Gets the value of the specified column as a <see cref="T:Devart.Data.Universal.UniCursor" /> object. </summary>
      <keywords>UniDataReader.GetUniCursor method </keywords>
      <keywords>UniDataReader.GetUniCursor method </keywords>
      <param name="name">The name of the column to get value of. </param>
      <returns>The value of the specified column as a <see cref="T:Devart.Data.Universal.UniCursor" /> object. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDataReader.GetUniDecimal(System.Int32)">
      <summary>Gets the value of the specified column as a <see cref="T:Devart.Data.Universal.UniDecimal" /> object. </summary>
      <keywords>UniDataReader.GetUniDecimal method </keywords>
      <keywords>UniDataReader.GetUniDecimal method </keywords>
      <param name="i">The zero-based column ordinal. </param>
      <returns>The value of the specified column as a <see cref="T:Devart.Data.Universal.UniDecimal" /> object. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDataReader.GetUniDecimal(System.String)">
      <summary>Gets the value of the specified column as a <see cref="T:Devart.Data.Universal.UniDecimal" /> object. </summary>
      <keywords>UniDataReader.GetUniDecimal method </keywords>
      <keywords>UniDataReader.GetUniDecimal method </keywords>
      <param name="name">The name of the column to get value of. </param>
      <returns>The value of the specified column as a <see cref="T:Devart.Data.Universal.UniDecimal" /> object. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDataReader.GetValue(System.Int32)">
      <summary>Gets the value of the specified column in its native format. </summary>
      <keywords>UniDataReader.GetValue method </keywords>
      <keywords>UniDataReader.GetValue method </keywords>
      <param name="i">The zero-based column ordinal. </param>
      <returns>The value to return. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDataReader.GetValues(System.Object[])">
      <summary>Gets all attribute columns in the collection for the current row. </summary>
      <keywords>UniDataReader.GetValues method </keywords>
      <keywords>UniDataReader.GetValues method </keywords>
      <param name="values">An array of <see cref="T:System.Object" /> into which to copy the attribute columns. </param>
      <returns>The number of instances of <see cref="T:System.Object" /> in the array. </returns>
    </member>
    <member name="P:Devart.Data.Universal.UniDataReader.HasRows">
      <summary>Gets a value indicating whether the <see cref="T:Devart.Data.Universal.UniDataReader" /> contains one or more rows. </summary>
      <keywords>UniDataReader.HasRows property </keywords>
      <value>
        <see langword="true" /> if the <see cref="T:Devart.Data.Universal.UniDataReader" /> contains one or more rows; otherwise, <see langword="false" />. </value>
    </member>
    <member name="P:Devart.Data.Universal.UniDataReader.IsClosed">
      <summary>Gets a value indicating whether the data reader is closed. </summary>
      <keywords>UniDataReader.IsClosed property </keywords>
      <keywords>UniDataReader.IsClosed property </keywords>
      <value><see langword="true" /> if the <see cref="T:Devart.Data.Universal.UniDataReader" /> is closed; otherwise, <see langword="false" />. </value>
    </member>
    <member name="M:Devart.Data.Universal.UniDataReader.IsDBNull(System.Int32)">
      <summary>Gets a value indicating whether the column contains non-existent or missing values. </summary>
      <keywords>UniDataReader.IsDBNull method </keywords>
      <keywords>UniDataReader.IsDBNull method </keywords>
      <param name="i">The zero-based column ordinal. </param>
      <returns><see langword="true" /> if the specified column value is equivalent to <see cref="T:System.DBNull" />; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDataReader.NextResult()">
      <summary>Advances the data reader to the next result, when reading the results of batch SQL statements. </summary>
      <keywords>UniDataReader.NextResult method </keywords>
      <keywords>UniDataReader.NextResult method </keywords>
      <returns><see langword="true" /> if there are more result sets; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDataReader.Read()">
      <summary>Advances the <see cref="T:Devart.Data.Universal.UniDataReader" /> to the next record. </summary>
      <keywords>UniDataReader.Read method </keywords>
      <keywords>UniDataReader.Read method </keywords>
      <returns><see langword="true" /> if there are more rows; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="P:Devart.Data.Universal.UniDataReader.RecordsAffected">
      <summary>Gets the number of rows changed, inserted, or deleted by execution of the SQL statement. </summary>
      <keywords>UniDataReader.RecordsAffected property </keywords>
      <keywords>UniDataReader.RecordsAffected property </keywords>
      <value>The number of rows changed, inserted, or deleted. -1 for SELECT statements; 0 if no rows were affected, or the statement failed. </value>
    </member>
    <member name="T:Devart.Data.Universal.UniDataSourceEnumerator">
      <summary>Allows to enumerate available servers in your environment. </summary>
    </member>
    <member name="M:Devart.Data.Universal.UniDataSourceEnumerator.#ctor()">
      <summary>Initializes a new instance of a <see cref="T:Devart.Data.Universal.UniDataSourceEnumerator" /> class with the given name. </summary>
    </member>
    <member name="M:Devart.Data.Universal.UniDataSourceEnumerator.CanCreateDataSourceEnumerator(System.String)">
      <summary>Gets a value indicating whether DbProviderFactory for the provider specified can create a <see cref="T:Devart.Common.DbDataSourceEnumerator" /> object. </summary>
      <keywords>UniDataSourceEnumerator.CanCreateDataSourceEnumerator method </keywords>
      <param name="providerName">The data provider to check. </param>
      <returns><see langword="true" /> if theDbProviderFactory for the provider specified can create a <see cref="T:Devart.Common.DbDataSourceEnumerator" /> object; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDataSourceEnumerator.GetDataSources(System.String)">
      <summary>Retrieves a DataTable containing information about all known servers for the provider specified. </summary>
      <keywords>UniDataSourceEnumerator.GetDataSources method </keywords>
      <param name="providerName">The data provider specifying the DBMS for which servers to search. </param>
      <returns>DataTable containing information about all known servers for the provider specified. </returns>
    </member>
    <member name="T:Devart.Data.Universal.UniDbType">
      <summary>Represents mapping between Universal .NET unified types, DBMS types and .NET standard types. </summary>
    </member>
    <member name="F:Devart.Data.Universal.UniDbType.Array">
      <summary>An Oracle VARRAY data type representing a variable-length array. Supported for dotConnect for Oracle and Oracle Client only. This type does not have corresponding .NET Framework type. </summary>
    </member>
    <member name="F:Devart.Data.Universal.UniDbType.BigInt">
      <summary>An integer data type. Represented as <b>NUMBER</b> in Oracle, <b>BIGINT</b> in SQL Server, MySQL, and PostgreSQL. Corresponds to <b>Int64</b> in the .NET Framework. </summary>
    </member>
    <member name="F:Devart.Data.Universal.UniDbType.Binary">
      <summary>Raw data type. Represented as <b>RAW</b> in Oracle, <b>BINARY</b> in SQL server, MySQL, <b>BYTEA</b> in PostgreSQL. Corresponds to array of bytes in the .NET Framework. </summary>
    </member>
    <member name="F:Devart.Data.Universal.UniDbType.Bit">
      <summary>Bit data type. Represented as <b>INTEGER</b> in Oracle, <b>BIT</b> in SQL Server,  MySQL and PostgreSQL. Corresponds to <b>Int16</b> in the .NET Framework. </summary>
    </member>
    <member name="F:Devart.Data.Universal.UniDbType.Blob">
      <summary>Binary LOB data type.  Represented as <b>IMAGE</b> in SQL Server, <b>BLOB</b> in Oracle and MySQL, <b>BYTEA</b> in PostgreSQL. May be represented as <see cref="T:Devart.Data.Universal.UniBlob" /> class or an array of bytes in the .NET Framework. </summary>
    </member>
    <member name="F:Devart.Data.Universal.UniDbType.Boolean">
      <summary>Boolean data type.  Represented as <b>BOOLEAN</b> in Oracle and PostgreSQL, <b>BIT</b> in SQL Server and MySQL. Corresponds to <b>Boolean</b> in the .NET Framework. </summary>
    </member>
    <member name="F:Devart.Data.Universal.UniDbType.Byte">
      <summary>Byte data type. Represented as <b>INTEGER</b> in Oracle, <b>SMALLINT</b> in SQL Server and MySQL, <b>BYTE</b> in PostgreSQL. Corresponds to <b>Int16</b> in the .NET Framework. </summary>
    </member>
    <member name="F:Devart.Data.Universal.UniDbType.Char">
      <summary>Fixed-length char data type.  Represented as <b>CHAR</b> in SQL Server, Oracle, MySQL and PostgreSQL. Corresponds to <b>String</b> in the .NET Framework. </summary>
    </member>
    <member name="F:Devart.Data.Universal.UniDbType.Clob">
      <summary>Character LOB data type.  Represented as <b>CLOB</b> in Oracle, <b>TEXT</b> in SQL Server, MySQL and PostgreSQL. May be represented as <see cref="T:Devart.Data.Universal.UniBlob" /> class or string in the .NET Framework. </summary>
    </member>
    <member name="F:Devart.Data.Universal.UniDbType.Currency">
      <summary>Currency data type. Represented as <b>NUMBER</b> in Oracle, <b>DOUBLE</b> in MySQL, and <b>MONEY</b> in SQL Server and PostgreSQL. Corresponds to <b>Decimal</b> in the .NET Framework. </summary>
    </member>
    <member name="F:Devart.Data.Universal.UniDbType.Cursor">
      <summary>An Oracle Cursor data type. May be represented as <see cref="T:Devart.Data.Universal.UniCursor" /> or <see cref="T:Devart.Data.Universal.UniDataReader" />. </summary>
    </member>
    <member name="F:Devart.Data.Universal.UniDbType.Date">
      <summary>Date data type.  Represented as <b>DATETIME</b> in SQL Server, <b>DATE</b> in Oracle, MySQL and PostgreSQL. Corresponds to <b>DateTime</b> in the .NET Framework. </summary>
    </member>
    <member name="F:Devart.Data.Universal.UniDbType.DateTime">
      <summary>DateTime data type. Represented as <b>DATETIME</b> in SQL Server and MySQL, <b>DATE</b> in Oracle, and <b>TimeStamp</b> in PostgreSQL. Corresponds to <b>DateTime</b> in the .NET Framework. </summary>
    </member>
    <member name="F:Devart.Data.Universal.UniDbType.DateTime2">
      <summary>DateTime data type. Represented as <b>DATETIME2</b> in SQL Server. </summary>
    </member>
    <member name="F:Devart.Data.Universal.UniDbType.Decimal">
      <summary>Wide range numeric data type. Represented as <b>NUMBER</b> in Oracle, <b>DECIMAL</b> in SQL Server and MySQL, and <b>NUMERIC</b> in PostgreSQL. Corresponds to <b>Decimal</b> in the .NET Framework. </summary>
    </member>
    <member name="F:Devart.Data.Universal.UniDbType.Double">
      <summary>Floating point data type.  Represented as <b>REAL</b> in SQL Server, <b>DOUBLE</b> in Oracle, MySQL and PostgreSQL. Corresponds to <b>Double</b> in the .NET Framework. </summary>
    </member>
    <member name="F:Devart.Data.Universal.UniDbType.Guid">
      <summary>GUID-like data type.  Represented as <b>VARCHAR</b> in Oracle, MySQL and PostgreSQL. In SQL Client this is <b>UNIQUEIDENTIFIER</b>. Corresponds to <b>Guid</b> in the .NET Framework. </summary>
    </member>
    <member name="F:Devart.Data.Universal.UniDbType.Int">
      <summary>Integer data type. Represented as <b>INTEGER</b> in Oracle, <b>INT</b> in SQL Server, MySQL and PostgreSQL. Corresponds to <b>Int32</b> in the .NET Framework. </summary>
    </member>
    <member name="F:Devart.Data.Universal.UniDbType.IntervalDS">
      <summary>Time interval data type measured in <i>Day</i> or smaller units. Represented as <b>INTERVAL DAY TO SECOND</b> in data providers for Oracle and <b>INTERVAL</b> in PostgreSQL. For other data providers this type is not supported. Corresponds to <b>TimeSpan</b> in the .NET Framework. </summary>
    </member>
    <member name="F:Devart.Data.Universal.UniDbType.IntervalYM">
      <summary>Time interval data type measured in <i>Year</i> and <i>Month</i> units. Represented as <b>INTERVAL YEAR TO MONTH</b> in data providers for Oracle and <b>INTERVAL</b> in PostgreSQL. For other data providers this type is not supported. Corresponds to <b>TimeSpan</b> in the .NET Framework. </summary>
    </member>
    <member name="F:Devart.Data.Universal.UniDbType.NChar">
      <summary>Fixed-length char data type with national encoding.  Represented as <b>NCHAR</b> in SQL Server and Oracle, <b>CHAR</b> in MySQL and PostgreSQL. </summary>
    </member>
    <member name="F:Devart.Data.Universal.UniDbType.NClob">
      <summary>National character LOB data type.  Represented as <b>NCLOB</b> in Oracle, <b>TEXT</b> in SQL Server, MySQL and PostgreSQL. May be represented as <see cref="T:Devart.Data.Universal.UniBlob" /> class or string in the .NET Framework. </summary>
    </member>
    <member name="F:Devart.Data.Universal.UniDbType.NVarChar">
      <summary>Varchar data type with national encoding.  Represented as <b>NVARCHAR</b> in SQL Server and Oracle, <b>VARCHAR</b> in MySQL and PostgreSQL. Corresponds to <b>String</b> in the .NET Framework. </summary>
    </member>
    <member name="F:Devart.Data.Universal.UniDbType.Object">
      <summary>One of the Oracle object types defined by the user. Corresponds to <b>Object</b> in the .NET Framework. </summary>
    </member>
    <member name="F:Devart.Data.Universal.UniDbType.Single">
      <summary>Floating point data type.  Represented as <b>FLOAT</b> in SQL Server, Oracle and MySQL, <b>REAL</b> in PostgreSQL. Corresponds to <b>Double</b> in the .NET Framework. </summary>
    </member>
    <member name="F:Devart.Data.Universal.UniDbType.SmallInt">
      <summary>Integer data type. <br />Represented as <b>INTEGER</b> in Oracle, <b>SMALLINT</b> in SQL Server, MySQL and PostgreSQL. Corresponds to <b>Int16</b> in the .NET Framework. </summary>
    </member>
    <member name="F:Devart.Data.Universal.UniDbType.Time">
      <summary>Time data type. Represented as <b>DATETIME</b> in SQL Server, <b>DATE</b> in Oracle, <b>TIME</b> in MySQL and PostgreSQL. Corresponds to <b>DateTime</b> in the .NET Framework. </summary>
    </member>
    <member name="F:Devart.Data.Universal.UniDbType.TimeStamp">
      <summary>TimeStamp data type.  Represented as <b>DATETIME</b> in SQL Server, <b>TIMESTAMP</b> in Oracle, MySQL and PostgreSQL. Corresponds to <b>DateTime</b> in the .NET Framework. </summary>
    </member>
    <member name="F:Devart.Data.Universal.UniDbType.TimeStampTZ">
      <summary>TimeStamp with time zone data type. Represented as DATETIMEOFFSET in SQL Server, TIMESTAMP WITH TIMEZONE in Oracle and PostgreSQL. Corresponds to DateTime in the .NET Framework. </summary>
    </member>
    <member name="F:Devart.Data.Universal.UniDbType.TinyInt">
      <summary>Integer data type. Represented as <b>INTEGER</b> in Oracle, <b>TYNIINT</b> in SQL Server and MySQL, and <b>SMALLINT</b> in PostgreSQL. Corresponds to <b>Int16</b> in the .NET Framework. </summary>
    </member>
    <member name="F:Devart.Data.Universal.UniDbType.VarChar">
      <summary>Variable-length character data type.  Represented as <b>VARCHAR</b> in SQL Server, Oracle, MySQL and PostgreSQL. Corresponds to <b>String</b> in the .NET Framework. </summary>
    </member>
    <member name="F:Devart.Data.Universal.UniDbType.Xml">
      <summary>XML data type. Represented as <b>XMLTYPE</b> in Oracle, <b>VARCHAR</b> in MySQL and PostgreSQL. Corresponds to <b>Object</b> in the .NET Framework. </summary>
    </member>
    <member name="T:Devart.Data.Universal.UniDecimal">
      <summary>Represents the NUMBER type of Oracle and DECIMAL type of MS SQL Server and MySQL. </summary>
    </member>
    <member name="M:Devart.Data.Universal.UniDecimal.#ctor(System.Decimal)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.Universal.UniDecimal" /> structure with the specified <see cref="T:System.Decimal" /> value. </summary>
      <param name="value">The <see cref="T:System.Decimal" /> value to be stored as an <see cref="T:Devart.Data.Universal.UniDecimal" />. </param>
    </member>
    <member name="M:Devart.Data.Universal.UniDecimal.#ctor(System.Double)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.Universal.UniDecimal" /> structure with the specified <see cref="T:System.Double" /> value. </summary>
      <param name="value">The <see cref="T:System.Double" /> value to be stored as an <see cref="T:Devart.Data.Universal.UniDecimal" />. </param>
    </member>
    <member name="M:Devart.Data.Universal.UniDecimal.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.Universal.UniDecimal" /> structure with the specified <see cref="T:System.Int32" /> value. </summary>
      <param name="value">The <see cref="T:System.Int32" /> value to be stored as an <see cref="T:Devart.Data.Universal.UniDecimal" />. </param>
    </member>
    <member name="M:Devart.Data.Universal.UniDecimal.#ctor(System.Int64)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.Universal.UniDecimal" /> structure with the specified <see cref="T:System.Int64" /> value. </summary>
      <param name="value">The <see cref="T:System.Int64" /> value to be stored as an <see cref="T:Devart.Data.Universal.UniDecimal" />. </param>
    </member>
    <member name="M:Devart.Data.Universal.UniDecimal.Abs(Devart.Data.Universal.UniDecimal)">
      <summary>Gets the absolute value of the <see cref="T:Devart.Data.Universal.UniDecimal" />. </summary>
      <keywords>UniDecimal.Abs method </keywords>
      <keywords>UniDecimal.Abs method </keywords>
      <param name="value">An <see cref="T:Devart.Data.Universal.UniDecimal" /> structure. </param>
      <returns>An <see cref="T:Devart.Data.Universal.UniDecimal" /> structure whose <see cref="P:Devart.Data.Universal.UniDecimal.Value" /> property contains the unsigned number representing the absolute value of the <see cref="T:Devart.Data.Universal.UniDecimal" />. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDecimal.Add(Devart.Data.Universal.UniDecimal,Devart.Data.Universal.UniDecimal)">
      <summary>Adds two <see cref="T:Devart.Data.Universal.UniDecimal" /> values. </summary>
      <keywords>UniDecimal.Add method </keywords>
      <keywords>UniDecimal.Add method </keywords>
      <param name="value1">First <see cref="T:Devart.Data.Universal.UniDecimal" />. </param>
      <param name="value2">Second <see cref="T:Devart.Data.Universal.UniDecimal" />. </param>
      <returns>A new <see cref="T:Devart.Data.Universal.UniDecimal" /> structure. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDecimal.Ceiling(Devart.Data.Universal.UniDecimal)">
      <summary>Returns the smallest whole number greater than or equal to the specified <see cref="T:Devart.Data.Universal.UniDecimal" /> number. </summary>
      <keywords>UniDecimal.Ceiling method </keywords>
      <keywords>UniDecimal.Ceiling method </keywords>
      <param name="value">The specified <see cref="T:Devart.Data.Universal.UniDecimal" /> structure. </param>
      <returns>A new <see cref="T:Devart.Data.Universal.UniDecimal" /> representing the smallest whole number greater than or equal to the specified <see cref="T:Devart.Data.Universal.UniDecimal" /> structure. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDecimal.CompareTo(System.Object)">
      <summary>Compares the current <see cref="T:Devart.Data.Universal.UniDecimal" /> object to the specified object and returns an integer that represents their relative values. </summary>
      <keywords>UniDecimal.CompareTo method </keywords>
      <keywords>UniDecimal.CompareTo method </keywords>
      <param name="obj">The object to be compared. </param>
      <returns>A signed number indicating the relative values of the current <see cref="T:Devart.Data.Universal.UniDecimal" /> structure and the object.
<list type="table">
  <listheader>
    <term>Return Value</term>
    <description>Condition</description>
  </listheader>
  <item>
    <term>Less than zero</term>
    <description>The value of the current <see cref="T:Devart.Data.Universal.UniDecimal" /> object is less than the object.</description>
  </item>
  <item>
    <term>Zero</term>
    <description>The current <see cref="T:Devart.Data.Universal.UniDecimal" /> object is the same to the object.</description>
   </item>
   <item>
     <term>Greater than zero</term>
     <description>The current <see cref="T:Devart.Data.Universal.UniDecimal" /> object is greater than the object.</description>
   </item>
</list> </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDecimal.Divide(Devart.Data.Universal.UniDecimal,Devart.Data.Universal.UniDecimal)">
      <summary>Divides one <see cref="T:Devart.Data.Universal.UniDecimal" /> value by another. </summary>
      <keywords>UniDecimal.Divide method </keywords>
      <keywords>UniDecimal.Divide method </keywords>
      <param name="value1">First <see cref="T:Devart.Data.Universal.UniDecimal" />. </param>
      <param name="value2">Second <see cref="T:Devart.Data.Universal.UniDecimal" />. </param>
      <returns>A new <see cref="T:Devart.Data.Universal.UniDecimal" /> structure. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDecimal.Equals(Devart.Data.Universal.UniDecimal,Devart.Data.Universal.UniDecimal)">
      <summary>Determines whether two <see cref="T:Devart.Data.Universal.UniDecimal" /> values are equal. </summary>
      <keywords>UniDecimal.Equals method </keywords>
      <keywords>UniDecimal.Equals method </keywords>
      <param name="value1">First <see cref="T:Devart.Data.Universal.UniDecimal" />. </param>
      <param name="value2">Second <see cref="T:Devart.Data.Universal.UniDecimal" />. </param>
      <returns><see langword="true" /> if two <see cref="T:Devart.Data.Universal.UniDecimal" /> values are equal; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDecimal.Equals(System.Object)">
      <summary>Compares the specified object parameter to the <see cref="P:Devart.Data.Universal.UniDecimal.Value" /> property of the <see cref="T:Devart.Data.Universal.UniDecimal" /> object. </summary>
      <keywords>UniDecimal.Equals method </keywords>
      <keywords>UniDecimal.Equals method </keywords>
      <param name="value">The object to be compared. </param>
      <returns><see langword="true" /> if object is an instance of the <see cref="T:Devart.Data.Universal.UniDecimal" /> and has the same value; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDecimal.Floor(Devart.Data.Universal.UniDecimal)">
      <summary>Rounds a specified <see cref="T:Devart.Data.Universal.UniDecimal" /> number to the next lower whole number. </summary>
      <keywords>UniDecimal.Floor method </keywords>
      <keywords>UniDecimal.Floor method </keywords>
      <param name="value">The specified <see cref="T:Devart.Data.Universal.UniDecimal" /> structure. </param>
      <returns>A new <see cref="T:Devart.Data.Universal.UniDecimal" /> structure that contains the whole number portion of the specified <see cref="T:Devart.Data.Universal.UniDecimal" />. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDecimal.FromDecimal(System.Decimal)">
      <summary>Converts a <see cref="T:System.Decimal" /> value to <see cref="T:Devart.Data.Universal.UniDecimal" />. </summary>
      <keywords>UniDecimal.FromDecimal method </keywords>
      <keywords>UniDecimal.FromDecimal method </keywords>
      <param name="value">Value to convert. </param>
      <returns>A new <see cref="T:Devart.Data.Universal.UniDecimal" /> structure representing the <see cref="T:System.Decimal" />. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDecimal.FromDouble(System.Double)">
      <summary>Converts a <see cref="T:System.Double" /> value to <see cref="T:Devart.Data.Universal.UniDecimal" />. </summary>
      <keywords>UniDecimal.FromDouble method </keywords>
      <keywords>UniDecimal.FromDouble method </keywords>
      <param name="value">Value to convert. </param>
      <returns>A new <see cref="T:Devart.Data.Universal.UniDecimal" /> structure representing the <see cref="T:System.Double" />. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDecimal.FromInt32(System.Int32)">
      <summary>Converts a <see cref="T:System.Int" /> value to <see cref="T:Devart.Data.Universal.UniDecimal" />. </summary>
      <keywords>UniDecimal.FromInt32 method </keywords>
      <keywords>UniDecimal.FromInt32 method </keywords>
      <param name="value">Value to convert. </param>
      <returns>A new <see cref="T:Devart.Data.Universal.UniDecimal" /> structure representing the <see cref="T:System.Int" />. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDecimal.FromInt64(System.Int64)">
      <summary>Converts a <see cref="T:System.Long" /> value to <see cref="T:Devart.Data.Universal.UniDecimal" />. </summary>
      <keywords>UniDecimal.FromInt64 method </keywords>
      <keywords>UniDecimal.FromInt64 method </keywords>
      <param name="value">Value to convert. </param>
      <returns>A new <see cref="T:Devart.Data.Universal.UniDecimal" /> structure representing the <see cref="T:System.Long" />. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDecimal.GetHashCode()">
      <summary>Gets a hash code for the <see cref="T:Devart.Data.Universal.UniDecimal" /> instance. </summary>
      <keywords>UniDecimal.GetHashCode method </keywords>
      <keywords>UniDecimal.GetHashCode method </keywords>
      <returns>A 32-bit signed integer hash code. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDecimal.GreaterThan(Devart.Data.Universal.UniDecimal,Devart.Data.Universal.UniDecimal)">
      <summary>Determines whether the first of two <see cref="T:Devart.Data.Universal.UniDecimal" /> values is greater than the second. </summary>
      <keywords>UniDecimal.GreaterThan method </keywords>
      <keywords>UniDecimal.GreaterThan method </keywords>
      <param name="value1">First <see cref="T:Devart.Data.Universal.UniDecimal" />. </param>
      <param name="value2">Second <see cref="T:Devart.Data.Universal.UniDecimal" />. </param>
      <returns><see langword="true" /> if the first of two <see cref="T:Devart.Data.Universal.UniDecimal" /> values is greater than the second; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDecimal.GreaterThanOrEqual(Devart.Data.Universal.UniDecimal,Devart.Data.Universal.UniDecimal)">
      <summary>Determines whether the first of two <see cref="T:Devart.Data.Universal.UniDecimal" /> values is greater than or equal to the second. </summary>
      <keywords>UniDecimal.GreaterThanOrEqual method </keywords>
      <keywords>UniDecimal.GreaterThanOrEqual method </keywords>
      <param name="value1">First <see cref="T:Devart.Data.Universal.UniDecimal" />. </param>
      <param name="value2">Second <see cref="T:Devart.Data.Universal.UniDecimal" />. </param>
      <returns><see langword="true" /> if the first of two <see cref="T:Devart.Data.Universal.UniDecimal" /> values is greater than or equal to the second; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="P:Devart.Data.Universal.UniDecimal.IsNull">
      <summary>Gets a value indicating whether the <see cref="P:Devart.Data.Universal.UniDecimal.Value" /> property of the <see cref="T:Devart.Data.Universal.UniDecimal" /> is <see cref="F:Devart.Data.Universal.UniDecimal.Null" />. </summary>
      <keywords>UniDecimal.IsNull property </keywords>
      <keywords>UniDecimal.IsNull property </keywords>
      <value><see langword="true" /> if the <see cref="P:Devart.Data.Universal.UniDecimal.Value" /> is <see cref="F:Devart.Data.Universal.UniDecimal.Null" />; otherwise, <see langword="false" />. </value>
    </member>
    <member name="P:Devart.Data.Universal.UniDecimal.IsPositive">
      <summary>Gets value indicating whether current <see cref="T:Devart.Data.Universal.UniDecimal" /> is greater or less than zero. </summary>
      <keywords>UniDecimal.IsPositive property </keywords>
      <keywords>UniDecimal.IsPositive property </keywords>
      <value><see langword="true" /> if current value is greater than zero; otherwise, <see langword="false" />. </value>
    </member>
    <member name="M:Devart.Data.Universal.UniDecimal.LessThan(Devart.Data.Universal.UniDecimal,Devart.Data.Universal.UniDecimal)">
      <summary>Determines whether the first of two <see cref="T:Devart.Data.Universal.UniDecimal" /> values is less than the second. </summary>
      <keywords>UniDecimal.LessThan method </keywords>
      <keywords>UniDecimal.LessThan method </keywords>
      <param name="value1">First <see cref="T:Devart.Data.Universal.UniDecimal" />. </param>
      <param name="value2">Second <see cref="T:Devart.Data.Universal.UniDecimal" />. </param>
      <returns><see langword="true" /> if the first of two <see cref="T:Devart.Data.Universal.UniDecimal" /> values is less than the second; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDecimal.LessThanOrEqual(Devart.Data.Universal.UniDecimal,Devart.Data.Universal.UniDecimal)">
      <summary>Determines whether the first of two <see cref="T:Devart.Data.Universal.UniDecimal" /> values is less than or equal to the second. </summary>
      <keywords>UniDecimal.LessThanOrEqual method </keywords>
      <keywords>UniDecimal.LessThanOrEqual method </keywords>
      <param name="value1">First <see cref="T:Devart.Data.Universal.UniDecimal" />. </param>
      <param name="value2">Second <see cref="T:Devart.Data.Universal.UniDecimal" />. </param>
      <returns><see langword="true" /> if the first of two <see cref="T:Devart.Data.Universal.UniDecimal" /> values is less than or equal to the second; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="P:Devart.Data.Universal.UniDecimal.MaxPrecision">
      <summary>Represents the maximum precision, which is 38. </summary>
      <keywords>UniDecimal.MaxPrecision property </keywords>
      <keywords>UniDecimal.MaxPrecision property </keywords>
    </member>
    <member name="P:Devart.Data.Universal.UniDecimal.MaxScale">
      <summary>A constant representing the maximum value for the <see cref="P:Devart.Data.Universal.UniDecimal.Scale" /> property. </summary>
      <keywords>UniDecimal.MaxScale property </keywords>
      <keywords>UniDecimal.MaxScale property </keywords>
    </member>
    <member name="P:Devart.Data.Universal.UniDecimal.MaxValue">
      <summary>Represents the maximum value of an <see cref="T:Devart.Data.Universal.UniDecimal" /> structure. </summary>
      <keywords>UniDecimal.MaxValue property </keywords>
      <keywords>UniDecimal.MaxValue property </keywords>
    </member>
    <member name="P:Devart.Data.Universal.UniDecimal.MinValue">
      <summary>Represents the minimum value of an <see cref="T:Devart.Data.Universal.UniDecimal" /> structure. </summary>
      <keywords>UniDecimal.MinValue property </keywords>
      <keywords>UniDecimal.MinValue property </keywords>
    </member>
    <member name="M:Devart.Data.Universal.UniDecimal.Multiply(Devart.Data.Universal.UniDecimal,Devart.Data.Universal.UniDecimal)">
      <summary>Multiplies two <see cref="T:Devart.Data.Universal.UniDecimal" /> structures. </summary>
      <keywords>UniDecimal.Multiply method </keywords>
      <keywords>UniDecimal.Multiply method </keywords>
      <param name="value1">First <see cref="T:Devart.Data.Universal.UniDecimal" />. </param>
      <param name="value2">Second <see cref="T:Devart.Data.Universal.UniDecimal" />. </param>
      <returns>A new <see cref="T:Devart.Data.Universal.UniDecimal" /> structure. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDecimal.NotEquals(Devart.Data.Universal.UniDecimal,Devart.Data.Universal.UniDecimal)">
      <summary>Determines whether two <see cref="T:Devart.Data.Universal.UniDecimal" /> values are not equal. </summary>
      <keywords>UniDecimal.NotEquals method </keywords>
      <keywords>UniDecimal.NotEquals method </keywords>
      <param name="value1">First <see cref="T:Devart.Data.Universal.UniDecimal" />. </param>
      <param name="value2">Second <see cref="T:Devart.Data.Universal.UniDecimal" />. </param>
      <returns><see langword="true" /> if two <see cref="T:Devart.Data.Universal.UniDecimal" /> values are not equal; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="F:Devart.Data.Universal.UniDecimal.Null">
      <summary>Represents a null value that can be assigned to the <see cref="P:Devart.Data.Universal.UniDecimal.Value" /> property of an <see cref="T:Devart.Data.Universal.UniDecimal" /> structure. </summary>
      <keywords>UniDecimal.Null field </keywords>
    </member>
    <member name="M:Devart.Data.Universal.UniDecimal.Parse(System.String)">
      <summary>Converts the specified <see cref="T:System.String" /> representation of a number to its <see cref="T:Devart.Data.Universal.UniDecimal" /> equivalent. </summary>
      <keywords>UniDecimal.Parse method </keywords>
      <keywords>UniDecimal.Parse method </keywords>
      <param name="strValue"> </param>
      <returns>A new <see cref="T:Devart.Data.Universal.UniDecimal" /> structure. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDecimal.Power(Devart.Data.Universal.UniDecimal,System.Double)">
      <summary>Calculates a new <see cref="T:Devart.Data.Universal.UniDecimal" /> structure with its value set to the specified <see cref="T:Devart.Data.Universal.UniDecimal" /> structure raised to the specified power. </summary>
      <keywords>UniDecimal.Power method </keywords>
      <keywords>UniDecimal.Power method </keywords>
      <param name="value">The specified <see cref="T:Devart.Data.Universal.UniDecimal" /> structure. </param>
      <param name="power">A value that specifies the power. </param>
      <returns>A new <see cref="T:Devart.Data.Universal.UniDecimal" /> structure. </returns>
    </member>
    <member name="P:Devart.Data.Universal.UniDecimal.Precision">
      <summary>Gets precision of current <see cref="T:Devart.Data.Universal.UniDecimal" />. </summary>
      <keywords>UniDecimal.Precision property </keywords>
      <keywords>UniDecimal.Precision property </keywords>
    </member>
    <member name="M:Devart.Data.Universal.UniDecimal.Round(Devart.Data.Universal.UniDecimal,System.Int32)">
      <summary>Rounds the specified <see cref="T:Devart.Data.Universal.UniDecimal" /> off to the specified precision. </summary>
      <keywords>UniDecimal.Round method </keywords>
      <keywords>UniDecimal.Round method </keywords>
      <param name="value">The specified <see cref="T:Devart.Data.Universal.UniDecimal" /> structure. </param>
      <param name="position">The number of significant fractional digits (precision) in the return value. </param>
      <returns>An <see cref="T:Devart.Data.Universal.UniDecimal" /> structure containing the results of the rounding operation. </returns>
    </member>
    <member name="P:Devart.Data.Universal.UniDecimal.Scale">
      <summary>Gets scale of current <see cref="T:Devart.Data.Universal.UniDecimal" />. </summary>
      <keywords>UniDecimal.Scale property </keywords>
      <keywords>UniDecimal.Scale property </keywords>
    </member>
    <member name="M:Devart.Data.Universal.UniDecimal.Sign(Devart.Data.Universal.UniDecimal)">
      <summary>Gets the sign of the <see cref="T:Devart.Data.Universal.UniDecimal" /> structure. </summary>
      <keywords>UniDecimal.Sign method </keywords>
      <keywords>UniDecimal.Sign method </keywords>
      <param name="value">The specified <see cref="T:Devart.Data.Universal.UniDecimal" /> structure. </param>
      <returns>A number indicating the sign of the <see cref="T:Devart.Data.Universal.UniDecimal" /> structure. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDecimal.Subtract(Devart.Data.Universal.UniDecimal,Devart.Data.Universal.UniDecimal)">
      <summary>Subtracts one <see cref="T:Devart.Data.Universal.UniDecimal" /> structure from another. </summary>
      <keywords>UniDecimal.Subtract method </keywords>
      <keywords>UniDecimal.Subtract method </keywords>
      <param name="value1">First <see cref="T:Devart.Data.Universal.UniDecimal" />. </param>
      <param name="value2">Second <see cref="T:Devart.Data.Universal.UniDecimal" />. </param>
      <returns>A new <see cref="T:Devart.Data.Universal.UniDecimal" /> structure. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDecimal.ToDecimal(Devart.Data.Universal.UniDecimal)">
      <summary>Converts the current <see cref="T:Devart.Data.Universal.UniDecimal" /> structure to a <see cref="T:System.Decimal" />. </summary>
      <keywords>UniDecimal.ToDecimal method </keywords>
      <keywords>UniDecimal.ToDecimal method </keywords>
      <param name="value">Structure to convert. </param>
      <returns>A <see cref="T:System.Decimal" /> representing the <see cref="T:Devart.Data.Universal.UniDecimal" /> structure. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDecimal.ToDouble(Devart.Data.Universal.UniDecimal)">
      <summary>Converts the current <see cref="T:Devart.Data.Universal.UniDecimal" /> structure to a <see cref="T:System.Double" />. </summary>
      <keywords>UniDecimal.ToDouble method </keywords>
      <keywords>UniDecimal.ToDouble method </keywords>
      <param name="value">Structure to convert. </param>
      <returns>A <see cref="T:System.Double" /> representing the <see cref="T:Devart.Data.Universal.UniDecimal" /> structure. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDecimal.ToInt32(Devart.Data.Universal.UniDecimal)">
      <summary>Converts the current <see cref="T:Devart.Data.Universal.UniDecimal" /> structure to a <see cref="T:System.Int" />. </summary>
      <keywords>UniDecimal.ToInt32 method </keywords>
      <keywords>UniDecimal.ToInt32 method </keywords>
      <param name="value">Structure to convert. </param>
      <returns>A <see cref="T:System.Int" /> representing the <see cref="T:Devart.Data.Universal.UniDecimal" /> structure. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDecimal.ToInt64(Devart.Data.Universal.UniDecimal)">
      <summary>Converts the current <see cref="T:Devart.Data.Universal.UniDecimal" /> structure to a <see cref="T:System.Long" />. </summary>
      <keywords>UniDecimal.ToInt64 method </keywords>
      <keywords>UniDecimal.ToInt64 method </keywords>
      <param name="value">Structure to convert. </param>
      <returns>A <see cref="T:System.Long" /> representing the <see cref="T:Devart.Data.Universal.UniDecimal" /> structure. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDecimal.ToString()">
      <summary>Converts the current <see cref="T:Devart.Data.Universal.UniDecimal" /> structure to a <see cref="T:System.String" />. </summary>
      <keywords>UniDecimal.ToString method </keywords>
      <keywords>UniDecimal.ToString method </keywords>
      <returns>A <see cref="T:System.String" /> representing the <see cref="T:Devart.Data.Universal.UniDecimal" /> structure. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDecimal.Truncate(Devart.Data.Universal.UniDecimal,System.Int32)">
      <summary>Truncates the <see cref="T:Devart.Data.Universal.UniDecimal" /> at a specified position. </summary>
      <keywords>UniDecimal.Truncate method </keywords>
      <keywords>UniDecimal.Truncate method </keywords>
      <param name="value">The specified <see cref="T:Devart.Data.Universal.UniDecimal" /> structure. </param>
      <param name="position">The decimal position to which the number will be truncated. </param>
      <returns>A new <see cref="T:Devart.Data.Universal.UniDecimal" /> structure. </returns>
    </member>
    <member name="P:Devart.Data.Universal.UniDecimal.Value">
      <summary>Gets the value of the <see cref="T:Devart.Data.Universal.UniDecimal" /> structure. </summary>
      <keywords>UniDecimal.Value property </keywords>
      <keywords>UniDecimal.Value property </keywords>
      <value>A decimal value. </value>
    </member>
    <member name="M:Devart.Data.Universal.UniDecimal.op_Addition(Devart.Data.Universal.UniDecimal,Devart.Data.Universal.UniDecimal)">
      <summary>Calculates the sum of the two  <see cref="T:Devart.Data.Universal.UniDecimal" /> operators. </summary>
      <keywords>UniDecimal.op_Addition method </keywords>
      <keywords>UniDecimal.op_Addition method </keywords>
      <param name="value1">First <see cref="T:Devart.Data.Universal.UniDecimal" />. </param>
      <param name="value2">Second <see cref="T:Devart.Data.Universal.UniDecimal" />. </param>
      <returns>A new <see cref="T:Devart.Data.Universal.UniDecimal" /> structure. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDecimal.op_Division(Devart.Data.Universal.UniDecimal,Devart.Data.Universal.UniDecimal)">
      <summary>Divides one <see cref="T:Devart.Data.Universal.UniDecimal" /> value by another. </summary>
      <keywords>UniDecimal.op_Division method </keywords>
      <keywords>UniDecimal.op_Division method </keywords>
      <param name="value1">First <see cref="T:Devart.Data.Universal.UniDecimal" />. </param>
      <param name="value2">Second <see cref="T:Devart.Data.Universal.UniDecimal" />. </param>
      <returns>A new <see cref="T:Devart.Data.Universal.UniDecimal" /> structure. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDecimal.op_Equality(Devart.Data.Universal.UniDecimal,Devart.Data.Universal.UniDecimal)">
      <summary>Determines whether two <see cref="T:Devart.Data.Universal.UniDecimal" /> values are equal. </summary>
      <keywords>UniDecimal.op_Equality method </keywords>
      <keywords>UniDecimal.op_Equality method </keywords>
      <param name="value1">First <see cref="T:Devart.Data.Universal.UniDecimal" />. </param>
      <param name="value2">Second <see cref="T:Devart.Data.Universal.UniDecimal" />. </param>
      <returns><see langword="true" /> if two <see cref="T:Devart.Data.Universal.UniDecimal" /> values are equal; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDecimal.op_Explicit(Devart.Data.Universal.UniDecimal)~System.Decimal">
      <summary>Converts the <see cref="T:Devart.Data.Universal.UniDecimal" /> parameter to <see cref="T:System.Decimal" />. </summary>
      <keywords>UniDecimal.op_Explicit method </keywords>
      <keywords>UniDecimal.op_Explicit method </keywords>
      <param name="value"> </param>
      <returns>A new <see cref="T:System.Decimal" /> structure. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDecimal.op_Explicit(Devart.Data.Universal.UniDecimal)~System.Double">
      <summary>Converts the <see cref="T:Devart.Data.Universal.UniDecimal" /> parameter to <see cref="T:System.Double" />. </summary>
      <keywords>UniDecimal.op_Explicit method </keywords>
      <keywords>UniDecimal.op_Explicit method </keywords>
      <param name="value"> </param>
      <returns>A new <see cref="T:System.Double" /> structure. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDecimal.op_Explicit(Devart.Data.Universal.UniDecimal)~System.Int32">
      <summary>Converts the <see cref="T:Devart.Data.Universal.UniDecimal" /> parameter to <see cref="T:System.Int32" />. </summary>
      <keywords>UniDecimal.op_Explicit method </keywords>
      <keywords>UniDecimal.op_Explicit method </keywords>
      <param name="value"> </param>
      <returns>A new <see cref="T:System.Int32" /> structure. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDecimal.op_Explicit(Devart.Data.Universal.UniDecimal)~System.Int64">
      <summary>Converts the <see cref="T:Devart.Data.Universal.UniDecimal" /> parameter to <see cref="T:System.Int64" />. </summary>
      <keywords>UniDecimal.op_Explicit method </keywords>
      <keywords>UniDecimal.op_Explicit method </keywords>
      <param name="value"> </param>
      <returns>A new <see cref="T:System.Int64" /> structure. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDecimal.op_Explicit(System.Double)~Devart.Data.Universal.UniDecimal">
      <summary>Converts the <see cref="T:System.Double" /> parameter to the <see cref="T:Devart.Data.Universal.UniDecimal" />. </summary>
      <keywords>UniDecimal.op_Explicit method </keywords>
      <keywords>UniDecimal.op_Explicit method </keywords>
      <param name="value">The specified <see cref="T:System.Double" />. </param>
      <returns>A <see cref="T:Devart.Data.Universal.UniDecimal" /> structure. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDecimal.op_Explicit(System.String)~Devart.Data.Universal.UniDecimal">
      <summary>Converts the <see cref="T:System.String" /> parameter to the <see cref="T:Devart.Data.Universal.UniDecimal" />. </summary>
      <keywords>UniDecimal.op_Explicit method </keywords>
      <keywords>UniDecimal.op_Explicit method </keywords>
      <param name="value">The <see cref="T:System.String" /> that represents a numeric value. </param>
      <returns>A <see cref="T:Devart.Data.Universal.UniDecimal" /> structure. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDecimal.op_GreaterThan(Devart.Data.Universal.UniDecimal,Devart.Data.Universal.UniDecimal)">
      <summary>Compares two <see cref="T:Devart.Data.Universal.UniDecimal" /> structures to determine if the first is greater than the second. </summary>
      <keywords>UniDecimal.op_GreaterThan method </keywords>
      <keywords>UniDecimal.op_GreaterThan method </keywords>
      <param name="value1">First <see cref="T:Devart.Data.Universal.UniDecimal" />. </param>
      <param name="value2">Second <see cref="T:Devart.Data.Universal.UniDecimal" />. </param>
      <returns><see langword="true" /> if the first of two <see cref="T:Devart.Data.Universal.UniDecimal" /> values is greater than the second; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDecimal.op_GreaterThanOrEqual(Devart.Data.Universal.UniDecimal,Devart.Data.Universal.UniDecimal)">
      <summary>Compares two <see cref="T:Devart.Data.Universal.UniDecimal" /> structures to determine if the first is greater than or equal to the second. </summary>
      <keywords>UniDecimal.op_GreaterThanOrEqual method </keywords>
      <keywords>UniDecimal.op_GreaterThanOrEqual method </keywords>
      <param name="value1">First <see cref="T:Devart.Data.Universal.UniDecimal" />. </param>
      <param name="value2">Second <see cref="T:Devart.Data.Universal.UniDecimal" />. </param>
      <returns><see langword="true" /> if the first of two <see cref="T:Devart.Data.Universal.UniDecimal" /> values is greater than or equal to the second; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDecimal.op_Implicit(System.Decimal)~Devart.Data.Universal.UniDecimal">
      <summary>Converts the <see cref="T:System.Decimal" /> parameter to the <see cref="T:Devart.Data.Universal.UniDecimal" />. </summary>
      <keywords>UniDecimal.op_Implicit method </keywords>
      <keywords>UniDecimal.op_Implicit method </keywords>
      <param name="value">The specified <see cref="T:System.Decimal" />. </param>
      <returns>A <see cref="T:Devart.Data.Universal.UniDecimal" /> structure. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDecimal.op_Implicit(System.Int32)~Devart.Data.Universal.UniDecimal">
      <summary>Converts the <see cref="T:System.Int32" /> parameter to the <see cref="T:Devart.Data.Universal.UniDecimal" />. </summary>
      <keywords>UniDecimal.op_Implicit method </keywords>
      <keywords>UniDecimal.op_Implicit method </keywords>
      <param name="value">The specified <see cref="T:System.Int32" />. </param>
      <returns>A <see cref="T:Devart.Data.Universal.UniDecimal" /> structure. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDecimal.op_Implicit(System.Int64)~Devart.Data.Universal.UniDecimal">
      <summary>Converts the <see cref="T:System.Int64" /> parameter to the <see cref="T:Devart.Data.Universal.UniDecimal" />. </summary>
      <keywords>UniDecimal.op_Implicit method </keywords>
      <keywords>UniDecimal.op_Implicit method </keywords>
      <param name="value">The specified <see cref="T:System.Int64" />. </param>
      <returns>A <see cref="T:Devart.Data.Universal.UniDecimal" /> structure. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDecimal.op_Inequality(Devart.Data.Universal.UniDecimal,Devart.Data.Universal.UniDecimal)">
      <summary>Determines whether two <see cref="T:Devart.Data.Universal.UniDecimal" /> values are not equal. </summary>
      <keywords>UniDecimal.op_Inequality method </keywords>
      <keywords>UniDecimal.op_Inequality method </keywords>
      <param name="value1">First <see cref="T:Devart.Data.Universal.UniDecimal" />. </param>
      <param name="value2">Second <see cref="T:Devart.Data.Universal.UniDecimal" />. </param>
      <returns><see langword="true" /> if two <see cref="T:Devart.Data.Universal.UniDecimal" /> values are not equal; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDecimal.op_LessThan(Devart.Data.Universal.UniDecimal,Devart.Data.Universal.UniDecimal)">
      <summary>Compares two <see cref="T:Devart.Data.Universal.UniDecimal" /> structures to determine if the first is less than the second. </summary>
      <keywords>UniDecimal.op_LessThan method </keywords>
      <keywords>UniDecimal.op_LessThan method </keywords>
      <param name="value1">First <see cref="T:Devart.Data.Universal.UniDecimal" />. </param>
      <param name="value2">Second <see cref="T:Devart.Data.Universal.UniDecimal" />. </param>
      <returns><see langword="true" /> if the first of two <see cref="T:Devart.Data.Universal.UniDecimal" /> values is less than the second; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDecimal.op_LessThanOrEqual(Devart.Data.Universal.UniDecimal,Devart.Data.Universal.UniDecimal)">
      <summary>Compares two <see cref="T:Devart.Data.Universal.UniDecimal" /> structures to determine if the first is less than or equal to the second. </summary>
      <keywords>UniDecimal.op_LessThanOrEqual method </keywords>
      <keywords>UniDecimal.op_LessThanOrEqual method </keywords>
      <param name="value1">First <see cref="T:Devart.Data.Universal.UniDecimal" />. </param>
      <param name="value2">Second <see cref="T:Devart.Data.Universal.UniDecimal" />. </param>
      <returns><see langword="true" /> if the first of two <see cref="T:Devart.Data.Universal.UniDecimal" /> values is less than or equal to the second; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDecimal.op_Multiply(Devart.Data.Universal.UniDecimal,Devart.Data.Universal.UniDecimal)">
      <summary>Multiplies two <see cref="T:Devart.Data.Universal.UniDecimal" /> structures. </summary>
      <keywords>UniDecimal.op_Multiply method </keywords>
      <keywords>UniDecimal.op_Multiply method </keywords>
      <param name="value1">First <see cref="T:Devart.Data.Universal.UniDecimal" />. </param>
      <param name="value2">Second <see cref="T:Devart.Data.Universal.UniDecimal" />. </param>
      <returns>A new <see cref="T:Devart.Data.Universal.UniDecimal" /> structure. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniDecimal.op_Subtraction(Devart.Data.Universal.UniDecimal,Devart.Data.Universal.UniDecimal)">
      <summary>Subtracts one <see cref="T:Devart.Data.Universal.UniDecimal" /> structure from another. </summary>
      <keywords>UniDecimal.op_Subtraction method </keywords>
      <keywords>UniDecimal.op_Subtraction method </keywords>
      <param name="value1">First <see cref="T:Devart.Data.Universal.UniDecimal" />. </param>
      <param name="value2">Second <see cref="T:Devart.Data.Universal.UniDecimal" />. </param>
      <returns>A new <see cref="T:Devart.Data.Universal.UniDecimal" /> structure. </returns>
    </member>
    <member name="T:Devart.Data.Universal.UniException">
      <summary>The exception that is generated when  server returns an error. </summary>
    </member>
    <member name="M:Devart.Data.Universal.UniException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <b>SerializationInfo</b> with the data needed to serialize the target object. </summary>
      <keywords>UniException.GetObjectData method </keywords>
      <keywords>UniException.GetObjectData method </keywords>
      <param name="info">The <b>SerializationInfo</b> that holds the serialized object data about the exception being thrown. </param>
      <param name="context">The <b>StreamingContext</b> that contains contextual information about the source or destination. </param>
    </member>
    <member name="P:Devart.Data.Universal.UniException.Message">
      <summary>Returns a string representation of the error message information. </summary>
      <keywords>UniException.Message property </keywords>
      <keywords>UniException.Message property </keywords>
      <value>A string representation of the error. </value>
    </member>
    <member name="T:Devart.Data.Universal.UniInfoMessageEventArgs">
      <summary>Provides data for the <see cref="E:Devart.Data.Universal.UniConnection.InfoMessage" /> event. </summary>
    </member>
    <member name="M:Devart.Data.Universal.UniInfoMessageEventArgs.#ctor()">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.Universal.UniInfoMessageEventArgs" /> class. </summary>
    </member>
    <member name="P:Devart.Data.Universal.UniInfoMessageEventArgs.Code">
      <summary>Gets a code that identifies the type of error. </summary>
      <keywords>UniInfoMessageEventArgs.Code property </keywords>
      <keywords>UniInfoMessageEventArgs.Code property </keywords>
      <value>A code that identifies the type of error. </value>
    </member>
    <member name="P:Devart.Data.Universal.UniInfoMessageEventArgs.Message">
      <summary>Gets the text describing the error. </summary>
      <keywords>UniInfoMessageEventArgs.Message property </keywords>
      <keywords>UniInfoMessageEventArgs.Message property </keywords>
      <value>The text describing the error. </value>
    </member>
    <member name="T:Devart.Data.Universal.UniInfoMessageEventHandler">
      <summary>Represents the method that will handle the <see cref="E:Devart.Data.Universal.UniConnection.InfoMessage" /> event of an <see cref="T:Devart.Data.Universal.UniConnection" />. </summary>
      <keywords>UniInfoMessageEventHandler delegate </keywords>
      <param name="sender">The source of the event. </param>
      <param name="e">An <see cref="T:Devart.Data.Universal.UniInfoMessageEventArgs" /> object that contains the event data. </param>
    </member>
    <member name="T:Devart.Data.Universal.UniMacro">
      <summary>Represents UniSQL macro definition. </summary>
    </member>
    <member name="M:Devart.Data.Universal.UniMacro.#ctor()">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.Universal.UniMacro" /> class. </summary>
    </member>
    <member name="M:Devart.Data.Universal.UniMacro.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.Universal.UniMacro" /> class with given name and value. </summary>
      <param name="macroName">Name of the macro. </param>
      <param name="value">Value of the macro. </param>
    </member>
    <member name="M:Devart.Data.Universal.UniMacro.#ctor(System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.Universal.UniMacro" /> class with given name, value and condition. </summary>
      <param name="macroName">Name of the macro. </param>
      <param name="value">Value of the macro. </param>
      <param name="condition">Condition of the macro. </param>
    </member>
    <member name="P:Devart.Data.Universal.UniMacro.Condition">
      <summary>Gets or sets macro condition. </summary>
      <keywords>UniMacro.Condition property </keywords>
      <keywords>UniMacro.Condition property </keywords>
      <value>Condition for the macro, which determines whether macro is evaluated to its <see cref="P:Devart.Data.Universal.UniMacro.Value" /> or empty string. </value>
    </member>
    <member name="P:Devart.Data.Universal.UniMacro.Name">
      <summary>Gets or sets macro name. </summary>
      <keywords>UniMacro.Name property </keywords>
      <keywords>UniMacro.Name property </keywords>
      <value>Macro identifier to be used in UniSQL statements. </value>
    </member>
    <member name="P:Devart.Data.Universal.UniMacro.Value">
      <summary>Gets or sets macro value. </summary>
      <keywords>UniMacro.Value property </keywords>
      <keywords>UniMacro.Value property </keywords>
      <value>A string expression that macro evaluates to, if <see cref="P:Devart.Data.Universal.UniMacro.Condition" /> is enabled. </value>
    </member>
    <member name="T:Devart.Data.Universal.UniMacroCollection">
      <summary>Represents set of UniSQL macros. </summary>
    </member>
    <member name="M:Devart.Data.Universal.UniMacroCollection.#ctor()">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.Universal.UniMacroCollection" /> class. </summary>
    </member>
    <member name="M:Devart.Data.Universal.UniMacroCollection.Add(Devart.Data.Universal.UniMacro)">
      <summary>Adds the specified <see cref="T:Devart.Data.Universal.UniMacro" /> to the <see cref="T:Devart.Data.Universal.UniMacroCollection" />. </summary>
      <keywords>UniMacroCollection.Add method </keywords>
      <keywords>UniMacroCollection.Add method </keywords>
      <param name="macro"> </param>
    </member>
    <member name="M:Devart.Data.Universal.UniMacroCollection.Add(System.String,System.String)">
      <summary>Adds new item to the <see cref="T:Devart.Data.Universal.UniMacroCollection" />. </summary>
      <keywords>UniMacroCollection.Add method </keywords>
      <keywords>UniMacroCollection.Add method </keywords>
      <param name="macroName">Name of the new macro. </param>
      <param name="macroValue">Value of the new macro. </param>
    </member>
    <member name="M:Devart.Data.Universal.UniMacroCollection.Add(System.String,System.String,System.String)">
      <summary>Adds new item to the <see cref="T:Devart.Data.Universal.UniMacroCollection" />. </summary>
      <keywords>UniMacroCollection.Add method </keywords>
      <keywords>UniMacroCollection.Add method </keywords>
      <param name="macroName">Name of the new macro. </param>
      <param name="macroValue">Value of the new macro. </param>
      <param name="condition">Condition of the new macro. </param>
    </member>
    <member name="P:Devart.Data.Universal.UniMacroCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:Devart.Data.Universal.UniMacro" /> at the specified index. </summary>
      <keywords>UniMacroCollection.Item property </keywords>
      <keywords>UniMacroCollection.Item property </keywords>
      <param name="index">The zero-based index of the <see cref="T:Devart.Data.Universal.UniMacro" /> to retrieve. </param>
      <value>The <see cref="T:Devart.Data.Universal.UniMacro" /> at the specified index. </value>
    </member>
    <member name="T:Devart.Data.Universal.UniMonitor">
      <summary>Allows to monitor dynamic SQL execution in applications that use Universal .NET. </summary>
    </member>
    <member name="M:Devart.Data.Universal.UniMonitor.#ctor()">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.Universal.UniMonitor" /> class. </summary>
    </member>
    <member name="P:Devart.Data.Universal.UniMonitor.IsActive">
      <summary>Gets or sets whether <see cref="T:Devart.Data.Universal.UniMonitor" /> should watch SQL execution. </summary>
      <keywords>UniMonitor.IsActive property </keywords>
      <keywords>UniMonitor.IsActive property </keywords>
      <value><see langword="true" /> if the <see cref="T:Devart.Data.Universal.UniMonitor" /> object should detect SQL queries peformed by the application; <see langword="false" /> otherwise. </value>
    </member>
    <member name="T:Devart.Data.Universal.UniParameter">
      <summary>Represents a parameter to a <see cref="T:Devart.Data.Universal.UniCommand" />, and optionally, its mapping to <see cref="T:System.Data.DataSet" /> columns. </summary>
    </member>
    <member name="M:Devart.Data.Universal.UniParameter.#ctor()">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.Universal.UniParameter" /> class. </summary>
      <overloads>Initializes a new instance of the <see cref="T:Devart.Data.Universal.UniParameter" /> class. </overloads>
    </member>
    <member name="M:Devart.Data.Universal.UniParameter.#ctor(System.String,Devart.Data.Universal.UniDbType)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.Universal.UniParameter" /> class with the parameter name and data type. </summary>
      <param name="parameterName">The name of the parameter. </param>
      <param name="dbType">One of the <see cref="T:Devart.Data.Universal.UniDbType" /> values. </param>
    </member>
    <member name="M:Devart.Data.Universal.UniParameter.#ctor(System.String,Devart.Data.Universal.UniDbType,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.Universal.UniParameter" /> class with the parameter name, data type, and width. </summary>
      <param name="parameterName">The name of the parameter. </param>
      <param name="dbType">One of the <see cref="T:Devart.Data.Universal.UniDbType" /> values. </param>
      <param name="size">The maximum size, in bytes, of the data within the column. </param>
    </member>
    <member name="M:Devart.Data.Universal.UniParameter.#ctor(System.String,Devart.Data.Universal.UniDbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Boolean,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.Universal.UniParameter" /> class with the parameter name and data type. </summary>
      <param name="parameterName">The name of the parameter. </param>
      <param name="dbType"> </param>
      <param name="size">The maximum size, in bytes, of the data within the column. </param>
      <param name="direction">One of the <see cref="T:System.Data.ParameterDirection" /> values. </param>
      <param name="isNullable"><see langword="true" /> if the value of the field can be null; otherwise, <see langword="false" />. </param>
      <param name="precision">The total number of digits to the left and right of the decimal point to which <see cref="P:Devart.Data.Universal.UniParameter.Value" /> is resolved. </param>
      <param name="scale">The total number of decimal places to which <see cref="P:Devart.Data.Universal.UniParameter.Value" /> is resolved. </param>
      <param name="sourceColumn">The name of the source column. </param>
      <param name="sourceVersion">One of the <see cref="T:System.Data.DataRowVersion" /> values. </param>
      <param name="sourceColumnNullMapping">Specifies whether the source column is nullable. </param>
      <param name="value">An Object that is the value of the <see cref="T:Devart.Data.Universal.UniParameter" />. </param>
    </member>
    <member name="M:Devart.Data.Universal.UniParameter.#ctor(System.String,Devart.Data.Universal.UniDbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.Universal.UniParameter" /> class with the parameter name, data type, width, source column name, parameter direction, numeric precision, and other properties. </summary>
      <param name="parameterName">The name of the parameter. </param>
      <param name="dbType">One of the <see cref="T:Devart.Data.Universal.UniDbType" /> values. </param>
      <param name="size">The maximum size, in bytes, of the data within the column. </param>
      <param name="direction">One of the <see cref="T:System.Data.ParameterDirection" /> values. </param>
      <param name="isNullable"><see langword="true" /> if the value of the field can be null; otherwise, <see langword="false" />. </param>
      <param name="precision">The total number of digits to the left and right of the decimal point to which <see cref="P:Devart.Common.DbParameterBase.Value" /> is resolved. </param>
      <param name="scale">The total number of decimal places to which <see cref="P:Devart.Common.DbParameterBase.Value" /> is resolved. </param>
      <param name="sourceColumn">The name of the source column. </param>
      <param name="sourceVersion">One of the <see cref="T:System.Data.DataRowVersion" /> values. </param>
      <param name="value">An Object that is the value of the <see cref="T:Devart.Data.Universal.UniParameter" />. </param>
    </member>
    <member name="M:Devart.Data.Universal.UniParameter.#ctor(System.String,Devart.Data.Universal.UniDbType,System.Int32,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.Universal.UniParameter" /> class with the parameter name, data type, width, and source column name. </summary>
      <param name="parameterName">The name of the parameter. </param>
      <param name="dbType">One of the <see cref="T:Devart.Data.Universal.UniDbType" /> values. </param>
      <param name="size">The maximum size, in bytes, of the data within the column. </param>
      <param name="sourceColumn">The name of the source column. </param>
    </member>
    <member name="M:Devart.Data.Universal.UniParameter.#ctor(System.String,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.Universal.UniParameter" /> class with the parameter name and a <see cref="T:Devart.Data.Universal.UniParameter" /> object. </summary>
      <param name="parameterName">The name of the parameter. </param>
      <param name="value">A <see cref="T:Devart.Data.Universal.UniParameter" /> object. </param>
    </member>
    <member name="M:Devart.Data.Universal.UniParameter.Clone()">
      <summary>Creates a new object that is a copy of the current <see cref="T:Devart.Data.Universal.UniParameter" /> instance. </summary>
      <keywords>UniParameter.Clone method </keywords>
      <keywords>UniParameter.Clone method </keywords>
      <returns>A new <see cref="T:Devart.Data.Universal.UniParameter" /> object in which all property values are the same as the original. </returns>
    </member>
    <member name="P:Devart.Data.Universal.UniParameter.DbType">
      <summary>Gets or sets the <see cref="T:System.Data.DbType" /> of the parameter. </summary>
      <keywords>UniParameter.DbType property </keywords>
      <keywords>UniParameter.DbType property </keywords>
      <value>One of the <see cref="T:System.Data.DbType" /> values. The default value is <see cref="T:System.String" />. </value>
    </member>
    <member name="P:Devart.Data.Universal.UniParameter.Direction">
      <summary>Gets or sets a value indicating whether the parameter is input-only, output-only, or bidirectional parameter. </summary>
      <keywords>UniParameter.Direction property </keywords>
      <keywords>UniParameter.Direction property </keywords>
      <value>One of the <see cref="T:System.Data.ParameterDirection" /> values. The default value is Input. </value>
    </member>
    <member name="P:Devart.Data.Universal.UniParameter.IsNullable">
      <summary>Gets or sets a value indicating whether the parameter accepts null values. </summary>
      <keywords>UniParameter.IsNullable property </keywords>
      <keywords>UniParameter.IsNullable property </keywords>
      <value><see langword="true" /> if null values are accepted; otherwise, <see langword="false" />. The default value is <see langword="false" />. </value>
    </member>
    <member name="P:Devart.Data.Universal.UniParameter.ParameterName">
      <summary>Gets or sets the name of the <see cref="T:Devart.Data.Universal.UniParameter" />. </summary>
      <keywords>UniParameter.ParameterName property </keywords>
      <keywords>UniParameter.ParameterName property </keywords>
      <value>The name of the <see cref="T:Devart.Data.Universal.UniParameter" />. The default value is an empty string (""). </value>
    </member>
    <member name="P:Devart.Data.Universal.UniParameter.Precision">
      <summary>Gets or sets the maximum number of digits used to represent the <see cref="P:Devart.Common.DbParameter.Value" /> property. </summary>
      <keywords>UniParameter.Precision property </keywords>
      <keywords>UniParameter.Precision property </keywords>
      <value>The maximum number of digits used to represent the <see cref="P:Devart.Common.DbParameter.Value" /> property. The default value is 0. </value>
    </member>
    <member name="M:Devart.Data.Universal.UniParameter.ResetDbType()">
      <summary>Clears explicit <see cref="P:Devart.Data.Universal.UniParameter.UniDbType" /> assignment. </summary>
      <keywords>UniParameter.ResetDbType method </keywords>
      <keywords>UniParameter.ResetDbType method </keywords>
    </member>
    <member name="P:Devart.Data.Universal.UniParameter.Scale">
      <summary>Gets or sets the number of decimal places to which <see cref="P:Devart.Common.DbParameter.Value" /> is resolved. </summary>
      <keywords>UniParameter.Scale property </keywords>
      <keywords>UniParameter.Scale property </keywords>
      <value>The number of decimal places to which <see cref="P:Devart.Common.DbParameter.Value" /> is resolved. The default value is 0. </value>
    </member>
    <member name="P:Devart.Data.Universal.UniParameter.Size">
      <summary>Gets or sets the maximum size, in bytes, of the data within the column. </summary>
      <keywords>UniParameter.Size property </keywords>
      <keywords>UniParameter.Size property </keywords>
      <value>The maximum size, in bytes, of the data within the column. The default value is inferred from the parameter value. </value>
    </member>
    <member name="P:Devart.Data.Universal.UniParameter.SourceColumn">
      <summary>Gets or sets the name of the source column mapped to the <see cref="T:System.Data.DataSet" /> and used for loading or returning the <see cref="P:Devart.Data.Universal.UniParameter.Value" />. </summary>
      <keywords>UniParameter.SourceColumn property </keywords>
      <keywords>UniParameter.SourceColumn property </keywords>
      <value>The name of the source column that will be used to set the value of this parameter. The default value is an empty string (""). </value>
    </member>
    <member name="P:Devart.Data.Universal.UniParameter.SourceColumnNullMapping">
      <summary>Sets or gets a value which indicates whether the source column is nullable. </summary>
      <keywords>UniParameter.SourceColumnNullMapping property </keywords>
      <keywords>UniParameter.SourceColumnNullMapping property </keywords>
      <value><see langword="true" /> if source column is nullable; otherwise, <see langword="false" />. The default value is <see langword="false" />. </value>
    </member>
    <member name="P:Devart.Data.Universal.UniParameter.SourceVersion">
      <summary>Gets or sets the <see cref="T:System.Data.DataRowVersion" /> to use when loading <see cref="P:Devart.Data.Universal.UniParameter.Value" />. </summary>
      <keywords>UniParameter.SourceVersion property </keywords>
      <keywords>UniParameter.SourceVersion property </keywords>
      <value>One of the <see cref="T:System.Data.DataRowVersion" /> values. The default value is Current. </value>
    </member>
    <member name="M:Devart.Data.Universal.UniParameter.ToString()">
      <summary>Gets a string containing the <see cref="P:Devart.Common.DbParameter.ParameterName" />. </summary>
      <keywords>UniParameter.ToString method </keywords>
      <keywords>UniParameter.ToString method </keywords>
      <returns>A string containing the <see cref="P:Devart.Common.DbParameter.ParameterName" />. </returns>
    </member>
    <member name="P:Devart.Data.Universal.UniParameter.UniDbType">
      <summary>Gets or sets the <see cref="T:Devart.Data.Universal.UniDbType" /> of the parameter. </summary>
      <keywords>UniParameter.UniDbType property </keywords>
      <keywords>UniParameter.UniDbType property </keywords>
      <value>A <see cref="T:Devart.Data.Universal.UniDbType" /> value that is the <see cref="P:Devart.Data.Universal.UniParameter.UniDbType" /> of the parameter. The default value is <see cref="T:Devart.Data.Universal.UniDbType" />.VarChar. </value>
    </member>
    <member name="P:Devart.Data.Universal.UniParameter.Value">
      <summary>Gets or sets the value of the parameter. </summary>
      <keywords>UniParameter.Value property </keywords>
      <keywords>UniParameter.Value property </keywords>
      <value>An <see cref="T:System.Object" /> that is the value of the parameter. The default value is null. </value>
    </member>
    <member name="T:Devart.Data.Universal.UniParameterCollection">
      <summary>Collects all parameters relevant to a <see cref="T:Devart.Data.Universal.UniCommand" /> as well as their respective mappings to <see cref="T:System.Data.DataSet" /> columns. </summary>
    </member>
    <member name="M:Devart.Data.Universal.UniParameterCollection.Add(Devart.Data.Universal.UniParameter)">
      <summary>Adds the specified <see cref="T:Devart.Data.Universal.UniParameter" /> to the <see cref="T:Devart.Data.Universal.UniParameterCollection" />. </summary>
      <keywords>UniParameterCollection.Add method </keywords>
      <keywords>UniParameterCollection.Add method </keywords>
      <param name="value">The <see cref="T:Devart.Data.Universal.UniParameter" /> to add to the collection. </param>
      <returns>The new <see cref="T:Devart.Data.Universal.UniParameter" /> object. </returns>
      <overloads>Adds the specified <see cref="T:Devart.Data.Universal.UniParameter" /> to the <see cref="T:Devart.Data.Universal.UniParameterCollection" />. </overloads>
    </member>
    <member name="M:Devart.Data.Universal.UniParameterCollection.Add(System.Object)">
      <summary>Adds the specified <see cref="T:Devart.Common.DbParameter" /> to the <see cref="T:Devart.Common.DbParameterCollection" />. </summary>
      <keywords>UniParameterCollection.Add method </keywords>
      <keywords>UniParameterCollection.Add method </keywords>
      <param name="value">The <see cref="T:Devart.Common.DbParameter" /> to add to the <see cref="T:Devart.Common.DbParameterCollection" />. </param>
      <returns>Index of the new <see cref="T:Devart.Common.DbParameter" /> object. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniParameterCollection.Add(System.String,Devart.Data.Universal.UniDbType)">
      <summary>Adds a <see cref="T:Devart.Data.Universal.UniParameter" /> to the <see cref="T:Devart.Data.Universal.UniParameterCollection" /> given the parameter name and data type. </summary>
      <keywords>UniParameterCollection.Add method </keywords>
      <keywords>UniParameterCollection.Add method </keywords>
      <param name="parameterName">The name of the parameter. </param>
      <param name="type">One of the <see cref="T:Devart.Data.Universal.UniDbType" /> values. </param>
      <returns>The new <see cref="T:Devart.Data.Universal.UniParameter" /> object. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniParameterCollection.Add(System.String,Devart.Data.Universal.UniDbType,System.Int32)">
      <summary>Adds a <see cref="T:Devart.Data.Universal.UniParameter" /> to the <see cref="T:Devart.Data.Universal.UniParameterCollection" /> given the the parameter name, data type, and column width. </summary>
      <keywords>UniParameterCollection.Add method </keywords>
      <keywords>UniParameterCollection.Add method </keywords>
      <param name="parameterName">The name of the parameter. </param>
      <param name="dbType">One of the <see cref="T:Devart.Data.Universal.UniDbType" /> values. </param>
      <param name="size">The width of the column. </param>
      <returns>The new <see cref="T:Devart.Data.Universal.UniParameter" /> object. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniParameterCollection.Add(System.String,Devart.Data.Universal.UniDbType,System.Int32,System.String)">
      <summary>Adds a <see cref="T:Devart.Data.Universal.UniParameter" /> to the <see cref="T:Devart.Data.Universal.UniParameterCollection" /> given the parameter name, data type, column width, and source column name. </summary>
      <keywords>UniParameterCollection.Add method </keywords>
      <keywords>UniParameterCollection.Add method </keywords>
      <param name="parameterName">The name of the parameter. </param>
      <param name="dbType">One of the <see cref="T:Devart.Data.Universal.UniDbType" /> values. </param>
      <param name="size">The width of the column. </param>
      <param name="sourceColumn">The name of the source column. </param>
      <returns>The new <see cref="T:Devart.Data.Universal.UniParameter" /> object. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniParameterCollection.Add(System.String,System.Object)">
      <summary>Adds a <see cref="T:Devart.Data.Universal.UniParameter" /> to the <see cref="T:Devart.Data.Universal.UniParameterCollection" /> given the parameter name and value. </summary>
      <keywords>UniParameterCollection.Add method </keywords>
      <keywords>UniParameterCollection.Add method </keywords>
      <param name="parameterName">The name of the parameter. </param>
      <param name="value">The <see cref="P:Devart.Common.DbParameterBase.Value" /> of the <see cref="T:Devart.Data.Universal.UniParameter" /> to add to the collection. </param>
      <returns>The new <see cref="T:Devart.Data.Universal.UniParameter" /> object. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniParameterCollection.Contains(System.Object)">
      <summary>Gets a value indicating whether a <see cref="T:Devart.Common.DbParameter" /> object exists in the collection. </summary>
      <keywords>UniParameterCollection.Contains method </keywords>
      <keywords>UniParameterCollection.Contains method </keywords>
      <param name="value">The value of the <see cref="T:Devart.Common.DbParameter" /> object to find. </param>
      <returns><see langword="true" /> if the collection contains the <see cref="T:Devart.Common.DbParameter" />; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniParameterCollection.Contains(System.String)">
      <summary>Gets a value indicating whether a <see cref="T:Devart.Common.DbParameter" /> object with the specified parameter name exists in the collection. </summary>
      <keywords>UniParameterCollection.Contains method </keywords>
      <keywords>UniParameterCollection.Contains method </keywords>
      <param name="value">The name of the <see cref="T:Devart.Common.DbParameter" /> object to find. </param>
      <returns><see langword="true" /> if the collection contains the <see cref="T:Devart.Common.DbParameter" />; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniParameterCollection.Insert(System.Int32,System.Object)">
      <summary>Inserts a <see cref="T:Devart.Common.DbParameter" /> into the collection at the specified index. </summary>
      <keywords>UniParameterCollection.Insert method </keywords>
      <keywords>UniParameterCollection.Insert method </keywords>
      <param name="index">The zero-based index where the parameter is to be inserted within the collection. </param>
      <param name="value">The <see cref="T:Devart.Common.DbParameter" /> object to add to the collection. </param>
    </member>
    <member name="P:Devart.Data.Universal.UniParameterCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:Devart.Data.Universal.UniParameter" /> at the specified index. </summary>
      <keywords>UniParameterCollection.Item property </keywords>
      <keywords>UniParameterCollection.Item property </keywords>
      <param name="index">The zero-based index of the parameter to retrieve. </param>
      <value>The <see cref="T:Devart.Data.Universal.UniParameter" /> at the specified index. </value>
    </member>
    <member name="P:Devart.Data.Universal.UniParameterCollection.Item(System.String)">
      <summary>Gets or sets the <see cref="T:Devart.Data.Universal.UniParameter" /> with the specified name. </summary>
      <keywords>UniParameterCollection.Item property </keywords>
      <keywords>UniParameterCollection.Item property </keywords>
      <param name="parameterName">The name of the parameter to retrieve. </param>
      <value>The <see cref="T:Devart.Data.Universal.UniParameter" /> with the specified name. </value>
    </member>
    <member name="M:Devart.Data.Universal.UniParameterCollection.Remove(System.Object)">
      <summary>Removes the specified <see cref="T:Devart.Common.DbParameter" /> from the collection. </summary>
      <keywords>UniParameterCollection.Remove method </keywords>
      <keywords>UniParameterCollection.Remove method </keywords>
      <param name="value">The <see cref="T:Devart.Common.DbParameter" /> object to remove from the collection. </param>
    </member>
    <member name="M:Devart.Data.Universal.UniParameterCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:Devart.Common.DbParameter" /> at the specified index from the collection. </summary>
      <keywords>UniParameterCollection.RemoveAt method </keywords>
      <keywords>UniParameterCollection.RemoveAt method </keywords>
      <param name="index">The zero-based index of the parameter to remove. </param>
      <overloads>Removes the specified <see cref="T:Devart.Data.Universal.UniParameter" /> from the collection. </overloads>
    </member>
    <member name="M:Devart.Data.Universal.UniParameterCollection.RemoveAt(System.String)">
      <summary>Removes the <see cref="T:Devart.Common.DbParameter" /> with the specified name from the collection. </summary>
      <keywords>UniParameterCollection.RemoveAt method </keywords>
      <keywords>UniParameterCollection.RemoveAt method </keywords>
      <param name="parameterName">The name of the parameter to remove. </param>
    </member>
    <member name="T:Devart.Data.Universal.UniProvider">
      <summary>Represents arbitrary .NET data provider. </summary>
    </member>
    <member name="T:Devart.Data.Universal.UniProviderFactory">
      <summary>Represents a factory required to create inheritors of generic base classes to use with dotConnect Universal. </summary>
    </member>
    <member name="M:Devart.Data.Universal.UniProviderFactory.#ctor()">
      <summary>Creates an instance of <see cref="T:Devart.Data.Universal.UniProviderFactory" />. </summary>
    </member>
    <member name="P:Devart.Data.Universal.UniProviderFactory.CanCreateDataSourceEnumerator">
      <summary>Gets a value indicating whether the <see cref="T:Devart.Data.Universal.UniProviderFactory" /> can create a <see cref="T:Devart.Common.DbDataSourceEnumerator" /> object. </summary>
      <keywords>UniProviderFactory.CanCreateDataSourceEnumerator property </keywords>
    </member>
    <member name="M:Devart.Data.Universal.UniProviderFactory.CreateCommand()">
      <summary>Creates and returns a <see cref="T:Devart.Data.Universal.UniCommand" /> object. </summary>
      <keywords>UniProviderFactory.CreateCommand method </keywords>
      <returns>A <see cref="T:Devart.Data.Universal.UniCommand" /> object. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniProviderFactory.CreateCommandBuilder()">
      <summary>Creates and returns a <see cref="T:Devart.Data.Universal.UniCommandBuilder" /> object. </summary>
      <keywords>UniProviderFactory.CreateCommandBuilder method </keywords>
      <returns>A <see cref="T:Devart.Data.Universal.UniCommandBuilder" /> object. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniProviderFactory.CreateConnection()">
      <summary>Creates and returns a <see cref="T:Devart.Data.Universal.UniConnection" /> object. </summary>
      <keywords>UniProviderFactory.CreateConnection method </keywords>
      <returns>A <see cref="T:Devart.Data.Universal.UniConnection" /> object. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniProviderFactory.CreateConnectionStringBuilder()">
      <summary>Creates and returns a <see cref="T:Devart.Data.Universal.UniConnectionStringBuilder" /> object. </summary>
      <keywords>UniProviderFactory.CreateConnectionStringBuilder method </keywords>
      <returns>A <see cref="T:Devart.Data.Universal.UniConnectionStringBuilder" /> object. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniProviderFactory.CreateDataAdapter()">
      <summary>Creates and returns a <see cref="T:Devart.Data.Universal.UniDataAdapter" /> object. </summary>
      <keywords>UniProviderFactory.CreateDataAdapter method </keywords>
      <returns>A <see cref="T:Devart.Data.Universal.UniDataAdapter" /> object. </returns>
    </member>
    <member name="M:Devart.Data.Universal.UniProviderFactory.CreateParameter()">
      <summary>Creates and returns a <see cref="T:Devart.Data.Universal.UniParameter" /> object. </summary>
      <keywords>UniProviderFactory.CreateParameter method </keywords>
      <returns>A <see cref="T:Devart.Data.Universal.UniParameter" /> object. </returns>
    </member>
    <member name="F:Devart.Data.Universal.UniProviderFactory.Instance">
      <summary>Returns the instance of <see cref="T:Devart.Data.Universal.UniProviderFactory" />. </summary>
      <keywords>UniProviderFactory.Instance field </keywords>
    </member>
    <member name="T:Devart.Data.Universal.UniRowUpdatedEventArgs">
      <summary>Provides data for the <see cref="E:Devart.Data.Universal.UniDataAdapter.RowUpdated" /> event. </summary>
    </member>
    <member name="M:Devart.Data.Universal.UniRowUpdatedEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.Universal.UniRowUpdatedEventArgs" /> class. </summary>
      <param name="row">The <see cref="T:System.Data.DataRow" /> sent through an update operation. </param>
      <param name="command">The <see cref="T:Devart.Data.Universal.UniCommand" /> executed when <see cref="M:System.Data.Common.DbDataAdapter.Update()" /> is called. </param>
      <param name="statementType">One of the <see cref="T:System.Data.StatementType" /> values that specifies the type of query executed. </param>
      <param name="tableMapping">The <see cref="T:System.Data.Common.DataTableMapping" /> sent through <see cref="M:System.Data.Common.DbDataAdapter.Update()" />. </param>
    </member>
    <member name="P:Devart.Data.Universal.UniRowUpdatedEventArgs.Command">
      <summary>Gets the <see cref="T:Devart.Data.Universal.UniCommand" /> executed when <see cref="M:System.Data.Common.DbDataAdapter.Update()" /> is called. </summary>
      <keywords>UniRowUpdatedEventArgs.Command property </keywords>
      <keywords>UniRowUpdatedEventArgs.Command property </keywords>
      <value>The <see cref="T:Devart.Data.Universal.UniCommand" /> to execute when <see cref="M:System.Data.Common.DbDataAdapter.Update()" /> is called. </value>
    </member>
    <member name="T:Devart.Data.Universal.UniRowUpdatedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:Devart.Data.Universal.UniDataAdapter.RowUpdated" /> event of an <see cref="T:Devart.Data.Universal.UniDataAdapter" />. </summary>
      <keywords>UniRowUpdatedEventHandler delegate </keywords>
      <param name="sender">The source of the event. </param>
      <param name="e">The <see cref="T:Devart.Data.Universal.UniRowUpdatedEventArgs" /> that contains the event data. </param>
    </member>
    <member name="T:Devart.Data.Universal.UniRowUpdatingEventArgs">
      <summary>Provides data for the <see cref="E:Devart.Data.Universal.UniDataAdapter.RowUpdating" /> event. This class cannot be inherited. </summary>
    </member>
    <member name="M:Devart.Data.Universal.UniRowUpdatingEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.Universal.UniRowUpdatingEventArgs" /> class. </summary>
      <param name="row">The <see cref="T:System.Data.DataRow" /> to update. </param>
      <param name="command">The <see cref="T:Devart.Data.Universal.UniCommand" /> to execute during <see cref="M:System.Data.Common.DbDataAdapter.Update()" /> is called. </param>
      <param name="statementType">One of the <see cref="T:System.Data.StatementType" /> values that specifies the type of query executed. </param>
      <param name="tableMapping">The <see cref="T:System.Data.Common.DataTableMapping" /> sent through <see cref="M:System.Data.Common.DbDataAdapter.Update()" />. </param>
    </member>
    <member name="P:Devart.Data.Universal.UniRowUpdatingEventArgs.Command">
      <summary>Gets or sets the <see cref="T:Devart.Data.Universal.UniCommand" /> to execute when <see cref="M:System.Data.Common.DbDataAdapter.Update()" /> is called. </summary>
      <keywords>UniRowUpdatingEventArgs.Command property </keywords>
      <keywords>UniRowUpdatingEventArgs.Command property </keywords>
      <value>The <see cref="T:Devart.Data.Universal.UniCommand" /> to execute when <see cref="M:System.Data.Common.DbDataAdapter.Update()" /> is called. </value>
    </member>
    <member name="T:Devart.Data.Universal.UniRowUpdatingEventHandler">
      <summary>Represents the method that will handle the <see cref="E:Devart.Data.Universal.UniDataAdapter.RowUpdating" /> event of an <see cref="T:Devart.Data.Universal.UniDataAdapter" />. </summary>
      <keywords>UniRowUpdatingEventHandler delegate </keywords>
      <param name="sender">The source of the event. </param>
      <param name="e">The <see cref="T:Devart.Data.Universal.UniRowUpdatingEventArgs" /> that contains the event data. </param>
    </member>
    <member name="T:Devart.Data.Universal.UniScript">
      <summary>Serves to execute series of SQL statements separated by special symbols. </summary>
    </member>
    <member name="M:Devart.Data.Universal.UniScript.#ctor()">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.Universal.UniScript" /> class. </summary>
      <overloads>Initializes a new instance of the <see cref="T:Devart.Data.Universal.UniScript" /> class. </overloads>
    </member>
    <member name="M:Devart.Data.Universal.UniScript.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.Universal.UniScript" /> class with the text of the query. </summary>
      <param name="scriptText">The text of the query. </param>
    </member>
    <member name="M:Devart.Data.Universal.UniScript.#ctor(System.String,Devart.Data.Universal.UniConnection)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.Universal.UniScript" /> class  with the text of the query and a <see cref="T:Devart.Data.Universal.UniConnection" /> object. </summary>
      <param name="scriptText">The text of the query. </param>
      <param name="connection">A <see cref="T:Devart.Data.Universal.UniConnection" /> object that represents the connection to a database. </param>
    </member>
    <member name="P:Devart.Data.Universal.UniScript.Connection">
      <summary>Gets or sets the <see cref="T:Devart.Data.Universal.UniConnection" /> used by this instance of the <see cref="T:Devart.Data.Universal.UniScript" />. </summary>
      <keywords>UniScript.Connection property </keywords>
      <keywords>UniScript.Connection property </keywords>
      <value>The connection to a data source. The default value is a null reference. </value>
    </member>
    <member name="P:Devart.Data.Universal.UniScript.ScriptText">
      <summary>Gets or sets text of the script. </summary>
      <keywords>UniScript.ScriptText property </keywords>
      <keywords>UniScript.ScriptText property </keywords>
      <value>Script text. The default value is an empty string (""). </value>
    </member>
    <member name="T:Devart.Data.Universal.UniTransaction">
      <summary>Represents a SQL transaction to be made in the  database. </summary>
    </member>
    <member name="M:Devart.Data.Universal.UniTransaction.Commit()">
      <summary>Commits the database transaction. </summary>
      <keywords>UniTransaction.Commit method </keywords>
      <keywords>UniTransaction.Commit method </keywords>
    </member>
    <member name="M:Devart.Data.Universal.UniTransaction.Dispose()">
      <summary>Releases the unmanaged resources used by the <see cref="T:Devart.Data.Universal.UniTransaction" /> and optionally releases the managed resources. </summary>
      <keywords>UniTransaction.Dispose method </keywords>
      <keywords>UniTransaction.Dispose method </keywords>
    </member>
    <member name="P:Devart.Data.Universal.UniTransaction.IsolationLevel">
      <summary>Specifies the <see cref="T:System.Data.IsolationLevel" /> for this transaction. </summary>
      <keywords>UniTransaction.IsolationLevel property </keywords>
      <keywords>UniTransaction.IsolationLevel property </keywords>
      <value>The <see cref="T:System.Data.IsolationLevel" /> for this transaction. The default value is <see cref="T:System.Data.IsolationLevel.ReadCommitted" />. </value>
    </member>
    <member name="M:Devart.Data.Universal.UniTransaction.Rollback()">
      <summary>Rolls back a database transaction from a pending state. </summary>
      <keywords>UniTransaction.Rollback method </keywords>
      <keywords>UniTransaction.Rollback method </keywords>
    </member>
  </members>
</doc>